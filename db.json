{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":1,"renderable":0},{"_id":"themes/nextd/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/nextd/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/nextd/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/nextd/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/nextd/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/nextd/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/nextd/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/nextd/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/nextd/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/nextd/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/nextd/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/nextd/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/nextd/source/images/logo.png","path":"images/logo.png","modified":1,"renderable":1},{"_id":"themes/nextd/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/nextd/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/nextd/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/nextd/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/nextd/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/nextd/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/favicon.ico","hash":"a7d047f0799c44e6dbdb0f6a35106b8aa027d7e2","modified":1494832230685},{"_id":"source/google091459981c22016a.html","hash":"85f4d2476dfdbf504e4122a9afcbae018f4d9cfe","modified":1494462594286},{"_id":"source/robots.txt","hash":"faf4a7dc40136be7a67d7fbf7f65873a6ceba30e","modified":1494462594298},{"_id":"themes/nextd/.bowerrc","hash":"20038353db532b4c40625419d396da7359f89cbe","modified":1491377277861},{"_id":"themes/nextd/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1491377277861},{"_id":"themes/nextd/.gitignore","hash":"80710b94ff2f6c013859ebffffe90f9295fc94ed","modified":1491377277862},{"_id":"themes/nextd/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1491377277862},{"_id":"themes/nextd/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1491377277864},{"_id":"themes/nextd/.javascript_ignore","hash":"beb0b95736650284ceb712a162cc033847a83cd3","modified":1491377277864},{"_id":"themes/nextd/README.en.md","hash":"f947d9a552da869f0dbef140ceeeb7b040b0f4a4","modified":1491377277871},{"_id":"themes/nextd/_config.yml","hash":"a5bd5194a1809192cb9004a5946aa8281e823677","modified":1497933448104},{"_id":"themes/nextd/_config.yml.rej","hash":"d69d3cfcf081c2340181f1058b6bf938fd161296","modified":1491633530718},{"_id":"themes/nextd/bower.json","hash":"da39b00fcdf2e7a42af412de0a4d3617cc6d7084","modified":1491377277873},{"_id":"themes/nextd/gulpfile.coffee","hash":"4e8c1082fa82e383494ff5b5963b7936d9c7bb2e","modified":1491377277873},{"_id":"themes/nextd/package.json","hash":"e7a38d853632b51e9a604a16452f55510a26630f","modified":1491635547874},{"_id":"source/_data/next.yml","hash":"2e5a91fba39373ec8dbc96559a1ba3a720e2b834","modified":1491377277854},{"_id":"source/_posts/HttpClient学习记录.md","hash":"124fabd6581c6dc1f79c964f7137ec2ffebe370b","modified":1507971440282},{"_id":"source/_posts/git bash修改主题配色.md","hash":"8f39bfafbbc41912a6c1a0cc5e3fc6ad678a790f","modified":1497931634895},{"_id":"source/_posts/hello-world.md","hash":"cadfca7b034a7795b673cb89b6708f9b50a06711","modified":1494564400224},{"_id":"source/_posts/Web开发中前后端的模板引擎.md","hash":"6a015b501defccf1be9ec977960cbb4da4f14ffe","modified":1497931690547},{"_id":"source/_posts/jsp页面中获取session对象.md","hash":"db4ee1ac77188748000c77287197c62aa5a9ef95","modified":1496907368012},{"_id":"source/_posts/ngrok外网映射.md","hash":"5238e6179238d286d9dcf706ebf70fc4ce5863e4","modified":1497944053783},{"_id":"source/_posts/为Next主题添加canvas-ribbon.md","hash":"52d6b93e24c3c76ec05a55ef16c9aee44f14b3ad","modified":1497931725932},{"_id":"source/_posts/从0到有-如何搭建个人博客.md","hash":"cb68389f42b695c4b9dc716e067683a82e7f2638","modified":1497931708055},{"_id":"source/_posts/微信开发模式接入.md","hash":"c2b2b0747ee0bfb7dba4e13f30fefd0b94238d60","modified":1499765088817},{"_id":"source/about/index.md","hash":"b839146a7790a6e7de24715d730caa183d8cb728","modified":1490840453573},{"_id":"source/project/README.md","hash":"a6ec07f42d4b756242d98b5ec9dc3acc1219f2ed","modified":1491630749259},{"_id":"source/project/index.html","hash":"20cdc56145b890c950fb68c80f9913a6d24a4c05","modified":1491638485926},{"_id":"source/tags/index.md","hash":"03145e1fc029e83b2771977f2f5e714a0e2eb01b","modified":1490920529044},{"_id":"themes/nextd/.github/CONTRIBUTING.md","hash":"4312fb37fa2b8663006be3c4fe01125ec01171c1","modified":1491377277862},{"_id":"themes/nextd/.github/ISSUE_TEMPLATE.md","hash":"2692e36cc35b1594530981e7727771f601720a43","modified":1491377277862},{"_id":"themes/nextd/.idea/modules.xml","hash":"e5e69be44641f37328f88505bd6b2221b45586fb","modified":1491373128564},{"_id":"themes/nextd/.idea/nextd.iml","hash":"402e38def734b476c4c697c9a36892567ab6af8b","modified":1491373128565},{"_id":"themes/nextd/languages/de.yml","hash":"4c3ffeb0d214c807a226dd98214958cb5483df1c","modified":1491377277873},{"_id":"themes/nextd/languages/default.yml","hash":"d2f6784b9c6567b64e58736e36025dbf96d863d4","modified":1491377277874},{"_id":"themes/nextd/languages/en.yml","hash":"df81ab6b1cf3c88ed053d3766381cd12eb659fe3","modified":1491377277874},{"_id":"themes/nextd/languages/fr-FR.yml","hash":"d8a40fe025fad6f42df0cf16d4be2d513769b062","modified":1491377277874},{"_id":"themes/nextd/languages/id.yml","hash":"19537c8bae42c4c2e7d06a64537e8dfd503b7e19","modified":1491377277875},{"_id":"themes/nextd/languages/ja.yml","hash":"e594aa42a33c489e4a65065659a01bb76c3c0cb5","modified":1491377277875},{"_id":"themes/nextd/languages/ko.yml","hash":"c59676f2af80c3c594c34c4a0fcbf65fd8864ff3","modified":1491377277879},{"_id":"themes/nextd/languages/pt-BR.yml","hash":"81498b783372f11b2149bd2b1731e78432760a0e","modified":1491377277884},{"_id":"themes/nextd/languages/pt.yml","hash":"4c64594f477905d5d2d9ca2422f03175b7b0c617","modified":1491377277885},{"_id":"themes/nextd/languages/ru.yml","hash":"c3aedb94decf05a301662afc3398ab563dd9995a","modified":1491377277885},{"_id":"themes/nextd/languages/zh-Hans.yml","hash":"80d460b59eded85995d16c69fb26a8547b2a27f0","modified":1491377277888},{"_id":"themes/nextd/languages/zh-hk.yml","hash":"88e603eb0f3fd25c35bb37bd30372fd77bba7c46","modified":1491377277892},{"_id":"themes/nextd/languages/zh-tw.yml","hash":"04479b419c72b71fd34046f3fc33ebda4fe8de84","modified":1491377277896},{"_id":"themes/nextd/layout/_layout.swig","hash":"cfc0ec5923c1ac74ec8c17184e454f3899ba7afe","modified":1491377277899},{"_id":"themes/nextd/layout/archive.swig","hash":"fec0d362cb78c4736e86a1bd12a09943b44c0c5a","modified":1491377277945},{"_id":"themes/nextd/layout/category.swig","hash":"f4f3988e9b927fb91c7fe54062c3fc8eaec884f2","modified":1491377277945},{"_id":"themes/nextd/layout/index.swig","hash":"f0ce3b57ef18a4434b128e5555f6e2d9612f8e34","modified":1494462594316},{"_id":"themes/nextd/layout/page.swig","hash":"0ec203e971c3cffba7f1d544ade434ad348c50f9","modified":1491377277951},{"_id":"themes/nextd/layout/post.swig","hash":"d3218e5998c12239bf1d7d88d588e9f2d8484f53","modified":1494564400226},{"_id":"themes/nextd/layout/schedule.swig","hash":"595013860078799d455af4965b3a7c5c4fd3923c","modified":1491377277952},{"_id":"themes/nextd/layout/tag.swig","hash":"8f2daf0e0460e7abb35db7b7d1865722607f1f90","modified":1491377277952},{"_id":"themes/nextd/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1491377277953},{"_id":"themes/nextd/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1491377278137},{"_id":"themes/nextd/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1491377278137},{"_id":"themes/nextd/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1491377278137},{"_id":"themes/nextd/.idea/workspace.xml","hash":"03431f52f885a0d05d6e6fc8954c679075ed605e","modified":1494564839785},{"_id":"themes/nextd/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491377278023},{"_id":"source/project/stylesheets/style.css","hash":"fabc637b707a215b0794ee48c601c68e2ea8db70","modified":1484915242000},{"_id":"source/project/canvas-ribbon/canvas-ribbon.min.js","hash":"b69360968057c5a277152094978e9244cb05eeb0","modified":1491636634580},{"_id":"source/project/canvas-ribbon/index.html","hash":"19e3ed7f44969b07ed3519c2262f601a4c761a91","modified":1491637268540},{"_id":"themes/nextd/.idea/inspectionProfiles/Project_Default.xml","hash":"62981ca258671eb2e922c824b39a75c2f000fa29","modified":1491373128563},{"_id":"themes/nextd/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1491377277898},{"_id":"themes/nextd/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1491377277898},{"_id":"themes/nextd/layout/_macro/post-collapse.swig","hash":"b87a5122dbff1d5fccf8f3d09d1640bd4b01c4a0","modified":1491377277899},{"_id":"themes/nextd/layout/_macro/post-header.swig","hash":"7edad2781da755f61f2515d865563098f16ace86","modified":1491377277900},{"_id":"themes/nextd/layout/_macro/post.swig","hash":"7db6f52a8ebba07c9a98de3fa64fcc75122999b5","modified":1494462594315},{"_id":"themes/nextd/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1491377277901},{"_id":"themes/nextd/layout/_macro/sidebar.swig","hash":"9fc9f89c169439d7584197930359b758eb198a1c","modified":1491377277901},{"_id":"themes/nextd/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1491377277901},{"_id":"themes/nextd/layout/_scripts/baidu-push.swig","hash":"c5db707b46eac6a5df1d2a77f8556945a66fd181","modified":1491377277924},{"_id":"themes/nextd/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1491377277924},{"_id":"themes/nextd/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1491377277924},{"_id":"themes/nextd/layout/_scripts/vendors.swig","hash":"51292a6750ef9640027bfa31be75d911cae3287b","modified":1491377277944},{"_id":"themes/nextd/layout/_partials/comments.swig","hash":"9379d67b0df624c46d39c82577e15f6226df13c8","modified":1491377277902},{"_id":"themes/nextd/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1491377277902},{"_id":"themes/nextd/layout/_partials/footer.swig","hash":"27e4b731c791a9db0822b5cfde81ef728ef9e273","modified":1491377277902},{"_id":"themes/nextd/layout/_partials/head.swig","hash":"881abebed3a7fa71827365b0ba0e84ec525eeb7f","modified":1491377277915},{"_id":"themes/nextd/layout/_partials/header.swig","hash":"b99897618ba3afe4bc6254af714e07133f11f204","modified":1494402816227},{"_id":"themes/nextd/layout/_partials/page-header.swig","hash":"dfbb6e9692333166aa78231ad12b2a40c153cbcb","modified":1491377277917},{"_id":"themes/nextd/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1491377277917},{"_id":"themes/nextd/layout/_partials/search.swig","hash":"95b55fe35f2d2c22f2cc055d4379b5435314c7ec","modified":1491377277917},{"_id":"themes/nextd/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1491377277953},{"_id":"themes/nextd/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1491377277956},{"_id":"themes/nextd/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1491377277957},{"_id":"themes/nextd/scripts/tags/note.js","hash":"7dc14db08f2c74f8f1952534b424f220f5c000c6","modified":1491377277958},{"_id":"themes/nextd/scripts/tags/full-image.js","hash":"86194a05a8c6499de0b2aaa525d6de135778c0ae","modified":1491377277957},{"_id":"themes/nextd/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1491377278023},{"_id":"themes/nextd/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1491377278024},{"_id":"themes/nextd/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1491377278024},{"_id":"themes/nextd/source/images/avatar.jpg","hash":"f1b5fb1cbe7ff1cfbbf2655cc74750d06aa43e0d","modified":1491377278024},{"_id":"themes/nextd/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1491377278025},{"_id":"themes/nextd/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1491377278026},{"_id":"themes/nextd/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1491377278025},{"_id":"themes/nextd/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1491377278026},{"_id":"themes/nextd/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1491377278026},{"_id":"themes/nextd/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1491377278027},{"_id":"themes/nextd/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1491377278027},{"_id":"themes/nextd/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1491377278026},{"_id":"themes/nextd/source/images/logo.png","hash":"6385f99b912ff8d4088bf14c984b31600a8870aa","modified":1494402816230},{"_id":"themes/nextd/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1491377278027},{"_id":"themes/nextd/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1491377278027},{"_id":"themes/nextd/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1491377278028},{"_id":"themes/nextd/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1491377278028},{"_id":"themes/nextd/test/nextd_home_preview.jpg","hash":"5330f0a0abc72d8b6fb6f22ff422854d9e59963b","modified":1491377278153},{"_id":"themes/nextd/test/nextd_post_preview.jpg","hash":"01a99326013f75a6f8980751c6c8ea322e890857","modified":1491377278182},{"_id":"themes/nextd/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491377277931},{"_id":"themes/nextd/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491377277931},{"_id":"themes/nextd/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491377278008},{"_id":"themes/nextd/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491377278008},{"_id":"themes/nextd/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491377278010},{"_id":"themes/nextd/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491377278022},{"_id":"themes/nextd/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1491377278023},{"_id":"themes/nextd/layout/_components/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1491377277897},{"_id":"themes/nextd/layout/_components/algolia-search/dom.swig","hash":"bb2c3a926bb7f8fea54d424882b25d93dfde7ae6","modified":1491377277897},{"_id":"themes/nextd/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1491377277925},{"_id":"themes/nextd/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1491377277932},{"_id":"themes/nextd/layout/_scripts/third-party/analytics.swig","hash":"91c5353fcb94cc3b3f265b06ad2341734bc4c826","modified":1491377277932},{"_id":"themes/nextd/layout/_scripts/third-party/comments.swig","hash":"7357167cc8004c90b6b6f60762d54d04b6ce8e0d","modified":1491377277935},{"_id":"themes/nextd/layout/_scripts/third-party/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1491377277938},{"_id":"themes/nextd/layout/_scripts/third-party/localsearch.swig","hash":"a2b8c5a67f748b07395f6f630769df9d0f15c54e","modified":1491377277942},{"_id":"themes/nextd/layout/_scripts/third-party/mathjax.swig","hash":"4a5c6df1579a4ca72ed17f7dbd6d16a509aa7dc8","modified":1491377277943},{"_id":"themes/nextd/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1491377277944},{"_id":"themes/nextd/layout/_scripts/third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1491377277943},{"_id":"themes/nextd/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1491377277916},{"_id":"themes/nextd/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1491377277916},{"_id":"themes/nextd/layout/_partials/search/localsearch.swig","hash":"dec9045a65f0dc946157fa6adbf16bdaa70475fd","modified":1491377277918},{"_id":"themes/nextd/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1491377277918},{"_id":"themes/nextd/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1491377277918},{"_id":"themes/nextd/layout/_partials/share/add-this.swig","hash":"bf8e9223a40748b2e3ef77d753a8e1dbbce8095e","modified":1491377277919},{"_id":"themes/nextd/layout/_partials/share/baidushare.swig","hash":"3fdde03f45a80f7a85097a40b40358adde618fc7","modified":1491377277922},{"_id":"themes/nextd/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1491377277923},{"_id":"themes/nextd/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1491377277923},{"_id":"themes/nextd/source/css/_custom/custom.styl","hash":"dad6c7838ed4d3e882001c3bcba6c16850f6c8cd","modified":1494564400227},{"_id":"themes/nextd/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1491377278009},{"_id":"themes/nextd/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1491377278010},{"_id":"themes/nextd/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1491377278021},{"_id":"themes/nextd/source/css/_variables/Pisces.styl","hash":"27618ff30a6d34ef50312d6373fad144b70d14e8","modified":1491377278022},{"_id":"themes/nextd/source/css/_variables/base.styl","hash":"8b0c44315a90b9a951f66bfc6b043ee2c4b4e7f5","modified":1491633530726},{"_id":"themes/nextd/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1491377278028},{"_id":"themes/nextd/source/js/src/algolia-search.js","hash":"84bdc8a4fe127849a5c99bdefe1d0b65ee1a4a0a","modified":1491377278031},{"_id":"themes/nextd/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1491377278032},{"_id":"themes/nextd/source/js/src/bootstrap.js","hash":"2d24c2137a9fe659b9912716e83880e0e699080c","modified":1491377278031},{"_id":"themes/nextd/source/js/src/motion.js","hash":"7ce732f355674f62b90bad30cf1f56e3d8962f4c","modified":1491377278032},{"_id":"themes/nextd/source/js/src/post-details.js","hash":"37a641bd13231f2744074a27350ae784c4e42b89","modified":1491377278032},{"_id":"themes/nextd/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1491377278033},{"_id":"themes/nextd/source/js/src/utils.js","hash":"ee8290de70fb91a1b4d21435bbe91f5a79f4ed69","modified":1491377278034},{"_id":"themes/nextd/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1491377278034},{"_id":"themes/nextd/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"01847264e1bb1a9f635fd29ca0ebc1e44d233600","modified":1494564803692},{"_id":"themes/nextd/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1491377278044},{"_id":"themes/nextd/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1491377278045},{"_id":"themes/nextd/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1491377278045},{"_id":"themes/nextd/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1491377278050},{"_id":"themes/nextd/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1491377278051},{"_id":"themes/nextd/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1491377278051},{"_id":"themes/nextd/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1491377278051},{"_id":"themes/nextd/source/lib/font-awesome/.bower.json","hash":"8868275e8b6340c87a81c69a54ed138d11fb3c3e","modified":1491377278052},{"_id":"themes/nextd/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1491377278053},{"_id":"themes/nextd/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1491377278053},{"_id":"themes/nextd/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1491377278053},{"_id":"themes/nextd/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1491377278053},{"_id":"themes/nextd/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1491377278121},{"_id":"themes/nextd/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1491377278121},{"_id":"themes/nextd/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1491377278122},{"_id":"themes/nextd/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1491377278121},{"_id":"themes/nextd/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1491377278122},{"_id":"themes/nextd/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1491377278122},{"_id":"themes/nextd/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1491377278119},{"_id":"themes/nextd/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1491377278123},{"_id":"themes/nextd/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1491377278123},{"_id":"themes/nextd/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1491377278136},{"_id":"themes/nextd/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1491377278136},{"_id":"themes/nextd/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1491377278136},{"_id":"themes/nextd/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1491377278120},{"_id":"themes/nextd/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"ae5b8597603d4e42ee66ed121544e7b1c644767e","modified":1491377277933},{"_id":"themes/nextd/layout/_scripts/third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1491377277933},{"_id":"themes/nextd/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1491377277933},{"_id":"themes/nextd/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"3931f9c3bac3970a3f54c9d0072ae4c950aa176c","modified":1491377277934},{"_id":"themes/nextd/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1491377277934},{"_id":"themes/nextd/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1491377277934},{"_id":"themes/nextd/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1491377277935},{"_id":"themes/nextd/layout/_scripts/third-party/comments/duoshuo.swig","hash":"0a2f48971d86ea72e1a8fd1d8bbf2b7d423666b2","modified":1491377277937},{"_id":"themes/nextd/layout/_scripts/third-party/comments/disqus.swig","hash":"f8b6a3017ab79057ce99f1ccb512193d67f4a35f","modified":1491377277936},{"_id":"themes/nextd/layout/_scripts/third-party/comments/gentie.swig","hash":"0f38f053841ef77cdce56a84cfbb4dd4c3329486","modified":1491377277937},{"_id":"themes/nextd/layout/_scripts/third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1491377277937},{"_id":"themes/nextd/layout/_scripts/third-party/comments/youyan.swig","hash":"f40a697fd046415924a142eec1effad70f3cb187","modified":1491377277938},{"_id":"themes/nextd/source/css/_common/outline/outline.styl","hash":"520159c2260d5af8dbcc4b710a99c0f8714c9b7d","modified":1491377277999},{"_id":"themes/nextd/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1491377277958},{"_id":"themes/nextd/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1491377277958},{"_id":"themes/nextd/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1491377277959},{"_id":"themes/nextd/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1491377277959},{"_id":"themes/nextd/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1491377277979},{"_id":"themes/nextd/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1491377277986},{"_id":"themes/nextd/source/css/_common/scaffolding/base.styl","hash":"5477a2a3d37d6237196b577ebafebc866a3fd5ab","modified":1491633530720},{"_id":"themes/nextd/source/css/_common/scaffolding/helpers.styl","hash":"773ed7316ecde9616e28975b0ab004b143f87b48","modified":1491377278006},{"_id":"themes/nextd/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1491377278006},{"_id":"themes/nextd/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1491377278007},{"_id":"themes/nextd/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1491377278007},{"_id":"themes/nextd/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1491377278010},{"_id":"themes/nextd/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1491377278010},{"_id":"themes/nextd/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1491377278011},{"_id":"themes/nextd/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1491377278011},{"_id":"themes/nextd/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1491377278011},{"_id":"themes/nextd/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1491377278011},{"_id":"themes/nextd/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1491377278012},{"_id":"themes/nextd/source/css/_schemes/Pisces/_brand.styl","hash":"2a62281dedab5844b2e03cb73401591a54cf619e","modified":1494464220069},{"_id":"themes/nextd/source/css/_schemes/Pisces/_layout.styl","hash":"1ed0b17de59a30802169ba6f522a3d7d0f604ad8","modified":1494464220069},{"_id":"themes/nextd/source/css/_schemes/Pisces/_menu.styl","hash":"123737a165b10442a50ae7fc46669198955d6295","modified":1491377278020},{"_id":"themes/nextd/source/css/_schemes/Pisces/_posts.styl","hash":"0303ea67f6de971ca26c8065d1839efeed2c6f4a","modified":1491377278020},{"_id":"themes/nextd/source/css/_schemes/Pisces/_sidebar.styl","hash":"983c0723e8cfd84b67c2e66da0c26425a8db06e0","modified":1491377278021},{"_id":"themes/nextd/source/css/_schemes/Pisces/index.styl","hash":"b9c02eb18bee6a1af281929d3a74446c84fba41c","modified":1491377278021},{"_id":"themes/nextd/source/css/_schemes/Muse/_layout.styl","hash":"124b540f059fd1ed13514362007cfc70355278c6","modified":1491377278013},{"_id":"themes/nextd/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1491377278013},{"_id":"themes/nextd/source/css/_schemes/Muse/_menu.styl","hash":"13af2fb21fabfc4df4b577ce5363e13d03daff71","modified":1491377278013},{"_id":"themes/nextd/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1491377278014},{"_id":"themes/nextd/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1491377278014},{"_id":"themes/nextd/source/js/src/schemes/pisces.js","hash":"9890d95abfff0b4dcc55fbea3fa9d2c340486d8c","modified":1491377278033},{"_id":"themes/nextd/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1491377278045},{"_id":"themes/nextd/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1491377278046},{"_id":"themes/nextd/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1491377278046},{"_id":"themes/nextd/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1491377278047},{"_id":"themes/nextd/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1491377278046},{"_id":"themes/nextd/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1491377278047},{"_id":"themes/nextd/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1491377278050},{"_id":"themes/nextd/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1491377278049},{"_id":"themes/nextd/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1491377278050},{"_id":"themes/nextd/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1491377278052},{"_id":"themes/nextd/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1491377278052},{"_id":"themes/nextd/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1491377278064},{"_id":"themes/nextd/source/lib/font-awesome/css/font-awesome.css","hash":"a02674d823c7b577d38c3cdb91953993b6e4b3a0","modified":1491377278064},{"_id":"themes/nextd/source/lib/font-awesome/css/font-awesome.min.css","hash":"3c1d63dd1176c77f9f4cdb1616fbb08c31b9822f","modified":1491377278065},{"_id":"themes/nextd/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1491377278123},{"_id":"themes/nextd/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1491377278123},{"_id":"themes/nextd/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1491377278075},{"_id":"themes/nextd/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1491377278115},{"_id":"themes/nextd/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1491377278076},{"_id":"themes/nextd/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1491377278119},{"_id":"themes/nextd/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1491377278135},{"_id":"themes/nextd/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1491377277960},{"_id":"themes/nextd/source/css/_common/components/header/header.styl","hash":"90432053efe78bd7f6fa01528bff794a32dfa7c8","modified":1491377277961},{"_id":"themes/nextd/source/css/_common/components/header/headerband.styl","hash":"83796acbe29c71c7086d3b6505242202be692098","modified":1491377277961},{"_id":"themes/nextd/source/css/_common/components/header/menu.styl","hash":"139e71437d4bfbc06e0a79c2e262278a1ddf1adc","modified":1491377277961},{"_id":"themes/nextd/source/css/_common/components/header/site-home.styl","hash":"3b09712f29f8436ef319ab12117f2d299f0dacef","modified":1494464220067},{"_id":"themes/nextd/source/css/_common/components/header/site-meta.styl","hash":"767cfdcba8805202af717eb9b81113a7e85d7640","modified":1494464220068},{"_id":"themes/nextd/source/css/_common/components/header/site-nav.styl","hash":"c77481d05182a4b0e6b495e26222a3df51d3eb52","modified":1491384475338},{"_id":"themes/nextd/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1491377277977},{"_id":"themes/nextd/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1491377277978},{"_id":"themes/nextd/source/css/_common/components/pages/pages.styl","hash":"b8f9c95702e87fd0b170ab586c82c9718a245f8a","modified":1491377277978},{"_id":"themes/nextd/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1491377277978},{"_id":"themes/nextd/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1491377277979},{"_id":"themes/nextd/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1491377277963},{"_id":"themes/nextd/source/css/_common/components/highlight/theme.styl","hash":"12e366f04497e3f44388fd40111a03e02f7c26af","modified":1491377277977},{"_id":"themes/nextd/source/css/_common/components/highlight/highlight.styl","hash":"70ec8d38d2b3ee1906793d1dcb68032adfa65f03","modified":1491377277968},{"_id":"themes/nextd/source/css/_common/components/post/post-button.styl","hash":"595fa8fad7aa169db20ded00bdb2902eaefc07d8","modified":1494462594317},{"_id":"themes/nextd/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1491377277980},{"_id":"themes/nextd/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1491377277980},{"_id":"themes/nextd/source/css/_common/components/post/post-expand.styl","hash":"1ff9cf4d3b45d7c95ffffc3c2a2bc8852a3443c1","modified":1491377277981},{"_id":"themes/nextd/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1491377277981},{"_id":"themes/nextd/source/css/_common/components/post/post-header.styl","hash":"db22b474c9f0f8470e4039173ac53e9594d92ea5","modified":1491377277981},{"_id":"themes/nextd/source/css/_common/components/post/post-meta.styl","hash":"a3c73014859b1b2f1db04d384697702537a0a3c8","modified":1491377277982},{"_id":"themes/nextd/source/css/_common/components/post/post-nav.styl","hash":"929fac3a505bacbce6ba63009fd15851e2a8669d","modified":1491377277982},{"_id":"themes/nextd/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1491377277982},{"_id":"themes/nextd/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1491377277982},{"_id":"themes/nextd/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1491377277983},{"_id":"themes/nextd/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1491377277983},{"_id":"themes/nextd/source/css/_common/components/post/post.styl","hash":"1550390eee1de556118581d85e13dabdd169e732","modified":1491377277983},{"_id":"themes/nextd/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1491377277984},{"_id":"themes/nextd/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1491377277984},{"_id":"themes/nextd/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1491377277984},{"_id":"themes/nextd/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1491377277985},{"_id":"themes/nextd/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1491377277985},{"_id":"themes/nextd/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1491377277985},{"_id":"themes/nextd/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1491377277986},{"_id":"themes/nextd/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1491377277986},{"_id":"themes/nextd/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1491377277986},{"_id":"themes/nextd/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1491377277987},{"_id":"themes/nextd/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1491377277987},{"_id":"themes/nextd/source/css/_common/components/tags/note.styl","hash":"8420b4be386469337243336aee694297875bd439","modified":1491377277987},{"_id":"themes/nextd/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1491377277987},{"_id":"themes/nextd/source/css/_common/components/tags/tags.styl","hash":"a83f493e494f5c73fab8f6f5b686ef1670490095","modified":1491377277988},{"_id":"themes/nextd/source/css/_common/components/third-party/algolia-search.styl","hash":"3b1aabbab57b0b1fafa311feb1212f59e78e7928","modified":1491377277997},{"_id":"themes/nextd/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1491377277997},{"_id":"themes/nextd/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"7f7e9df15148608a9c29326dd880d8e8e8efc0ec","modified":1491377277997},{"_id":"themes/nextd/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1491377277998},{"_id":"themes/nextd/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1491377277998},{"_id":"themes/nextd/source/css/_common/components/third-party/gentie.styl","hash":"cd526e814f9323a79fe835085d64867d34b3715d","modified":1491377277998},{"_id":"themes/nextd/source/css/_common/components/third-party/localsearch.styl","hash":"f36316fb5b40cabde49c874db8ffe4166d49ee48","modified":1491377277999},{"_id":"themes/nextd/source/css/_common/components/third-party/third-party.styl","hash":"7bd182d918f3117335a5ee87a1b544e6d2b54d7d","modified":1491377277999},{"_id":"themes/nextd/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1491377278012},{"_id":"themes/nextd/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1491377278013},{"_id":"themes/nextd/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1491377278014},{"_id":"themes/nextd/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1491377278047},{"_id":"themes/nextd/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1491377278048},{"_id":"themes/nextd/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1491377278048},{"_id":"themes/nextd/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1491377278048},{"_id":"themes/nextd/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1491377278049},{"_id":"themes/nextd/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1491377278049},{"_id":"themes/nextd/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1491377278107},{"_id":"themes/nextd/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1491377278044},{"_id":"themes/nextd/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1491377278088},{"_id":"public/project/canvas-ribbon/canvas-ribbon.min.js","hash":"b04a1cef65c20df3d4b6d152c0add8e724bc2078","modified":1507971586764},{"_id":"public/project/stylesheets/style.css","hash":"fabc637b707a215b0794ee48c601c68e2ea8db70","modified":1507971586789},{"_id":"public/baidusitemap.xml","hash":"ab028b50d3ad0d9f7d903f673977c8da1f2070fd","modified":1507971586790},{"_id":"public/sitemap.xml","hash":"64dc54fbba1147c08b5ef703d2572783375e127a","modified":1507971586790},{"_id":"public/google091459981c22016a.html","hash":"928beba174417b567a33d3426ebc866609460357","modified":1507971586799},{"_id":"public/project/README.html","hash":"d77bd5b6ef8b3369022b1b3ad6f47a9d0377d2b0","modified":1507971586799},{"_id":"public/about/index.html","hash":"97fca5b5b74a55473fa6a78192e7a21ecd1cde56","modified":1507971586799},{"_id":"public/tags/index.html","hash":"5c89a78fe268e80c73fd9e5b0df352c3c3f9ab84","modified":1507971586799},{"_id":"public/project/index.html","hash":"7efd9f63960776ad3816339a8a2259a2b16cd72f","modified":1507971586799},{"_id":"public/archives/2017/05/index.html","hash":"989aeed9a13fb38acddb436eb9063ce4b48f96a9","modified":1507971586799},{"_id":"public/archives/2017/10/index.html","hash":"a755450707ecc23282886411b71bf8dd15933ad9","modified":1507971586799},{"_id":"public/tags/Git-bash/index.html","hash":"920b9422df2cc60bb42cd9bd41733e3af40f21a7","modified":1507971586799},{"_id":"public/tags/Git/index.html","hash":"be864e99d42e124ab946b2067f3bbd8ab1879da7","modified":1507971586799},{"_id":"public/tags/Scheme/index.html","hash":"c36203d0ecfb1e28e45376ebfb824ee97bb5e3a2","modified":1507971586799},{"_id":"public/tags/Shell/index.html","hash":"50756035b3e3405936e359df1d4fa86cbd5aac12","modified":1507971586799},{"_id":"public/tags/Hexo/index.html","hash":"6c63c6677942ffbca5129aaded11b18880d9adf2","modified":1507971586799},{"_id":"public/tags/GitHub/index.html","hash":"632071d50a22735904338806bda5f0947de77542","modified":1507971586799},{"_id":"public/tags/HttpClient/index.html","hash":"8a458963f6223c32eb675416e0cacd1a4ee1e2ac","modified":1507971586799},{"_id":"public/tags/Java/index.html","hash":"9316b0073d277510891985767966586572d7594b","modified":1507971586799},{"_id":"public/tags/jade/index.html","hash":"507ec5c2be99cb9edb1e8eca25ce52607fd8a8ec","modified":1507971586800},{"_id":"public/tags/模板引擎/index.html","hash":"012b61f7e3adf811fa016e536c15a49cda59e8ac","modified":1507971586800},{"_id":"public/tags/angualr/index.html","hash":"24e3b28d739d89d633db1eb1ee1a43a4e416bb4f","modified":1507971586800},{"_id":"public/tags/mvc/index.html","hash":"e4fbbf0fb057b742c0a25acb88cbcfedb5072062","modified":1507971586800},{"_id":"public/tags/Nodejs/index.html","hash":"142c8d5905047d1fc8224e83a5fd79032381d749","modified":1507971586800},{"_id":"public/tags/jsp/index.html","hash":"eaf3650466836690e7b1ee6e52dd850b4d7eb216","modified":1507971586800},{"_id":"public/tags/session/index.html","hash":"e72c3d3db745ae030ab76d647fdd5d75f0cbc440","modified":1507971586800},{"_id":"public/tags/el表达式/index.html","hash":"a42ca9b9288b8886714a07fbcbd7da4d2e818ed3","modified":1507971586800},{"_id":"public/tags/Canvas/index.html","hash":"d9287991481e0c3da3e28389ea4670c0b4ac45a8","modified":1507971586800},{"_id":"public/tags/Next/index.html","hash":"a3e8a9e2b4359fee9ce850eeca5d8d424adc0405","modified":1507971586800},{"_id":"public/tags/JavaScript/index.html","hash":"bca862387f9e8d6c3944f339e2180ca3c5a36ca1","modified":1507971586800},{"_id":"public/tags/ngrok/index.html","hash":"4e3afa7b20683da0fbd85ce7fb93ba6712633676","modified":1507971586800},{"_id":"public/tags/外网映射/index.html","hash":"95657e0861f8f8207394d9b5e85c814dfcac10fc","modified":1507971586800},{"_id":"public/tags/微信开发/index.html","hash":"22cf232f3df7b638aa60f44234b0090756351b39","modified":1507971586800},{"_id":"public/tags/Servlet/index.html","hash":"69a5a574d430f49bb962b96583f9848b35276b1b","modified":1507971586800},{"_id":"public/project/canvas-ribbon/index.html","hash":"070f11a1d3af023091f445621e7c0e8c7d294016","modified":1507971586800},{"_id":"public/2017/微信开发模式接入/index.html","hash":"c2f7e789056794e7886c47653ae7aeeb443e4ac5","modified":1507971586800},{"_id":"public/2017/HttpClient学习记录/index.html","hash":"310620d64534cbc2fad4e55ecda4978e6b082c6f","modified":1507971586800},{"_id":"public/2017/ngrok外网映射/index.html","hash":"95779a7c47905c4a3117b061f198ee29cd2ead95","modified":1507971586801},{"_id":"public/2017/jsp页面中获取session对象/index.html","hash":"8056a16e6b49b9070335e819139b2bd0bec32bef","modified":1507971586801},{"_id":"public/2017/Web开发中前后端的模板引擎/index.html","hash":"c316520d068d6d73e358f7e16ae8f66b88bcc0c8","modified":1507971586801},{"_id":"public/2017/git bash修改主题配色/index.html","hash":"bc776e21358b0d0d6d781d3936ab17a2ed5363d9","modified":1507971586801},{"_id":"public/2017/为Next主题添加canvas-ribbon/index.html","hash":"04aee21e030f68730d722dde2f24e24abbd51589","modified":1507971586801},{"_id":"public/2017/从0到有-如何搭建个人博客/index.html","hash":"28ea9b7c7d1f337e447193bc02b7128f91cd0707","modified":1507971586801},{"_id":"public/2017/hello-world/index.html","hash":"0bc5ea3f644068a03b8b1f7b073437cc0f680116","modified":1507971586801},{"_id":"public/archives/index.html","hash":"d0c1e25cfce601591e7cad2664f7e5831b5c9305","modified":1507971586801},{"_id":"public/archives/2017/index.html","hash":"95abac7b873540c19a37ef8b35f58247bf9299ad","modified":1507971586801},{"_id":"public/archives/2017/04/index.html","hash":"9ff7d2a78a6c714b06127ed8730df4c976433922","modified":1507971586801},{"_id":"public/archives/2017/06/index.html","hash":"58b50fec1092e13d69d461a2e24a13b2f7019fd4","modified":1507971586801},{"_id":"public/index.html","hash":"44dd0ac4aa2149f8b8bf288f71a3385107900f6f","modified":1507971586801},{"_id":"public/favicon.ico","hash":"a7d047f0799c44e6dbdb0f6a35106b8aa027d7e2","modified":1507971586829},{"_id":"public/robots.txt","hash":"faf4a7dc40136be7a67d7fbf7f65873a6ceba30e","modified":1507971586829},{"_id":"public/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1507971586829},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1507971586830},{"_id":"public/images/avatar.jpg","hash":"f1b5fb1cbe7ff1cfbbf2655cc74750d06aa43e0d","modified":1507971586830},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1507971586830},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1507971586830},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1507971586830},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1507971586830},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1507971586830},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1507971586830},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1507971586830},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1507971586830},{"_id":"public/images/logo.png","hash":"6385f99b912ff8d4088bf14c984b31600a8870aa","modified":1507971586830},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1507971586830},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1507971586830},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1507971586830},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1507971586830},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1507971586830},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1507971586830},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1507971586830},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1507971586831},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1507971586831},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1507971586831},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1507971586831},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1507971586831},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1507971586831},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1507971586831},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1507971587460},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1507971587466},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1507971587469},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1507971587469},{"_id":"public/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1507971587475},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1507971587475},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1507971587475},{"_id":"public/js/src/motion.js","hash":"68b78d70d57e29e45df15439e3d82592df08adc0","modified":1507971587475},{"_id":"public/js/src/bootstrap.js","hash":"6c9ac964b6d49629ec873c19b568bca6fdc50ab7","modified":1507971587475},{"_id":"public/js/src/post-details.js","hash":"b4a1d9bff08d0d3fbc12ab955c5cfff1042e63ae","modified":1507971587475},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1507971587475},{"_id":"public/js/src/utils.js","hash":"dc243a9202171ef938b3752e85c025127a3bead6","modified":1507971587475},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"01847264e1bb1a9f635fd29ca0ebc1e44d233600","modified":1507971587475},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1507971587475},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1507971587476},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1507971587476},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1507971587476},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1507971587476},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1507971587476},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1507971587476},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1507971587476},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1507971587476},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1507971587476},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1507971587476},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1507971587476},{"_id":"public/js/src/schemes/pisces.js","hash":"72b3c235dee064500d6a2906cadf8ea898d3c05b","modified":1507971587476},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1507971587476},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1507971587476},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1507971587476},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1507971587476},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1507971587476},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1507971587476},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1507971587476},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1507971587476},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1507971587477},{"_id":"public/css/main.css","hash":"8a0724f32617fcbbe1220a06b5ca933c3a1c4c8f","modified":1507971587477},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1507971587477},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1507971587477},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1507971587477},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1507971587477},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1507971587477},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1507971587477},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1507971587477},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1507971587477},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1507971587477},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1507971587478},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1507971587478},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1507971587513}],"Category":[],"Data":[],"Page":[{"_content":"google-site-verification: google091459981c22016a.html","source":"google091459981c22016a.html","raw":"google-site-verification: google091459981c22016a.html","date":"2017-05-11T00:29:54.286Z","updated":"2017-05-11T00:29:54.286Z","path":"google091459981c22016a.html","title":"","comments":1,"layout":"page","_id":"cj8r3chly0000zoh1s28qvolp","content":"google-site-verification: google091459981c22016a.html","excerpt":"","more":"google-site-verification: google091459981c22016a.html"},{"_content":"List my Github projects.\n\n```js\n/**\n * @author zproo\n * @email zproo@outlook.com\n * @github zproo@github\n * @comment list all the projects of zproo\n */\n```\n\nThe website theme from [tink.im](http://tink.im/).\n","source":"project/README.md","raw":"List my Github projects.\n\n```js\n/**\n * @author zproo\n * @email zproo@outlook.com\n * @github zproo@github\n * @comment list all the projects of zproo\n */\n```\n\nThe website theme from [tink.im](http://tink.im/).\n","date":"2017-04-08T05:52:29.259Z","updated":"2017-04-08T05:52:29.259Z","path":"project/README.html","title":"","comments":1,"layout":"page","_id":"cj8r3chrk0002zoh1wcds5akf","content":"<p>List my Github projects.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * @author zproo</div><div class=\"line\"> * @email zproo@outlook.com</div><div class=\"line\"> * @github zproo@github</div><div class=\"line\"> * @comment list all the projects of zproo</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<p>The website theme from <a href=\"http://tink.im/\" target=\"_blank\" rel=\"external\">tink.im</a>.</p>\n","excerpt":"","more":"<p>List my Github projects.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * @author zproo</div><div class=\"line\"> * @email zproo@outlook.com</div><div class=\"line\"> * @github zproo@github</div><div class=\"line\"> * @comment list all the projects of zproo</div><div class=\"line\"> */</span></div></pre></td></tr></table></figure>\n<p>The website theme from <a href=\"http://tink.im/\">tink.im</a>.</p>\n"},{"date":"2017-03-29T11:22:50.000Z","type":"about","comments":0,"_content":"\n","source":"about/index.md","raw":"---\ndate: 2017-03-29 19:22:50\ntype: \"about\"\ncomments: false\n---\n\n","updated":"2017-03-30T02:20:53.573Z","path":"about/index.html","title":"","layout":"page","_id":"cj8r3chro0004zoh1m2f34yff","content":"","excerpt":"","more":""},{"date":"2017-03-28T13:23:03.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ndate: 2017-03-28 21:23:03\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-03-31T00:35:29.044Z","path":"tags/index.html","title":"","layout":"page","_id":"cj8r3chru0007zoh1taflz2l2","content":"","excerpt":"","more":""},{"_content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n  <meta charset=\"utf-8\" />\n  <title>zproo 's GitHub</title>\n  <link rel=\"stylesheet\" href=\"stylesheets/style.css\" />\n  <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico?v=5.0.1\" />\n</head>\n\n<body onselectstart=\"return false\">\n\n<div class=\"wrap\">\n\n  <h1>/**\n * <b>@name</b> zproo\n * <b>@mail</b> zproo@outlook.com\n * <b>@github</b> <a href= \"https://github.com/zproo\" target=\"_blank\">zproo@github</a>\n * <b>@comment</b> list all the projects of zproo.\n */</h1>\n\n  <br />\n  {\n  <ul>\n    <li class=\"profile\">\n      <a href=\"https://github.com/zproo/canvas-ribbon\" target=\"_blank\">\n        <h3><b>canvas-ribbon.js:</b><span class=\"link\">网页背景彩带</span></h3>\n      </a>\n    </li>\n\n  </ul>\n  }\n\n  <br />\n  <h1 class=\"comment\">/** <b>@author</b> zproo */</h1>\n</div>\n\n<script type=\"text/javascript\">\n    document.oncontextmenu=function(e){return false;}\n</script>\n<!--<span style=\"display:none\">\n  <script src=\"http://s4.cnzz.com/stat.php?id=1257060683&web_id=1257060683\" language=\"JavaScript\"></script>\n</span>-->\n</body>\n</html>\n","source":"project/index.html","raw":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n  <meta charset=\"utf-8\" />\n  <title>zproo 's GitHub</title>\n  <link rel=\"stylesheet\" href=\"stylesheets/style.css\" />\n  <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico?v=5.0.1\" />\n</head>\n\n<body onselectstart=\"return false\">\n\n<div class=\"wrap\">\n\n  <h1>/**\n * <b>@name</b> zproo\n * <b>@mail</b> zproo@outlook.com\n * <b>@github</b> <a href= \"https://github.com/zproo\" target=\"_blank\">zproo@github</a>\n * <b>@comment</b> list all the projects of zproo.\n */</h1>\n\n  <br />\n  {\n  <ul>\n    <li class=\"profile\">\n      <a href=\"https://github.com/zproo/canvas-ribbon\" target=\"_blank\">\n        <h3><b>canvas-ribbon.js:</b><span class=\"link\">网页背景彩带</span></h3>\n      </a>\n    </li>\n\n  </ul>\n  }\n\n  <br />\n  <h1 class=\"comment\">/** <b>@author</b> zproo */</h1>\n</div>\n\n<script type=\"text/javascript\">\n    document.oncontextmenu=function(e){return false;}\n</script>\n<!--<span style=\"display:none\">\n  <script src=\"http://s4.cnzz.com/stat.php?id=1257060683&web_id=1257060683\" language=\"JavaScript\"></script>\n</span>-->\n</body>\n</html>\n","date":"2017-04-08T08:04:58.265Z","updated":"2017-04-08T08:01:25.926Z","path":"project/index.html","title":"","comments":1,"layout":"page","_id":"cj8r3chrx0009zoh1q24nuvwg","content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n  <meta charset=\"utf-8\">\n  <title>zproo 's GitHub</title>\n  <link rel=\"stylesheet\" href=\"stylesheets/style.css\">\n  <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico?v=5.0.1\">\n</head>\n\n<body onselectstart=\"return false\">\n\n<div class=\"wrap\">\n\n  <h1>/**\n * <b>@name</b> zproo\n * <b>@mail</b> zproo@outlook.com\n * <b>@github</b> <a href=\"https://github.com/zproo\" target=\"_blank\">zproo@github</a>\n * <b>@comment</b> list all the projects of zproo.\n */</h1>\n\n  <br>\n  {\n  <ul>\n    <li class=\"profile\">\n      <a href=\"https://github.com/zproo/canvas-ribbon\" target=\"_blank\">\n        <h3><b>canvas-ribbon.js:</b><span class=\"link\">网页背景彩带</span></h3>\n      </a>\n    </li>\n\n  </ul>\n  }\n\n  <br>\n  <h1 class=\"comment\">/** <b>@author</b> zproo */</h1>\n</div>\n\n<script type=\"text/javascript\">\n    document.oncontextmenu=function(e){return false;}\n</script>\n<!--<span style=\"display:none\">\n  <script src=\"http://s4.cnzz.com/stat.php?id=1257060683&web_id=1257060683\" language=\"JavaScript\"></script>\n</span>-->\n</body>\n</html>\n","excerpt":"","more":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n  <meta charset=\"utf-8\" />\n  <title>zproo 's GitHub</title>\n  <link rel=\"stylesheet\" href=\"stylesheets/style.css\" />\n  <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico?v=5.0.1\" />\n</head>\n\n<body onselectstart=\"return false\">\n\n<div class=\"wrap\">\n\n  <h1>/**\n * <b>@name</b> zproo\n * <b>@mail</b> zproo@outlook.com\n * <b>@github</b> <a href= \"https://github.com/zproo\" target=\"_blank\">zproo@github</a>\n * <b>@comment</b> list all the projects of zproo.\n */</h1>\n\n  <br />\n  {\n  <ul>\n    <li class=\"profile\">\n      <a href=\"https://github.com/zproo/canvas-ribbon\" target=\"_blank\">\n        <h3><b>canvas-ribbon.js:</b><span class=\"link\">网页背景彩带</span></h3>\n      </a>\n    </li>\n\n  </ul>\n  }\n\n  <br />\n  <h1 class=\"comment\">/** <b>@author</b> zproo */</h1>\n</div>\n\n<script type=\"text/javascript\">\n    document.oncontextmenu=function(e){return false;}\n</script>\n<!--<span style=\"display:none\">\n  <script src=\"http://s4.cnzz.com/stat.php?id=1257060683&web_id=1257060683\" language=\"JavaScript\"></script>\n</span>-->\n</body>\n</html>\n"},{"_content":"/**\n * Created by zproo on 2017/4/8.\n */\n!function(){function a(a,b,c){return Number(a.getAttribute(b))||c}function p(){for(e.clearRect(0,0,g,h),j=[{x:0,y:.7*h+i},{x:0,y:.7*h-i}];j[1].x<g+i;)q(j[0],j[1])}function q(a,b){e.beginPath(),e.moveTo(a.x,a.y),e.lineTo(b.x,b.y);var c=b.x+(2*o()-.25)*i,d=r(b.y);e.lineTo(c,d),e.closePath(),l-=m/-50,e.fillStyle=\"#\"+(127*n(l)+128<<16|127*n(l+m/3)+128<<8|127*n(l+2*(m/3))+128).toString(16),e.fill(),j[0]=j[1],j[1]={x:c,y:d}}function r(a){var b=a+(2*o()-1.1)*i;return b>h||0>b?r(a):b}var b,c,j,d,e,f,g,h,i,k,l,m,n,o;document.addEventListener(\"touchmove\",function(a){a.preventDefault()}),b=document.getElementById(\"ribbon\"),config={zindex:a(b,\"zIndex\",-1),alpha:a(b,\"alpha\",.6),ribbon_width:a(b,\"size\",90)},c=document.createElement(\"canvas\"),c.style.cssText=\"position:fixed;top:0;left:0;z-index:\"+config.zindex,document.getElementsByTagName(\"body\")[0].appendChild(c),d=c,e=d.getContext(\"2d\"),f=window.devicePixelRatio||1,g=window.innerWidth,h=window.innerHeight,i=config.ribbon_width,k=Math,l=0,m=2*k.PI,n=k.cos,o=k.random,d.width=g*f,d.height=h*f,e.scale(f,f),e.globalAlpha=config.alpha,document.onclick=p,document.ontouchstart=p,p()}();","source":"project/canvas-ribbon/canvas-ribbon.min.js","raw":"/**\n * Created by zproo on 2017/4/8.\n */\n!function(){function a(a,b,c){return Number(a.getAttribute(b))||c}function p(){for(e.clearRect(0,0,g,h),j=[{x:0,y:.7*h+i},{x:0,y:.7*h-i}];j[1].x<g+i;)q(j[0],j[1])}function q(a,b){e.beginPath(),e.moveTo(a.x,a.y),e.lineTo(b.x,b.y);var c=b.x+(2*o()-.25)*i,d=r(b.y);e.lineTo(c,d),e.closePath(),l-=m/-50,e.fillStyle=\"#\"+(127*n(l)+128<<16|127*n(l+m/3)+128<<8|127*n(l+2*(m/3))+128).toString(16),e.fill(),j[0]=j[1],j[1]={x:c,y:d}}function r(a){var b=a+(2*o()-1.1)*i;return b>h||0>b?r(a):b}var b,c,j,d,e,f,g,h,i,k,l,m,n,o;document.addEventListener(\"touchmove\",function(a){a.preventDefault()}),b=document.getElementById(\"ribbon\"),config={zindex:a(b,\"zIndex\",-1),alpha:a(b,\"alpha\",.6),ribbon_width:a(b,\"size\",90)},c=document.createElement(\"canvas\"),c.style.cssText=\"position:fixed;top:0;left:0;z-index:\"+config.zindex,document.getElementsByTagName(\"body\")[0].appendChild(c),d=c,e=d.getContext(\"2d\"),f=window.devicePixelRatio||1,g=window.innerWidth,h=window.innerHeight,i=config.ribbon_width,k=Math,l=0,m=2*k.PI,n=k.cos,o=k.random,d.width=g*f,d.height=h*f,e.scale(f,f),e.globalAlpha=config.alpha,document.onclick=p,document.ontouchstart=p,p()}();","date":"2017-04-08T07:34:10.254Z","updated":"2017-04-08T07:30:34.580Z","path":"project/canvas-ribbon/canvas-ribbon.min.js","layout":"false","title":"","comments":1,"_id":"cj8r3chuu0021zoh1s0r6dfj1","content":"/**\n * Created by zproo on 2017/4/8.\n */\n!function(){function a(a,b,c){return Number(a.getAttribute(b))||c}function p(){for(e.clearRect(0,0,g,h),j=[{x:0,y:.7*h+i},{x:0,y:.7*h-i}];j[1].x<g+i;)q(j[0],j[1])}function q(a,b){e.beginpath(),e.moveto(a.x,a.y),e.lineto(b.x,b.y);var=\"\" c=\"b.x+(2*o()-.25)*i,d=r(b.y);e.lineTo(c,d),e.closePath(),l-=m/-50,e.fillStyle=\"#\"+(127*n(l)+128<<16|127*n(l+m/3)+128<<8|127*n(l+2*(m/3))+128).toString(16),e.fill(),j[0]=j[1],j[1]={x:c,y:d}}function\" r(a){var=\"\" b=\"a+(2*o()-1.1)*i;return\">h||0>b?r(a):b}var b,c,j,d,e,f,g,h,i,k,l,m,n,o;document.addEventListener(\"touchmove\",function(a){a.preventDefault()}),b=document.getElementById(\"ribbon\"),config={zindex:a(b,\"zIndex\",-1),alpha:a(b,\"alpha\",.6),ribbon_width:a(b,\"size\",90)},c=document.createElement(\"canvas\"),c.style.cssText=\"position:fixed;top:0;left:0;z-index:\"+config.zindex,document.getElementsByTagName(\"body\")[0].appendChild(c),d=c,e=d.getContext(\"2d\"),f=window.devicePixelRatio||1,g=window.innerWidth,h=window.innerHeight,i=config.ribbon_width,k=Math,l=0,m=2*k.PI,n=k.cos,o=k.random,d.width=g*f,d.height=h*f,e.scale(f,f),e.globalAlpha=config.alpha,document.onclick=p,document.ontouchstart=p,p()}();</g+i;)q(j[0],j[1])}function>","excerpt":"","more":"/**\n * Created by zproo on 2017/4/8.\n */\n!function(){function a(a,b,c){return Number(a.getAttribute(b))||c}function p(){for(e.clearRect(0,0,g,h),j=[{x:0,y:.7*h+i},{x:0,y:.7*h-i}];j[1].x<g+i;)q(j[0],j[1])}function q(a,b){e.beginPath(),e.moveTo(a.x,a.y),e.lineTo(b.x,b.y);var c=b.x+(2*o()-.25)*i,d=r(b.y);e.lineTo(c,d),e.closePath(),l-=m/-50,e.fillStyle=\"#\"+(127*n(l)+128<<16|127*n(l+m/3)+128<<8|127*n(l+2*(m/3))+128).toString(16),e.fill(),j[0]=j[1],j[1]={x:c,y:d}}function r(a){var b=a+(2*o()-1.1)*i;return b>h||0>b?r(a):b}var b,c,j,d,e,f,g,h,i,k,l,m,n,o;document.addEventListener(\"touchmove\",function(a){a.preventDefault()}),b=document.getElementById(\"ribbon\"),config={zindex:a(b,\"zIndex\",-1),alpha:a(b,\"alpha\",.6),ribbon_width:a(b,\"size\",90)},c=document.createElement(\"canvas\"),c.style.cssText=\"position:fixed;top:0;left:0;z-index:\"+config.zindex,document.getElementsByTagName(\"body\")[0].appendChild(c),d=c,e=d.getContext(\"2d\"),f=window.devicePixelRatio||1,g=window.innerWidth,h=window.innerHeight,i=config.ribbon_width,k=Math,l=0,m=2*k.PI,n=k.cos,o=k.random,d.width=g*f,d.height=h*f,e.scale(f,f),e.globalAlpha=config.alpha,document.onclick=p,document.ontouchstart=p,p()}();"},{"_content":"* {\n  margin: 0;\n  padding: 0;\n  \n  /* Goin' all DOS-y */\n  -webkit-font-smoothing: none;\n}\n\nbody {\n  background: #111;\n  font: 16px/18px \"Courier New\", Courier, mono;\n  color: #fff;\n}\n\ndiv.wrap {\n  max-width: 1100px;\n  margin: 100px auto 0;\n}\n\na {\n  text-decoration: none;\n  color: #fff;\n}\n\nh1, h3 {\n  font: bold 16px/18px \"Courier New\", Courier, mono;\n  white-space: pre;\n  color: #999;\n}\nh1 b {\n  color: #ddd;\n}\n\n.comment {\n  margin-top: 30px;\n}\n\nh3 b {\n  display: inline-block;\n  color: #fff;\n  width: 200px;\n}\n\nh3 span {\n  color: #aaa;\n  font-style: normal;\n}\nh3 span.link:hover, a h3:hover span.link {\n  -webkit-animation: blink .75s linear infinite;\n  -moz-animation: blink .75s linear infinite;\n  -ms-animation: blink .75s linear infinite;\n  -o-animation: blink .75s linear infinite;\n  animation: blink .75s linear infinite;\n}\n\nul {\n  list-style: none;\n  margin-left: 30px;\n}\nul li {\n  margin-top: 3px;\n}\n\n@-webkit-keyframes blink {\n  0% {\n    background: #ddd;\n    color: #000;\n  }\n  50% {\n    background: #ddd;\n    color: #000;\n  }\n  50.01% {\n    background: transparent;\n    color: #aaa;\n  }\n  99.99% {\n    background: transparent;\n    color: #aaa;\n  }\n  100% {\n    background: #ddd;\n    color: #aaa;\n  }\n}\n\n@-moz-keyframes blink {\n   0% {\n    background: #ddd;\n    color: #000;\n   }\n   50% {\n    background: #ddd;\n    color: #000;\n   }\n   50.01% {\n    background: transparent;\n    color: #aaa;\n   }\n   99.99% {\n    background: transparent;\n    color: #aaa;\n   }\n   100% {\n    background: #ddd;\n    color: #aaa;\n   }\n}\n\n@-ms-keyframes blink {\n   0% {\n    background: #ddd;\n    color: #000;\n   }\n   50% {\n    background: #ddd;\n    color: #000;\n   }\n   50.01% {\n    background: transparent;\n    color: #aaa;\n   }\n   99.99% {\n    background: transparent;\n    color: #aaa;\n   }\n   100% {\n    background: #ddd;\n    color: #aaa;\n   }\n}\n\n@-o-keyframes blink {\n  0% {\n    background: #ddd;\n    color: #000;\n  }\n  50% {\n    background: #ddd;\n    color: #000;\n  }\n  50.01% {\n    background: transparent;\n    color: #aaa;\n  }\n  99.99% {\n    background: transparent;\n    color: #aaa;\n  }\n  100% {\n    background: #ddd;\n    color: #aaa;\n  }\n}\n\n@keyframes blink {\n  0% {\n    background: #ddd;\n    color: #000;\n  }\n  50% {\n    background: #ddd;\n    color: #000;\n  }\n  50.01% {\n    background: transparent;\n    color: #aaa;\n  }\n  99.99% {\n    background: transparent;\n    color: #aaa;\n  }\n  100% {\n    background: #ddd;\n    color: #aaa;\n  }\n}\n\n[touch-action=\"none\"]{ -ms-touch-action: none; touch-action: none; }\n[touch-action=\"pan-x\"]{ -ms-touch-action: pan-x; touch-action: pan-x; }\n[touch-action=\"pan-y\"]{ -ms-touch-action: pan-y; touch-action: pan-y; }\n[touch-action=\"scroll\"],[touch-action=\"pan-x pan-y\"],[touch-action=\"pan-y pan-x\"]{ -ms-touch-action: pan-x pan-y; touch-action: pan-x pan-y; }","source":"project/stylesheets/style.css","raw":"* {\n  margin: 0;\n  padding: 0;\n  \n  /* Goin' all DOS-y */\n  -webkit-font-smoothing: none;\n}\n\nbody {\n  background: #111;\n  font: 16px/18px \"Courier New\", Courier, mono;\n  color: #fff;\n}\n\ndiv.wrap {\n  max-width: 1100px;\n  margin: 100px auto 0;\n}\n\na {\n  text-decoration: none;\n  color: #fff;\n}\n\nh1, h3 {\n  font: bold 16px/18px \"Courier New\", Courier, mono;\n  white-space: pre;\n  color: #999;\n}\nh1 b {\n  color: #ddd;\n}\n\n.comment {\n  margin-top: 30px;\n}\n\nh3 b {\n  display: inline-block;\n  color: #fff;\n  width: 200px;\n}\n\nh3 span {\n  color: #aaa;\n  font-style: normal;\n}\nh3 span.link:hover, a h3:hover span.link {\n  -webkit-animation: blink .75s linear infinite;\n  -moz-animation: blink .75s linear infinite;\n  -ms-animation: blink .75s linear infinite;\n  -o-animation: blink .75s linear infinite;\n  animation: blink .75s linear infinite;\n}\n\nul {\n  list-style: none;\n  margin-left: 30px;\n}\nul li {\n  margin-top: 3px;\n}\n\n@-webkit-keyframes blink {\n  0% {\n    background: #ddd;\n    color: #000;\n  }\n  50% {\n    background: #ddd;\n    color: #000;\n  }\n  50.01% {\n    background: transparent;\n    color: #aaa;\n  }\n  99.99% {\n    background: transparent;\n    color: #aaa;\n  }\n  100% {\n    background: #ddd;\n    color: #aaa;\n  }\n}\n\n@-moz-keyframes blink {\n   0% {\n    background: #ddd;\n    color: #000;\n   }\n   50% {\n    background: #ddd;\n    color: #000;\n   }\n   50.01% {\n    background: transparent;\n    color: #aaa;\n   }\n   99.99% {\n    background: transparent;\n    color: #aaa;\n   }\n   100% {\n    background: #ddd;\n    color: #aaa;\n   }\n}\n\n@-ms-keyframes blink {\n   0% {\n    background: #ddd;\n    color: #000;\n   }\n   50% {\n    background: #ddd;\n    color: #000;\n   }\n   50.01% {\n    background: transparent;\n    color: #aaa;\n   }\n   99.99% {\n    background: transparent;\n    color: #aaa;\n   }\n   100% {\n    background: #ddd;\n    color: #aaa;\n   }\n}\n\n@-o-keyframes blink {\n  0% {\n    background: #ddd;\n    color: #000;\n  }\n  50% {\n    background: #ddd;\n    color: #000;\n  }\n  50.01% {\n    background: transparent;\n    color: #aaa;\n  }\n  99.99% {\n    background: transparent;\n    color: #aaa;\n  }\n  100% {\n    background: #ddd;\n    color: #aaa;\n  }\n}\n\n@keyframes blink {\n  0% {\n    background: #ddd;\n    color: #000;\n  }\n  50% {\n    background: #ddd;\n    color: #000;\n  }\n  50.01% {\n    background: transparent;\n    color: #aaa;\n  }\n  99.99% {\n    background: transparent;\n    color: #aaa;\n  }\n  100% {\n    background: #ddd;\n    color: #aaa;\n  }\n}\n\n[touch-action=\"none\"]{ -ms-touch-action: none; touch-action: none; }\n[touch-action=\"pan-x\"]{ -ms-touch-action: pan-x; touch-action: pan-x; }\n[touch-action=\"pan-y\"]{ -ms-touch-action: pan-y; touch-action: pan-y; }\n[touch-action=\"scroll\"],[touch-action=\"pan-x pan-y\"],[touch-action=\"pan-y pan-x\"]{ -ms-touch-action: pan-x pan-y; touch-action: pan-x pan-y; }","date":"2017-04-08T05:50:37.463Z","updated":"2017-01-20T12:27:22.000Z","path":"project/stylesheets/style.css","layout":"false","title":"","comments":1,"_id":"cj8r3chuv0022zoh1ge9sg92f","content":"* {\n  margin: 0;\n  padding: 0;\n  \n  /* Goin' all DOS-y */\n  -webkit-font-smoothing: none;\n}\n\nbody {\n  background: #111;\n  font: 16px/18px \"Courier New\", Courier, mono;\n  color: #fff;\n}\n\ndiv.wrap {\n  max-width: 1100px;\n  margin: 100px auto 0;\n}\n\na {\n  text-decoration: none;\n  color: #fff;\n}\n\nh1, h3 {\n  font: bold 16px/18px \"Courier New\", Courier, mono;\n  white-space: pre;\n  color: #999;\n}\nh1 b {\n  color: #ddd;\n}\n\n.comment {\n  margin-top: 30px;\n}\n\nh3 b {\n  display: inline-block;\n  color: #fff;\n  width: 200px;\n}\n\nh3 span {\n  color: #aaa;\n  font-style: normal;\n}\nh3 span.link:hover, a h3:hover span.link {\n  -webkit-animation: blink .75s linear infinite;\n  -moz-animation: blink .75s linear infinite;\n  -ms-animation: blink .75s linear infinite;\n  -o-animation: blink .75s linear infinite;\n  animation: blink .75s linear infinite;\n}\n\nul {\n  list-style: none;\n  margin-left: 30px;\n}\nul li {\n  margin-top: 3px;\n}\n\n@-webkit-keyframes blink {\n  0% {\n    background: #ddd;\n    color: #000;\n  }\n  50% {\n    background: #ddd;\n    color: #000;\n  }\n  50.01% {\n    background: transparent;\n    color: #aaa;\n  }\n  99.99% {\n    background: transparent;\n    color: #aaa;\n  }\n  100% {\n    background: #ddd;\n    color: #aaa;\n  }\n}\n\n@-moz-keyframes blink {\n   0% {\n    background: #ddd;\n    color: #000;\n   }\n   50% {\n    background: #ddd;\n    color: #000;\n   }\n   50.01% {\n    background: transparent;\n    color: #aaa;\n   }\n   99.99% {\n    background: transparent;\n    color: #aaa;\n   }\n   100% {\n    background: #ddd;\n    color: #aaa;\n   }\n}\n\n@-ms-keyframes blink {\n   0% {\n    background: #ddd;\n    color: #000;\n   }\n   50% {\n    background: #ddd;\n    color: #000;\n   }\n   50.01% {\n    background: transparent;\n    color: #aaa;\n   }\n   99.99% {\n    background: transparent;\n    color: #aaa;\n   }\n   100% {\n    background: #ddd;\n    color: #aaa;\n   }\n}\n\n@-o-keyframes blink {\n  0% {\n    background: #ddd;\n    color: #000;\n  }\n  50% {\n    background: #ddd;\n    color: #000;\n  }\n  50.01% {\n    background: transparent;\n    color: #aaa;\n  }\n  99.99% {\n    background: transparent;\n    color: #aaa;\n  }\n  100% {\n    background: #ddd;\n    color: #aaa;\n  }\n}\n\n@keyframes blink {\n  0% {\n    background: #ddd;\n    color: #000;\n  }\n  50% {\n    background: #ddd;\n    color: #000;\n  }\n  50.01% {\n    background: transparent;\n    color: #aaa;\n  }\n  99.99% {\n    background: transparent;\n    color: #aaa;\n  }\n  100% {\n    background: #ddd;\n    color: #aaa;\n  }\n}\n\n[touch-action=\"none\"]{ -ms-touch-action: none; touch-action: none; }\n[touch-action=\"pan-x\"]{ -ms-touch-action: pan-x; touch-action: pan-x; }\n[touch-action=\"pan-y\"]{ -ms-touch-action: pan-y; touch-action: pan-y; }\n[touch-action=\"scroll\"],[touch-action=\"pan-x pan-y\"],[touch-action=\"pan-y pan-x\"]{ -ms-touch-action: pan-x pan-y; touch-action: pan-x pan-y; }","excerpt":"","more":"* {\n  margin: 0;\n  padding: 0;\n  \n  /* Goin' all DOS-y */\n  -webkit-font-smoothing: none;\n}\n\nbody {\n  background: #111;\n  font: 16px/18px \"Courier New\", Courier, mono;\n  color: #fff;\n}\n\ndiv.wrap {\n  max-width: 1100px;\n  margin: 100px auto 0;\n}\n\na {\n  text-decoration: none;\n  color: #fff;\n}\n\nh1, h3 {\n  font: bold 16px/18px \"Courier New\", Courier, mono;\n  white-space: pre;\n  color: #999;\n}\nh1 b {\n  color: #ddd;\n}\n\n.comment {\n  margin-top: 30px;\n}\n\nh3 b {\n  display: inline-block;\n  color: #fff;\n  width: 200px;\n}\n\nh3 span {\n  color: #aaa;\n  font-style: normal;\n}\nh3 span.link:hover, a h3:hover span.link {\n  -webkit-animation: blink .75s linear infinite;\n  -moz-animation: blink .75s linear infinite;\n  -ms-animation: blink .75s linear infinite;\n  -o-animation: blink .75s linear infinite;\n  animation: blink .75s linear infinite;\n}\n\nul {\n  list-style: none;\n  margin-left: 30px;\n}\nul li {\n  margin-top: 3px;\n}\n\n@-webkit-keyframes blink {\n  0% {\n    background: #ddd;\n    color: #000;\n  }\n  50% {\n    background: #ddd;\n    color: #000;\n  }\n  50.01% {\n    background: transparent;\n    color: #aaa;\n  }\n  99.99% {\n    background: transparent;\n    color: #aaa;\n  }\n  100% {\n    background: #ddd;\n    color: #aaa;\n  }\n}\n\n@-moz-keyframes blink {\n   0% {\n    background: #ddd;\n    color: #000;\n   }\n   50% {\n    background: #ddd;\n    color: #000;\n   }\n   50.01% {\n    background: transparent;\n    color: #aaa;\n   }\n   99.99% {\n    background: transparent;\n    color: #aaa;\n   }\n   100% {\n    background: #ddd;\n    color: #aaa;\n   }\n}\n\n@-ms-keyframes blink {\n   0% {\n    background: #ddd;\n    color: #000;\n   }\n   50% {\n    background: #ddd;\n    color: #000;\n   }\n   50.01% {\n    background: transparent;\n    color: #aaa;\n   }\n   99.99% {\n    background: transparent;\n    color: #aaa;\n   }\n   100% {\n    background: #ddd;\n    color: #aaa;\n   }\n}\n\n@-o-keyframes blink {\n  0% {\n    background: #ddd;\n    color: #000;\n  }\n  50% {\n    background: #ddd;\n    color: #000;\n  }\n  50.01% {\n    background: transparent;\n    color: #aaa;\n  }\n  99.99% {\n    background: transparent;\n    color: #aaa;\n  }\n  100% {\n    background: #ddd;\n    color: #aaa;\n  }\n}\n\n@keyframes blink {\n  0% {\n    background: #ddd;\n    color: #000;\n  }\n  50% {\n    background: #ddd;\n    color: #000;\n  }\n  50.01% {\n    background: transparent;\n    color: #aaa;\n  }\n  99.99% {\n    background: transparent;\n    color: #aaa;\n  }\n  100% {\n    background: #ddd;\n    color: #aaa;\n  }\n}\n\n[touch-action=\"none\"]{ -ms-touch-action: none; touch-action: none; }\n[touch-action=\"pan-x\"]{ -ms-touch-action: pan-x; touch-action: pan-x; }\n[touch-action=\"pan-y\"]{ -ms-touch-action: pan-y; touch-action: pan-y; }\n[touch-action=\"scroll\"],[touch-action=\"pan-x pan-y\"],[touch-action=\"pan-y pan-x\"]{ -ms-touch-action: pan-x pan-y; touch-action: pan-x pan-y; }"},{"_content":"<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n<a href=\"https://github.com/DIYgod/DPlayer\" target=\"_blank\" class=\"github-corner\">\n    <svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\"\n         style=\"fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;\">\n        <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n        <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n              fill=\"currentColor\" style=\"transform-origin: 130px 106px;\" class=\"octo-arm\"></path>\n        <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n              fill=\"currentColor\" class=\"octo-body\"></path>\n    </svg>\n</a>\n<style>.github-corner:hover .octo-arm {\n    animation: octocat-wave 560ms ease-in-out\n}\n\n@keyframes octocat-wave {\n    0%, 100% {\n        transform: rotate(0)\n    }\n    20%, 60% {\n        transform: rotate(-25deg)\n    }\n    40%, 80% {\n        transform: rotate(10deg)\n    }\n}\n\n@media (max-width: 500px) {\n    .github-corner:hover .octo-arm {\n        animation: none\n    }\n\n    .github-corner .octo-arm {\n        animation: octocat-wave 560ms ease-in-out\n    }\n}</style>\n<script id=\"ribbon\" src=\"canvas-ribbon.min.js\" zIndex=\"-1\" alpha=\"0.6\" size=\"90\"></script>\n</body>\n</html>\n\n","source":"project/canvas-ribbon/index.html","raw":"<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n<a href=\"https://github.com/DIYgod/DPlayer\" target=\"_blank\" class=\"github-corner\">\n    <svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\"\n         style=\"fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;\">\n        <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n        <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n              fill=\"currentColor\" style=\"transform-origin: 130px 106px;\" class=\"octo-arm\"></path>\n        <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n              fill=\"currentColor\" class=\"octo-body\"></path>\n    </svg>\n</a>\n<style>.github-corner:hover .octo-arm {\n    animation: octocat-wave 560ms ease-in-out\n}\n\n@keyframes octocat-wave {\n    0%, 100% {\n        transform: rotate(0)\n    }\n    20%, 60% {\n        transform: rotate(-25deg)\n    }\n    40%, 80% {\n        transform: rotate(10deg)\n    }\n}\n\n@media (max-width: 500px) {\n    .github-corner:hover .octo-arm {\n        animation: none\n    }\n\n    .github-corner .octo-arm {\n        animation: octocat-wave 560ms ease-in-out\n    }\n}</style>\n<script id=\"ribbon\" src=\"canvas-ribbon.min.js\" zIndex=\"-1\" alpha=\"0.6\" size=\"90\"></script>\n</body>\n</html>\n\n","date":"2017-04-08T08:05:12.056Z","updated":"2017-04-08T07:41:08.540Z","path":"project/canvas-ribbon/index.html","title":"","comments":1,"layout":"page","_id":"cj8r3chuv0023zoh15md2hxih","content":"<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n<a href=\"https://github.com/DIYgod/DPlayer\" target=\"_blank\" class=\"github-corner\">\n    <svg width=\"80\" height=\"80\" viewbox=\"0 0 250 250\" style=\"fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;\">\n        <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"/>\n        <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style=\"transform-origin: 130px 106px;\" class=\"octo-arm\"/>\n        <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"/>\n    </svg>\n</a>\n<style>.github-corner:hover .octo-arm {\n    animation: octocat-wave 560ms ease-in-out\n}\n\n@keyframes octocat-wave {\n    0%, 100% {\n        transform: rotate(0)\n    }\n    20%, 60% {\n        transform: rotate(-25deg)\n    }\n    40%, 80% {\n        transform: rotate(10deg)\n    }\n}\n\n@media (max-width: 500px) {\n    .github-corner:hover .octo-arm {\n        animation: none\n    }\n\n    .github-corner .octo-arm {\n        animation: octocat-wave 560ms ease-in-out\n    }\n}</style>\n<script id=\"ribbon\" src=\"canvas-ribbon.min.js\" zindex=\"-1\" alpha=\"0.6\" size=\"90\"></script>\n</body>\n</html>\n\n","excerpt":"","more":"<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n<a href=\"https://github.com/DIYgod/DPlayer\" target=\"_blank\" class=\"github-corner\">\n    <svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\"\n         style=\"fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;\">\n        <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n        <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n              fill=\"currentColor\" style=\"transform-origin: 130px 106px;\" class=\"octo-arm\"></path>\n        <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n              fill=\"currentColor\" class=\"octo-body\"></path>\n    </svg>\n</a>\n<style>.github-corner:hover .octo-arm {\n    animation: octocat-wave 560ms ease-in-out\n}\n\n@keyframes octocat-wave {\n    0%, 100% {\n        transform: rotate(0)\n    }\n    20%, 60% {\n        transform: rotate(-25deg)\n    }\n    40%, 80% {\n        transform: rotate(10deg)\n    }\n}\n\n@media (max-width: 500px) {\n    .github-corner:hover .octo-arm {\n        animation: none\n    }\n\n    .github-corner .octo-arm {\n        animation: octocat-wave 560ms ease-in-out\n    }\n}</style>\n<script id=\"ribbon\" src=\"canvas-ribbon.min.js\" zIndex=\"-1\" alpha=\"0.6\" size=\"90\"></script>\n</body>\n</html>\n\n"}],"Post":[{"title":"git bash修改主题配色","comment":true,"date":"2017-05-05T06:30:20.000Z","cover":"http://ortur5wom.bkt.clouddn.com/cover-bash.jpg","_content":"\n# 1.获取主题配置文件\n\n在git bash窗口点击右键，选择option选项。\n\n![11ScreenClip](http://ortur5wom.bkt.clouddn.com/bash1.png)\n\n进入`Options`窗口，可以看到looks标签下的`Theme`选择。\n\n![22ScreenClip](http://ortur5wom.bkt.clouddn.com/bash2.png)\n\n但是git bash默认的是没有主题供选择的。我们点击`Theme`下的`Color Schema Designer`按钮，此时我们会来到下面这个网站。\n\n你可以自定义喜欢的背景、文字为你喜欢的搭配，然后点击右上角的`Get Scheme`，这里我们选择`.minttyrc`类型\n\n![3ScreenClip](http://ortur5wom.bkt.clouddn.com/bash3.png)\n\n![44ScreenClip](http://ortur5wom.bkt.clouddn.com/bash4.png)\n\n此时你会获得如下的文件内容：\n\n![55ScreenClip](http://ortur5wom.bkt.clouddn.com/bash5.png)\n\n下面给出文字版：\n\n``` shell\nBackgroundColour=13,25,38\nForegroundColour=217,230,242\nCursorColour=217,230,242\nBlack=0,0,0\nBoldBlack=38,38,38\nRed=184,122,122\nBoldRed=219,189,189\nGreen=122,184,122\nBoldGreen=189,219,189\nYellow=184,184,122\nBoldYellow=219,219,189\nBlue=122,122,184\nBoldBlue=189,189,219\nMagenta=184,122,184\nBoldMagenta=219,189,219\nCyan=122,184,184\nBoldCyan=189,219,219\nWhite=217,217,217\nBoldWhite=255,255,255\n```\n\n（这是上面网站默认的主题配置，你可以直接使用）\n\n# 2.设置Git Bash主题\n\n好的，我们有了主题配置文件，现在我们来设置为Git Bash的主题。\n\n1. 打开git bash命令行（任意位置），输入如下命令,回车\n\n```shell\ncd ~\nvim .minttyrc\n```\n\n2. 进入vim编辑模式后，我们先按`Insert`键，即切换到“插入”状态。就可以通过上下左右移动光标，或空格、退格及回车等进行编辑内容了，和WINDOWS是一样的。我们删除原有内容，将刚才得到的`主题配置文件`复制到此处。\n  ![66ScreenClip](http://ortur5wom.bkt.clouddn.com/bash6.png)\n3. 按键盘左上角的\"ESC\"，左下角的插入状态消失。 然后这时，我们输入“冒号”，即\":\"(不需双引号)，在下方会出现冒号，等待输入命令。再输入\"x\"，即保存退出。（注意：在英文状态下进行输入）\n\n此时，重启Git Bash,你会发现主题配置已经生效！！\n\n\n\n","source":"_posts/git bash修改主题配色.md","raw":"---\ntitle: git bash修改主题配色\ncomment: true\ndate: 2017-05-05 14:30:20\ntags: [Git bash, Git, Scheme,Shell]\ncover: http://ortur5wom.bkt.clouddn.com/cover-bash.jpg\n---\n\n# 1.获取主题配置文件\n\n在git bash窗口点击右键，选择option选项。\n\n![11ScreenClip](http://ortur5wom.bkt.clouddn.com/bash1.png)\n\n进入`Options`窗口，可以看到looks标签下的`Theme`选择。\n\n![22ScreenClip](http://ortur5wom.bkt.clouddn.com/bash2.png)\n\n但是git bash默认的是没有主题供选择的。我们点击`Theme`下的`Color Schema Designer`按钮，此时我们会来到下面这个网站。\n\n你可以自定义喜欢的背景、文字为你喜欢的搭配，然后点击右上角的`Get Scheme`，这里我们选择`.minttyrc`类型\n\n![3ScreenClip](http://ortur5wom.bkt.clouddn.com/bash3.png)\n\n![44ScreenClip](http://ortur5wom.bkt.clouddn.com/bash4.png)\n\n此时你会获得如下的文件内容：\n\n![55ScreenClip](http://ortur5wom.bkt.clouddn.com/bash5.png)\n\n下面给出文字版：\n\n``` shell\nBackgroundColour=13,25,38\nForegroundColour=217,230,242\nCursorColour=217,230,242\nBlack=0,0,0\nBoldBlack=38,38,38\nRed=184,122,122\nBoldRed=219,189,189\nGreen=122,184,122\nBoldGreen=189,219,189\nYellow=184,184,122\nBoldYellow=219,219,189\nBlue=122,122,184\nBoldBlue=189,189,219\nMagenta=184,122,184\nBoldMagenta=219,189,219\nCyan=122,184,184\nBoldCyan=189,219,219\nWhite=217,217,217\nBoldWhite=255,255,255\n```\n\n（这是上面网站默认的主题配置，你可以直接使用）\n\n# 2.设置Git Bash主题\n\n好的，我们有了主题配置文件，现在我们来设置为Git Bash的主题。\n\n1. 打开git bash命令行（任意位置），输入如下命令,回车\n\n```shell\ncd ~\nvim .minttyrc\n```\n\n2. 进入vim编辑模式后，我们先按`Insert`键，即切换到“插入”状态。就可以通过上下左右移动光标，或空格、退格及回车等进行编辑内容了，和WINDOWS是一样的。我们删除原有内容，将刚才得到的`主题配置文件`复制到此处。\n  ![66ScreenClip](http://ortur5wom.bkt.clouddn.com/bash6.png)\n3. 按键盘左上角的\"ESC\"，左下角的插入状态消失。 然后这时，我们输入“冒号”，即\":\"(不需双引号)，在下方会出现冒号，等待输入命令。再输入\"x\"，即保存退出。（注意：在英文状态下进行输入）\n\n此时，重启Git Bash,你会发现主题配置已经生效！！\n\n\n\n","slug":"git bash修改主题配色","published":1,"updated":"2017-06-20T04:07:14.895Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8r3chrg0001zoh1dqweirc6","content":"<h1 id=\"1-获取主题配置文件\"><a href=\"#1-获取主题配置文件\" class=\"headerlink\" title=\"1.获取主题配置文件\"></a>1.获取主题配置文件</h1><p>在git bash窗口点击右键，选择option选项。</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/bash1.png\" alt=\"11ScreenClip\"></p>\n<p>进入<code>Options</code>窗口，可以看到looks标签下的<code>Theme</code>选择。</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/bash2.png\" alt=\"22ScreenClip\"></p>\n<p>但是git bash默认的是没有主题供选择的。我们点击<code>Theme</code>下的<code>Color Schema Designer</code>按钮，此时我们会来到下面这个网站。</p>\n<p>你可以自定义喜欢的背景、文字为你喜欢的搭配，然后点击右上角的<code>Get Scheme</code>，这里我们选择<code>.minttyrc</code>类型</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/bash3.png\" alt=\"3ScreenClip\"></p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/bash4.png\" alt=\"44ScreenClip\"></p>\n<p>此时你会获得如下的文件内容：</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/bash5.png\" alt=\"55ScreenClip\"></p>\n<p>下面给出文字版：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">BackgroundColour=13,25,38</div><div class=\"line\">ForegroundColour=217,230,242</div><div class=\"line\">CursorColour=217,230,242</div><div class=\"line\">Black=0,0,0</div><div class=\"line\">BoldBlack=38,38,38</div><div class=\"line\">Red=184,122,122</div><div class=\"line\">BoldRed=219,189,189</div><div class=\"line\">Green=122,184,122</div><div class=\"line\">BoldGreen=189,219,189</div><div class=\"line\">Yellow=184,184,122</div><div class=\"line\">BoldYellow=219,219,189</div><div class=\"line\">Blue=122,122,184</div><div class=\"line\">BoldBlue=189,189,219</div><div class=\"line\">Magenta=184,122,184</div><div class=\"line\">BoldMagenta=219,189,219</div><div class=\"line\">Cyan=122,184,184</div><div class=\"line\">BoldCyan=189,219,219</div><div class=\"line\">White=217,217,217</div><div class=\"line\">BoldWhite=255,255,255</div></pre></td></tr></table></figure>\n<p>（这是上面网站默认的主题配置，你可以直接使用）</p>\n<h1 id=\"2-设置Git-Bash主题\"><a href=\"#2-设置Git-Bash主题\" class=\"headerlink\" title=\"2.设置Git Bash主题\"></a>2.设置Git Bash主题</h1><p>好的，我们有了主题配置文件，现在我们来设置为Git Bash的主题。</p>\n<ol>\n<li>打开git bash命令行（任意位置），输入如下命令,回车</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~</div><div class=\"line\">vim .minttyrc</div></pre></td></tr></table></figure>\n<ol>\n<li>进入vim编辑模式后，我们先按<code>Insert</code>键，即切换到“插入”状态。就可以通过上下左右移动光标，或空格、退格及回车等进行编辑内容了，和WINDOWS是一样的。我们删除原有内容，将刚才得到的<code>主题配置文件</code>复制到此处。<br><img src=\"http://ortur5wom.bkt.clouddn.com/bash6.png\" alt=\"66ScreenClip\"></li>\n<li>按键盘左上角的”ESC”，左下角的插入状态消失。 然后这时，我们输入“冒号”，即”:”(不需双引号)，在下方会出现冒号，等待输入命令。再输入”x”，即保存退出。（注意：在英文状态下进行输入）</li>\n</ol>\n<p>此时，重启Git Bash,你会发现主题配置已经生效！！</p>\n","excerpt":"","more":"<h1 id=\"1-获取主题配置文件\"><a href=\"#1-获取主题配置文件\" class=\"headerlink\" title=\"1.获取主题配置文件\"></a>1.获取主题配置文件</h1><p>在git bash窗口点击右键，选择option选项。</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/bash1.png\" alt=\"11ScreenClip\"></p>\n<p>进入<code>Options</code>窗口，可以看到looks标签下的<code>Theme</code>选择。</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/bash2.png\" alt=\"22ScreenClip\"></p>\n<p>但是git bash默认的是没有主题供选择的。我们点击<code>Theme</code>下的<code>Color Schema Designer</code>按钮，此时我们会来到下面这个网站。</p>\n<p>你可以自定义喜欢的背景、文字为你喜欢的搭配，然后点击右上角的<code>Get Scheme</code>，这里我们选择<code>.minttyrc</code>类型</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/bash3.png\" alt=\"3ScreenClip\"></p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/bash4.png\" alt=\"44ScreenClip\"></p>\n<p>此时你会获得如下的文件内容：</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/bash5.png\" alt=\"55ScreenClip\"></p>\n<p>下面给出文字版：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">BackgroundColour=13,25,38</div><div class=\"line\">ForegroundColour=217,230,242</div><div class=\"line\">CursorColour=217,230,242</div><div class=\"line\">Black=0,0,0</div><div class=\"line\">BoldBlack=38,38,38</div><div class=\"line\">Red=184,122,122</div><div class=\"line\">BoldRed=219,189,189</div><div class=\"line\">Green=122,184,122</div><div class=\"line\">BoldGreen=189,219,189</div><div class=\"line\">Yellow=184,184,122</div><div class=\"line\">BoldYellow=219,219,189</div><div class=\"line\">Blue=122,122,184</div><div class=\"line\">BoldBlue=189,189,219</div><div class=\"line\">Magenta=184,122,184</div><div class=\"line\">BoldMagenta=219,189,219</div><div class=\"line\">Cyan=122,184,184</div><div class=\"line\">BoldCyan=189,219,219</div><div class=\"line\">White=217,217,217</div><div class=\"line\">BoldWhite=255,255,255</div></pre></td></tr></table></figure>\n<p>（这是上面网站默认的主题配置，你可以直接使用）</p>\n<h1 id=\"2-设置Git-Bash主题\"><a href=\"#2-设置Git-Bash主题\" class=\"headerlink\" title=\"2.设置Git Bash主题\"></a>2.设置Git Bash主题</h1><p>好的，我们有了主题配置文件，现在我们来设置为Git Bash的主题。</p>\n<ol>\n<li>打开git bash命令行（任意位置），输入如下命令,回车</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~</div><div class=\"line\">vim .minttyrc</div></pre></td></tr></table></figure>\n<ol>\n<li>进入vim编辑模式后，我们先按<code>Insert</code>键，即切换到“插入”状态。就可以通过上下左右移动光标，或空格、退格及回车等进行编辑内容了，和WINDOWS是一样的。我们删除原有内容，将刚才得到的<code>主题配置文件</code>复制到此处。<br><img src=\"http://ortur5wom.bkt.clouddn.com/bash6.png\" alt=\"66ScreenClip\"></li>\n<li>按键盘左上角的”ESC”，左下角的插入状态消失。 然后这时，我们输入“冒号”，即”:”(不需双引号)，在下方会出现冒号，等待输入命令。再输入”x”，即保存退出。（注意：在英文状态下进行输入）</li>\n</ol>\n<p>此时，重启Git Bash,你会发现主题配置已经生效！！</p>\n"},{"title":"Hello World","comment":true,"date":"2017-04-02T02:27:15.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ncomment: true\ndate: 2017-04-02 10:27:15\ntags: [Hexo, GitHub]\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2017-05-12T04:46:40.224Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8r3chrm0003zoh1t0hd53hh","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"HttpClient学习记录","comment":true,"date":"2017-10-14T08:55:10.000Z","_content":"\n# 一、前期准备\n> [HttpClient](https://hc.apache.org/httpcomponents-client-ga/index.html) is a HTTP/1.1 compliant HTTP agent implementation based on HttpCore. It also provides reusable components for client-side authentication, HTTP state management, and HTTP connection management. HttpComponents Client is a successor of and replacement for [Commons HttpClient 3.x](http://hc.apache.org/httpclient-legacy/index.html). Users of Commons HttpClient are strongly encouraged to upgrade.\n\n**总结:** HttpClient 是apache 组织下面的一个用于处理HTTP 请求和响应的开源工具。\n\n需要的jar包：\n\n​\thttpclient-4.3.6.jar、httpcore-4.3.3.jar、httpmime-4.3.6.jar、commons-codec-1.6.jar。\n\n# 二、操作步骤\n\n由于HttpClient从4.X开始，基本的get/post 等http请求实现方式与之前版本的写法有很大的差异，所以在此总结一下4.X版本之后的官方推荐写法。\n\n**操作顺序：** \n\n1. 创建CloseableHttpClient对象\n2. 创建请求方法实例：HttpGet/HttpPost\n3. （可选）需要请求参数时\n   - HttpGet/HttpPost都可以使用setParams方法添加参数（deprecated 已过时）\n   - 对于HttpPost方法可以使用SetEntity(HttpEntity entity)参加请求参数\n   - 对于HttpGet方法，可以通过拼接url的方式添加请求参数\n4. 调用CloseableHttpClient对象的execute(HttpUriRequest request)发送请求，该方法返回一个CloseableHttpResponse。\n5. 通过CloseableHttpResponse对象获取服务器的响应内容。\n6. 释放连接。无论执行方法是否成功，都必须释放连接\n\n# 三、代码实例\n\n```java\npackage com.learn.http;\n\nimport java.io.IOException;\nimport java.io.UnsupportedEncodingException;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.apache.http.HttpEntity;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.ParseException;\nimport org.apache.http.client.ClientProtocolException;\nimport org.apache.http.client.entity.UrlEncodedFormEntity;\nimport org.apache.http.client.methods.CloseableHttpResponse;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.impl.client.CloseableHttpClient;\nimport org.apache.http.impl.client.HttpClients;\nimport org.apache.http.message.BasicNameValuePair;\nimport org.apache.http.util.EntityUtils;\n\npublic class HttpSend {\n\n\tpublic static void main(String[] args) {\n\t\t// post请求百度地址，返回404\n\t\tnew HttpSend().post(\"http://www.baidu.com\");\n\t\tnew HttpSend().get(\"http://www.baidu.com\");\n\t}\n\n\t/**\n\t * 发送 post请求访问本地应用并根据传递参数不同返回不同结果\n\t */\n\tpublic void post(String url) {\n\n\t\t// 创建默认的httpClient实例.\n\t\tCloseableHttpClient httpclient = HttpClients.createDefault();\n\t\t// 创建httppost\n\t\tHttpPost httppost = new HttpPost(url);\n\t\t\n\t\t// 创建参数队列\n\t\tList<NameValuePair> formparams = new ArrayList<NameValuePair>();\n\t\t// 添加参数\n\t\t// formparams.add(new BasicNameValuePair(\"gg\", \"1\"));\n\n\t\tUrlEncodedFormEntity uefEntity;\n\t\ttry {\n\t\t\t//传入空参数，创建实体对象\n\t\t\tuefEntity = new UrlEncodedFormEntity(formparams, \"UTF-8\");\n\t\t\t//设置post对象的实体对象\n\t\t\thttppost.setEntity(uefEntity);\n\t\t\tSystem.out.println(\"executing post request \" + httppost.getURI());\n\t\t\t//执行post请求\n\t\t\tCloseableHttpResponse response = httpclient.execute(httppost);\n\t\t\ttry {\n\t\t\t\t//获取请求结果对象\n\t\t\t\tHttpEntity entity = response.getEntity();\n\t\t\t\tif (entity != null) {\n\t\t\t\t\tSystem.out.println(\"--------------------------------------\");\n\t\t\t\t\tSystem.out.println(\"Response content: \" + EntityUtils.toString(entity));\n\t\t\t\t\tSystem.out.println(\"--------------------------------------\");\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tresponse.close();\n\t\t\t}\n\t\t} catch (ClientProtocolException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (UnsupportedEncodingException e1) {\n\t\t\te1.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t} finally {\n\t\t\t// 关闭连接,释放资源\n\t\t\ttry {\n\t\t\t\thttpclient.close();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * 发送 get请求\n\t */\n\tpublic void get(String url) {\n\n\t\t// 创建默认的httpClient实例.\n\t\tCloseableHttpClient httpclient = HttpClients.createDefault();\n\t\t\n\t\ttry {\n\t\t\t// 封装请求参数\n\t\t\tList<NameValuePair> params = new ArrayList<>();\n\t\t\tparams.add(new BasicNameValuePair(\"cityEname\", \"henan\"));\n\t\t\t//转换为键值对\n\t\t\tString str = EntityUtils.toString(new UrlEncodedFormEntity(params, \"UTF-8\"));\n\t\t\tSystem.out.println(str);\n\t\t\t//创建带参数get请求（示例）\n\t\t\tHttpGet httpGet = new HttpGet(url+\"?\"+str);\n\n\t\t\t// 创建不带参数get请求\n\t\t\tHttpGet httpget = new HttpGet(url);\n\t\t\tSystem.out.println(\"executing get request \" + httpget.getURI());\n\t\t\t// 执行get请求.\n\t\t\tCloseableHttpResponse response = httpclient.execute(httpget);\n\t\t\ttry {\n\t\t\t\t// 获取响应实体\n\t\t\t\tHttpEntity entity = response.getEntity();\n\t\t\t\tSystem.out.println(\"--------------------------------------\");\n\t\t\t\t// 打印响应状态\n\t\t\t\tSystem.out.println(response.getStatusLine());\n\t\t\t\tif (entity != null) {\n\t\t\t\t\t// 打印响应内容长度\n\t\t\t\t\tSystem.out.println(\"Response content length: \" + entity.getContentLength());\n\t\t\t\t\t// 打印响应内容\n\t\t\t\t\tSystem.out.println(\"Response content: \" + EntityUtils.toString(entity));\n\t\t\t\t}\n\t\t\t\tSystem.out.println(\"------------------------------------\");\n\t\t\t} finally {\n\t\t\t\tresponse.close();\n\t\t\t}\n\t\t} catch (ClientProtocolException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (ParseException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t} finally {\n\t\t\t// 关闭连接,释放资源\n\t\t\ttry {\n\t\t\t\thttpclient.close();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\n\n","source":"_posts/HttpClient学习记录.md","raw":"---\ntitle: HttpClient学习记录\ncomment: true\ndate: 2017-10-14 16:55:10\ntags: [HttpClient, Java]\n---\n\n# 一、前期准备\n> [HttpClient](https://hc.apache.org/httpcomponents-client-ga/index.html) is a HTTP/1.1 compliant HTTP agent implementation based on HttpCore. It also provides reusable components for client-side authentication, HTTP state management, and HTTP connection management. HttpComponents Client is a successor of and replacement for [Commons HttpClient 3.x](http://hc.apache.org/httpclient-legacy/index.html). Users of Commons HttpClient are strongly encouraged to upgrade.\n\n**总结:** HttpClient 是apache 组织下面的一个用于处理HTTP 请求和响应的开源工具。\n\n需要的jar包：\n\n​\thttpclient-4.3.6.jar、httpcore-4.3.3.jar、httpmime-4.3.6.jar、commons-codec-1.6.jar。\n\n# 二、操作步骤\n\n由于HttpClient从4.X开始，基本的get/post 等http请求实现方式与之前版本的写法有很大的差异，所以在此总结一下4.X版本之后的官方推荐写法。\n\n**操作顺序：** \n\n1. 创建CloseableHttpClient对象\n2. 创建请求方法实例：HttpGet/HttpPost\n3. （可选）需要请求参数时\n   - HttpGet/HttpPost都可以使用setParams方法添加参数（deprecated 已过时）\n   - 对于HttpPost方法可以使用SetEntity(HttpEntity entity)参加请求参数\n   - 对于HttpGet方法，可以通过拼接url的方式添加请求参数\n4. 调用CloseableHttpClient对象的execute(HttpUriRequest request)发送请求，该方法返回一个CloseableHttpResponse。\n5. 通过CloseableHttpResponse对象获取服务器的响应内容。\n6. 释放连接。无论执行方法是否成功，都必须释放连接\n\n# 三、代码实例\n\n```java\npackage com.learn.http;\n\nimport java.io.IOException;\nimport java.io.UnsupportedEncodingException;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.apache.http.HttpEntity;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.ParseException;\nimport org.apache.http.client.ClientProtocolException;\nimport org.apache.http.client.entity.UrlEncodedFormEntity;\nimport org.apache.http.client.methods.CloseableHttpResponse;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.impl.client.CloseableHttpClient;\nimport org.apache.http.impl.client.HttpClients;\nimport org.apache.http.message.BasicNameValuePair;\nimport org.apache.http.util.EntityUtils;\n\npublic class HttpSend {\n\n\tpublic static void main(String[] args) {\n\t\t// post请求百度地址，返回404\n\t\tnew HttpSend().post(\"http://www.baidu.com\");\n\t\tnew HttpSend().get(\"http://www.baidu.com\");\n\t}\n\n\t/**\n\t * 发送 post请求访问本地应用并根据传递参数不同返回不同结果\n\t */\n\tpublic void post(String url) {\n\n\t\t// 创建默认的httpClient实例.\n\t\tCloseableHttpClient httpclient = HttpClients.createDefault();\n\t\t// 创建httppost\n\t\tHttpPost httppost = new HttpPost(url);\n\t\t\n\t\t// 创建参数队列\n\t\tList<NameValuePair> formparams = new ArrayList<NameValuePair>();\n\t\t// 添加参数\n\t\t// formparams.add(new BasicNameValuePair(\"gg\", \"1\"));\n\n\t\tUrlEncodedFormEntity uefEntity;\n\t\ttry {\n\t\t\t//传入空参数，创建实体对象\n\t\t\tuefEntity = new UrlEncodedFormEntity(formparams, \"UTF-8\");\n\t\t\t//设置post对象的实体对象\n\t\t\thttppost.setEntity(uefEntity);\n\t\t\tSystem.out.println(\"executing post request \" + httppost.getURI());\n\t\t\t//执行post请求\n\t\t\tCloseableHttpResponse response = httpclient.execute(httppost);\n\t\t\ttry {\n\t\t\t\t//获取请求结果对象\n\t\t\t\tHttpEntity entity = response.getEntity();\n\t\t\t\tif (entity != null) {\n\t\t\t\t\tSystem.out.println(\"--------------------------------------\");\n\t\t\t\t\tSystem.out.println(\"Response content: \" + EntityUtils.toString(entity));\n\t\t\t\t\tSystem.out.println(\"--------------------------------------\");\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tresponse.close();\n\t\t\t}\n\t\t} catch (ClientProtocolException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (UnsupportedEncodingException e1) {\n\t\t\te1.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t} finally {\n\t\t\t// 关闭连接,释放资源\n\t\t\ttry {\n\t\t\t\thttpclient.close();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * 发送 get请求\n\t */\n\tpublic void get(String url) {\n\n\t\t// 创建默认的httpClient实例.\n\t\tCloseableHttpClient httpclient = HttpClients.createDefault();\n\t\t\n\t\ttry {\n\t\t\t// 封装请求参数\n\t\t\tList<NameValuePair> params = new ArrayList<>();\n\t\t\tparams.add(new BasicNameValuePair(\"cityEname\", \"henan\"));\n\t\t\t//转换为键值对\n\t\t\tString str = EntityUtils.toString(new UrlEncodedFormEntity(params, \"UTF-8\"));\n\t\t\tSystem.out.println(str);\n\t\t\t//创建带参数get请求（示例）\n\t\t\tHttpGet httpGet = new HttpGet(url+\"?\"+str);\n\n\t\t\t// 创建不带参数get请求\n\t\t\tHttpGet httpget = new HttpGet(url);\n\t\t\tSystem.out.println(\"executing get request \" + httpget.getURI());\n\t\t\t// 执行get请求.\n\t\t\tCloseableHttpResponse response = httpclient.execute(httpget);\n\t\t\ttry {\n\t\t\t\t// 获取响应实体\n\t\t\t\tHttpEntity entity = response.getEntity();\n\t\t\t\tSystem.out.println(\"--------------------------------------\");\n\t\t\t\t// 打印响应状态\n\t\t\t\tSystem.out.println(response.getStatusLine());\n\t\t\t\tif (entity != null) {\n\t\t\t\t\t// 打印响应内容长度\n\t\t\t\t\tSystem.out.println(\"Response content length: \" + entity.getContentLength());\n\t\t\t\t\t// 打印响应内容\n\t\t\t\t\tSystem.out.println(\"Response content: \" + EntityUtils.toString(entity));\n\t\t\t\t}\n\t\t\t\tSystem.out.println(\"------------------------------------\");\n\t\t\t} finally {\n\t\t\t\tresponse.close();\n\t\t\t}\n\t\t} catch (ClientProtocolException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (ParseException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t} finally {\n\t\t\t// 关闭连接,释放资源\n\t\t\ttry {\n\t\t\t\thttpclient.close();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\n\n","slug":"HttpClient学习记录","published":1,"updated":"2017-10-14T08:57:20.282Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8r3chrt0006zoh1onm2hhsn","content":"<h1 id=\"一、前期准备\"><a href=\"#一、前期准备\" class=\"headerlink\" title=\"一、前期准备\"></a>一、前期准备</h1><blockquote>\n<p><a href=\"https://hc.apache.org/httpcomponents-client-ga/index.html\" target=\"_blank\" rel=\"external\">HttpClient</a> is a HTTP/1.1 compliant HTTP agent implementation based on HttpCore. It also provides reusable components for client-side authentication, HTTP state management, and HTTP connection management. HttpComponents Client is a successor of and replacement for <a href=\"http://hc.apache.org/httpclient-legacy/index.html\" target=\"_blank\" rel=\"external\">Commons HttpClient 3.x</a>. Users of Commons HttpClient are strongly encouraged to upgrade.</p>\n</blockquote>\n<p><strong>总结:</strong> HttpClient 是apache 组织下面的一个用于处理HTTP 请求和响应的开源工具。</p>\n<p>需要的jar包：</p>\n<p>​    httpclient-4.3.6.jar、httpcore-4.3.3.jar、httpmime-4.3.6.jar、commons-codec-1.6.jar。</p>\n<h1 id=\"二、操作步骤\"><a href=\"#二、操作步骤\" class=\"headerlink\" title=\"二、操作步骤\"></a>二、操作步骤</h1><p>由于HttpClient从4.X开始，基本的get/post 等http请求实现方式与之前版本的写法有很大的差异，所以在此总结一下4.X版本之后的官方推荐写法。</p>\n<p><strong>操作顺序：</strong> </p>\n<ol>\n<li>创建CloseableHttpClient对象</li>\n<li>创建请求方法实例：HttpGet/HttpPost</li>\n<li>（可选）需要请求参数时<ul>\n<li>HttpGet/HttpPost都可以使用setParams方法添加参数（deprecated 已过时）</li>\n<li>对于HttpPost方法可以使用SetEntity(HttpEntity entity)参加请求参数</li>\n<li>对于HttpGet方法，可以通过拼接url的方式添加请求参数</li>\n</ul>\n</li>\n<li>调用CloseableHttpClient对象的execute(HttpUriRequest request)发送请求，该方法返回一个CloseableHttpResponse。</li>\n<li>通过CloseableHttpResponse对象获取服务器的响应内容。</li>\n<li>释放连接。无论执行方法是否成功，都必须释放连接</li>\n</ol>\n<h1 id=\"三、代码实例\"><a href=\"#三、代码实例\" class=\"headerlink\" title=\"三、代码实例\"></a>三、代码实例</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.learn.http;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.UnsupportedEncodingException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.HttpEntity;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.NameValuePair;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.ParseException;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.client.ClientProtocolException;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.client.entity.UrlEncodedFormEntity;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.client.methods.CloseableHttpResponse;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.client.methods.HttpGet;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.client.methods.HttpPost;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.impl.client.CloseableHttpClient;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.impl.client.HttpClients;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.message.BasicNameValuePair;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.util.EntityUtils;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HttpSend</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// post请求百度地址，返回404</span></div><div class=\"line\">\t\t<span class=\"keyword\">new</span> HttpSend().post(<span class=\"string\">\"http://www.baidu.com\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">new</span> HttpSend().get(<span class=\"string\">\"http://www.baidu.com\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 发送 post请求访问本地应用并根据传递参数不同返回不同结果</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">post</span><span class=\"params\">(String url)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">// 创建默认的httpClient实例.</span></div><div class=\"line\">\t\tCloseableHttpClient httpclient = HttpClients.createDefault();</div><div class=\"line\">\t\t<span class=\"comment\">// 创建httppost</span></div><div class=\"line\">\t\tHttpPost httppost = <span class=\"keyword\">new</span> HttpPost(url);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">// 创建参数队列</span></div><div class=\"line\">\t\tList&lt;NameValuePair&gt; formparams = <span class=\"keyword\">new</span> ArrayList&lt;NameValuePair&gt;();</div><div class=\"line\">\t\t<span class=\"comment\">// 添加参数</span></div><div class=\"line\">\t\t<span class=\"comment\">// formparams.add(new BasicNameValuePair(\"gg\", \"1\"));</span></div><div class=\"line\"></div><div class=\"line\">\t\tUrlEncodedFormEntity uefEntity;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">//传入空参数，创建实体对象</span></div><div class=\"line\">\t\t\tuefEntity = <span class=\"keyword\">new</span> UrlEncodedFormEntity(formparams, <span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">\t\t\t<span class=\"comment\">//设置post对象的实体对象</span></div><div class=\"line\">\t\t\thttppost.setEntity(uefEntity);</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"executing post request \"</span> + httppost.getURI());</div><div class=\"line\">\t\t\t<span class=\"comment\">//执行post请求</span></div><div class=\"line\">\t\t\tCloseableHttpResponse response = httpclient.execute(httppost);</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">//获取请求结果对象</span></div><div class=\"line\">\t\t\t\tHttpEntity entity = response.getEntity();</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (entity != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t\t\tSystem.out.println(<span class=\"string\">\"--------------------------------------\"</span>);</div><div class=\"line\">\t\t\t\t\tSystem.out.println(<span class=\"string\">\"Response content: \"</span> + EntityUtils.toString(entity));</div><div class=\"line\">\t\t\t\t\tSystem.out.println(<span class=\"string\">\"--------------------------------------\"</span>);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\t\tresponse.close();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (ClientProtocolException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (UnsupportedEncodingException e1) &#123;</div><div class=\"line\">\t\t\te1.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 关闭连接,释放资源</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\thttpclient.close();</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">\t\t\t\te.printStackTrace();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 发送 get请求</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">get</span><span class=\"params\">(String url)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">// 创建默认的httpClient实例.</span></div><div class=\"line\">\t\tCloseableHttpClient httpclient = HttpClients.createDefault();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 封装请求参数</span></div><div class=\"line\">\t\t\tList&lt;NameValuePair&gt; params = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</div><div class=\"line\">\t\t\tparams.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"cityEname\"</span>, <span class=\"string\">\"henan\"</span>));</div><div class=\"line\">\t\t\t<span class=\"comment\">//转换为键值对</span></div><div class=\"line\">\t\t\tString str = EntityUtils.toString(<span class=\"keyword\">new</span> UrlEncodedFormEntity(params, <span class=\"string\">\"UTF-8\"</span>));</div><div class=\"line\">\t\t\tSystem.out.println(str);</div><div class=\"line\">\t\t\t<span class=\"comment\">//创建带参数get请求（示例）</span></div><div class=\"line\">\t\t\tHttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(url+<span class=\"string\">\"?\"</span>+str);</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"comment\">// 创建不带参数get请求</span></div><div class=\"line\">\t\t\tHttpGet httpget = <span class=\"keyword\">new</span> HttpGet(url);</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"executing get request \"</span> + httpget.getURI());</div><div class=\"line\">\t\t\t<span class=\"comment\">// 执行get请求.</span></div><div class=\"line\">\t\t\tCloseableHttpResponse response = httpclient.execute(httpget);</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// 获取响应实体</span></div><div class=\"line\">\t\t\t\tHttpEntity entity = response.getEntity();</div><div class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"--------------------------------------\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// 打印响应状态</span></div><div class=\"line\">\t\t\t\tSystem.out.println(response.getStatusLine());</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (entity != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">// 打印响应内容长度</span></div><div class=\"line\">\t\t\t\t\tSystem.out.println(<span class=\"string\">\"Response content length: \"</span> + entity.getContentLength());</div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">// 打印响应内容</span></div><div class=\"line\">\t\t\t\t\tSystem.out.println(<span class=\"string\">\"Response content: \"</span> + EntityUtils.toString(entity));</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"------------------------------------\"</span>);</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\t\tresponse.close();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (ClientProtocolException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (ParseException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 关闭连接,释放资源</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\thttpclient.close();</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">\t\t\t\te.printStackTrace();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"一、前期准备\"><a href=\"#一、前期准备\" class=\"headerlink\" title=\"一、前期准备\"></a>一、前期准备</h1><blockquote>\n<p><a href=\"https://hc.apache.org/httpcomponents-client-ga/index.html\">HttpClient</a> is a HTTP/1.1 compliant HTTP agent implementation based on HttpCore. It also provides reusable components for client-side authentication, HTTP state management, and HTTP connection management. HttpComponents Client is a successor of and replacement for <a href=\"http://hc.apache.org/httpclient-legacy/index.html\">Commons HttpClient 3.x</a>. Users of Commons HttpClient are strongly encouraged to upgrade.</p>\n</blockquote>\n<p><strong>总结:</strong> HttpClient 是apache 组织下面的一个用于处理HTTP 请求和响应的开源工具。</p>\n<p>需要的jar包：</p>\n<p>​    httpclient-4.3.6.jar、httpcore-4.3.3.jar、httpmime-4.3.6.jar、commons-codec-1.6.jar。</p>\n<h1 id=\"二、操作步骤\"><a href=\"#二、操作步骤\" class=\"headerlink\" title=\"二、操作步骤\"></a>二、操作步骤</h1><p>由于HttpClient从4.X开始，基本的get/post 等http请求实现方式与之前版本的写法有很大的差异，所以在此总结一下4.X版本之后的官方推荐写法。</p>\n<p><strong>操作顺序：</strong> </p>\n<ol>\n<li>创建CloseableHttpClient对象</li>\n<li>创建请求方法实例：HttpGet/HttpPost</li>\n<li>（可选）需要请求参数时<ul>\n<li>HttpGet/HttpPost都可以使用setParams方法添加参数（deprecated 已过时）</li>\n<li>对于HttpPost方法可以使用SetEntity(HttpEntity entity)参加请求参数</li>\n<li>对于HttpGet方法，可以通过拼接url的方式添加请求参数</li>\n</ul>\n</li>\n<li>调用CloseableHttpClient对象的execute(HttpUriRequest request)发送请求，该方法返回一个CloseableHttpResponse。</li>\n<li>通过CloseableHttpResponse对象获取服务器的响应内容。</li>\n<li>释放连接。无论执行方法是否成功，都必须释放连接</li>\n</ol>\n<h1 id=\"三、代码实例\"><a href=\"#三、代码实例\" class=\"headerlink\" title=\"三、代码实例\"></a>三、代码实例</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.learn.http;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.UnsupportedEncodingException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.HttpEntity;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.NameValuePair;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.ParseException;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.client.ClientProtocolException;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.client.entity.UrlEncodedFormEntity;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.client.methods.CloseableHttpResponse;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.client.methods.HttpGet;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.client.methods.HttpPost;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.impl.client.CloseableHttpClient;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.impl.client.HttpClients;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.message.BasicNameValuePair;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.http.util.EntityUtils;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HttpSend</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// post请求百度地址，返回404</span></div><div class=\"line\">\t\t<span class=\"keyword\">new</span> HttpSend().post(<span class=\"string\">\"http://www.baidu.com\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">new</span> HttpSend().get(<span class=\"string\">\"http://www.baidu.com\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 发送 post请求访问本地应用并根据传递参数不同返回不同结果</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">post</span><span class=\"params\">(String url)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">// 创建默认的httpClient实例.</span></div><div class=\"line\">\t\tCloseableHttpClient httpclient = HttpClients.createDefault();</div><div class=\"line\">\t\t<span class=\"comment\">// 创建httppost</span></div><div class=\"line\">\t\tHttpPost httppost = <span class=\"keyword\">new</span> HttpPost(url);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">// 创建参数队列</span></div><div class=\"line\">\t\tList&lt;NameValuePair&gt; formparams = <span class=\"keyword\">new</span> ArrayList&lt;NameValuePair&gt;();</div><div class=\"line\">\t\t<span class=\"comment\">// 添加参数</span></div><div class=\"line\">\t\t<span class=\"comment\">// formparams.add(new BasicNameValuePair(\"gg\", \"1\"));</span></div><div class=\"line\"></div><div class=\"line\">\t\tUrlEncodedFormEntity uefEntity;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">//传入空参数，创建实体对象</span></div><div class=\"line\">\t\t\tuefEntity = <span class=\"keyword\">new</span> UrlEncodedFormEntity(formparams, <span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">\t\t\t<span class=\"comment\">//设置post对象的实体对象</span></div><div class=\"line\">\t\t\thttppost.setEntity(uefEntity);</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"executing post request \"</span> + httppost.getURI());</div><div class=\"line\">\t\t\t<span class=\"comment\">//执行post请求</span></div><div class=\"line\">\t\t\tCloseableHttpResponse response = httpclient.execute(httppost);</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">//获取请求结果对象</span></div><div class=\"line\">\t\t\t\tHttpEntity entity = response.getEntity();</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (entity != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t\t\tSystem.out.println(<span class=\"string\">\"--------------------------------------\"</span>);</div><div class=\"line\">\t\t\t\t\tSystem.out.println(<span class=\"string\">\"Response content: \"</span> + EntityUtils.toString(entity));</div><div class=\"line\">\t\t\t\t\tSystem.out.println(<span class=\"string\">\"--------------------------------------\"</span>);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\t\tresponse.close();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (ClientProtocolException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (UnsupportedEncodingException e1) &#123;</div><div class=\"line\">\t\t\te1.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 关闭连接,释放资源</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\thttpclient.close();</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">\t\t\t\te.printStackTrace();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 发送 get请求</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">get</span><span class=\"params\">(String url)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">// 创建默认的httpClient实例.</span></div><div class=\"line\">\t\tCloseableHttpClient httpclient = HttpClients.createDefault();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 封装请求参数</span></div><div class=\"line\">\t\t\tList&lt;NameValuePair&gt; params = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</div><div class=\"line\">\t\t\tparams.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"cityEname\"</span>, <span class=\"string\">\"henan\"</span>));</div><div class=\"line\">\t\t\t<span class=\"comment\">//转换为键值对</span></div><div class=\"line\">\t\t\tString str = EntityUtils.toString(<span class=\"keyword\">new</span> UrlEncodedFormEntity(params, <span class=\"string\">\"UTF-8\"</span>));</div><div class=\"line\">\t\t\tSystem.out.println(str);</div><div class=\"line\">\t\t\t<span class=\"comment\">//创建带参数get请求（示例）</span></div><div class=\"line\">\t\t\tHttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(url+<span class=\"string\">\"?\"</span>+str);</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"comment\">// 创建不带参数get请求</span></div><div class=\"line\">\t\t\tHttpGet httpget = <span class=\"keyword\">new</span> HttpGet(url);</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"executing get request \"</span> + httpget.getURI());</div><div class=\"line\">\t\t\t<span class=\"comment\">// 执行get请求.</span></div><div class=\"line\">\t\t\tCloseableHttpResponse response = httpclient.execute(httpget);</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// 获取响应实体</span></div><div class=\"line\">\t\t\t\tHttpEntity entity = response.getEntity();</div><div class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"--------------------------------------\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// 打印响应状态</span></div><div class=\"line\">\t\t\t\tSystem.out.println(response.getStatusLine());</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (entity != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">// 打印响应内容长度</span></div><div class=\"line\">\t\t\t\t\tSystem.out.println(<span class=\"string\">\"Response content length: \"</span> + entity.getContentLength());</div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">// 打印响应内容</span></div><div class=\"line\">\t\t\t\t\tSystem.out.println(<span class=\"string\">\"Response content: \"</span> + EntityUtils.toString(entity));</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"------------------------------------\"</span>);</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\t\tresponse.close();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (ClientProtocolException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (ParseException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 关闭连接,释放资源</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\thttpclient.close();</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">\t\t\t\te.printStackTrace();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"Web开发中前后端的模板引擎","comment":true,"date":"2017-05-23T08:45:12.000Z","_content":"\n最近在学习Node.js，所以想自己实践一个用Node做后端的小项目，过程中不可避免的涉及到了模板引擎的问题。但在选择模板引擎的时被五花八门的模板引擎迷了眼。搜索到的java使用的模板有velocity、FreeMarker，Node使用的模板引擎jade、Ejs、Swig等等，甚至连一直使用的Angular等前端开发框架也成了模板引擎？这让我陷入了深深地自我怀疑，现在就来看一下模板引擎到底是什么鬼。\n\n# 1. 模板引擎是什么？\n\n模板，就是指有固定的格式，可以生成多个实例的样板。\n\n代码中的模板就是几个变量，允许我们自己塞入数据。举个例子：\n\n``` javascript\n// 模板\nvar tpl = 'Hei, my name is <%name%>, and I\\'m <%age%> years old.';\n```\n\n``` javascript\nvar data = {\n    \"name\": \"zproo\",\n    \"age\": \"20\"\n};\nvar result = tplEngine(tpl, data);   // 通过模板引擎将数据给到模板\n```\n\n这就是一个模板引擎干的事情。\n\n# 2. 模板引擎的意义\n\n## 2.1 后端模板引擎\n\n说模板引擎，要从后端说起。现在后端开发基本是MVC的架构模式。从Model层获取数据，然后将数据传到 View 层渲染（渲染成 HTML 文件），而 View 层，一般都会用到模板引擎。\n\n大体过程是这样的：\n\n![mvc](http://ortur5wom.bkt.clouddn.com/mvc.gif)\n\n### 2.1.1 传统方式的缺点\n\n后端模板引擎最常见的使用java之类的后端语言模板，这样做有利于 SEO，并且与前端请求接口的方式相比，少了个 HTTP 请求，理论上加载速度可能会稍微快些。其最大的问题就是模板文件的耦合度太高，出了问题谁都不想来解决，前端人员看不到数据，后端人员不懂页面。所以一般的后端都会写js。。不利于前后端分离，降低了开发效率。\n\n## 2.2 前端模板引擎\n\nAjax的出现使前后端的分离成为可能。后端专注于业务逻辑，给前端提供接口；而前端通过 AJAX 的方式向后端请求数据，然后动态的渲染页面。很好的解决了使用后端模板带来的前后端耦合问题。具体开发场景变成了这样：\n\n数据接口获得数据：\n\n``` javascript\n [{name: \"zproo\"}, {age: \"20\"}]\n```\n\n要渲染的页面结构：\n\n``` html\n<ul class=\"list\">\n    <li>null</li>\n    <li>null</li>\n</ul>\n```\n\n将数据应用到页面：\n\n``` javascript\n// 假设接口数据\nvar data = [{name: \"zproo\"}, {age: \"20\"}];\n\nvar str = \"\";\nstr += '<ul class=\"list\">';\n\nfor (var i = 0, len = data.length; i < len; i++) {\n  if (i !== len - 1)\n     str += \"<li>\" + data[i].name + \"</li>\";\n  else\n     str += \"<li>\" + data[i].age + \"</li>\";\n}\n\nstr += \"</ul>\";\ndocument.querySelector(\"div\").innerHTML = str;\n```\n\n出现了！传说中的拼串！！\n\n相信这么干过的都感受过拼串的绝望，当页面显示逻辑或数据复杂之后，你不出错算我输。前端模板引擎解决的就是这个问题。上面介绍过了模板的用法，如果用模板的话我们只需要在数据应该显示的地方设置好变量，而数据怎么应用到页面中的变量上去就是模板引擎的具体工作了。\n\n# 3. 前端模板引擎与前端框架的区别\n\n如果你看了我上面的介绍，并且你还使用过Angular和Vue这样的前端开发框架的话，肯定会觉得前端模板框架和Angular很像吧。是的，他们确实很像，至少在这部分实现的功能是挺像的。\n\nAngular中能够使用指令将数据双向绑定到显示页面上，可以说完全可以覆盖前端模板引擎的功能。但是Angular中双向数据绑定的实现原理肯定是跟模板引擎不同的，而且Angular中还包含MVC架构等很多的框架方面的思想，所以说跟模板引擎的区别还是很明显的。\n\n# 4. 前端框架能够取代模板引擎吗\n\n我上面说了Angular覆盖了前端模板引擎的功能，那我们能用Angular取代模板引擎吗？根据我现在的认知来说，其实是可以取代的。但是有一个我能想到的问题就是Angular这种大而全的前端框架在移动端设备上可能造成的性能问题，尤其是在比较低端的设备上，这也是Angular的一个问题。\n\n# 5.使用前端模板引擎有什么缺点\n\n缺点的话就是老生常谈的SEO问题了，毕竟爬虫只会抓取 HTML 代码，不会去渲染 JS。","source":"_posts/Web开发中前后端的模板引擎.md","raw":"---\ntitle: Web开发中前后端的模板引擎\ncomment: true\ndate: 2017-05-23 16:45:12\ntags: [jade,模板引擎,angualr,mvc,Nodejs]\n---\n\n最近在学习Node.js，所以想自己实践一个用Node做后端的小项目，过程中不可避免的涉及到了模板引擎的问题。但在选择模板引擎的时被五花八门的模板引擎迷了眼。搜索到的java使用的模板有velocity、FreeMarker，Node使用的模板引擎jade、Ejs、Swig等等，甚至连一直使用的Angular等前端开发框架也成了模板引擎？这让我陷入了深深地自我怀疑，现在就来看一下模板引擎到底是什么鬼。\n\n# 1. 模板引擎是什么？\n\n模板，就是指有固定的格式，可以生成多个实例的样板。\n\n代码中的模板就是几个变量，允许我们自己塞入数据。举个例子：\n\n``` javascript\n// 模板\nvar tpl = 'Hei, my name is <%name%>, and I\\'m <%age%> years old.';\n```\n\n``` javascript\nvar data = {\n    \"name\": \"zproo\",\n    \"age\": \"20\"\n};\nvar result = tplEngine(tpl, data);   // 通过模板引擎将数据给到模板\n```\n\n这就是一个模板引擎干的事情。\n\n# 2. 模板引擎的意义\n\n## 2.1 后端模板引擎\n\n说模板引擎，要从后端说起。现在后端开发基本是MVC的架构模式。从Model层获取数据，然后将数据传到 View 层渲染（渲染成 HTML 文件），而 View 层，一般都会用到模板引擎。\n\n大体过程是这样的：\n\n![mvc](http://ortur5wom.bkt.clouddn.com/mvc.gif)\n\n### 2.1.1 传统方式的缺点\n\n后端模板引擎最常见的使用java之类的后端语言模板，这样做有利于 SEO，并且与前端请求接口的方式相比，少了个 HTTP 请求，理论上加载速度可能会稍微快些。其最大的问题就是模板文件的耦合度太高，出了问题谁都不想来解决，前端人员看不到数据，后端人员不懂页面。所以一般的后端都会写js。。不利于前后端分离，降低了开发效率。\n\n## 2.2 前端模板引擎\n\nAjax的出现使前后端的分离成为可能。后端专注于业务逻辑，给前端提供接口；而前端通过 AJAX 的方式向后端请求数据，然后动态的渲染页面。很好的解决了使用后端模板带来的前后端耦合问题。具体开发场景变成了这样：\n\n数据接口获得数据：\n\n``` javascript\n [{name: \"zproo\"}, {age: \"20\"}]\n```\n\n要渲染的页面结构：\n\n``` html\n<ul class=\"list\">\n    <li>null</li>\n    <li>null</li>\n</ul>\n```\n\n将数据应用到页面：\n\n``` javascript\n// 假设接口数据\nvar data = [{name: \"zproo\"}, {age: \"20\"}];\n\nvar str = \"\";\nstr += '<ul class=\"list\">';\n\nfor (var i = 0, len = data.length; i < len; i++) {\n  if (i !== len - 1)\n     str += \"<li>\" + data[i].name + \"</li>\";\n  else\n     str += \"<li>\" + data[i].age + \"</li>\";\n}\n\nstr += \"</ul>\";\ndocument.querySelector(\"div\").innerHTML = str;\n```\n\n出现了！传说中的拼串！！\n\n相信这么干过的都感受过拼串的绝望，当页面显示逻辑或数据复杂之后，你不出错算我输。前端模板引擎解决的就是这个问题。上面介绍过了模板的用法，如果用模板的话我们只需要在数据应该显示的地方设置好变量，而数据怎么应用到页面中的变量上去就是模板引擎的具体工作了。\n\n# 3. 前端模板引擎与前端框架的区别\n\n如果你看了我上面的介绍，并且你还使用过Angular和Vue这样的前端开发框架的话，肯定会觉得前端模板框架和Angular很像吧。是的，他们确实很像，至少在这部分实现的功能是挺像的。\n\nAngular中能够使用指令将数据双向绑定到显示页面上，可以说完全可以覆盖前端模板引擎的功能。但是Angular中双向数据绑定的实现原理肯定是跟模板引擎不同的，而且Angular中还包含MVC架构等很多的框架方面的思想，所以说跟模板引擎的区别还是很明显的。\n\n# 4. 前端框架能够取代模板引擎吗\n\n我上面说了Angular覆盖了前端模板引擎的功能，那我们能用Angular取代模板引擎吗？根据我现在的认知来说，其实是可以取代的。但是有一个我能想到的问题就是Angular这种大而全的前端框架在移动端设备上可能造成的性能问题，尤其是在比较低端的设备上，这也是Angular的一个问题。\n\n# 5.使用前端模板引擎有什么缺点\n\n缺点的话就是老生常谈的SEO问题了，毕竟爬虫只会抓取 HTML 代码，不会去渲染 JS。","slug":"Web开发中前后端的模板引擎","published":1,"updated":"2017-06-20T04:08:10.547Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8r3chrx0008zoh1e3uqxb79","content":"<p>最近在学习Node.js，所以想自己实践一个用Node做后端的小项目，过程中不可避免的涉及到了模板引擎的问题。但在选择模板引擎的时被五花八门的模板引擎迷了眼。搜索到的java使用的模板有velocity、FreeMarker，Node使用的模板引擎jade、Ejs、Swig等等，甚至连一直使用的Angular等前端开发框架也成了模板引擎？这让我陷入了深深地自我怀疑，现在就来看一下模板引擎到底是什么鬼。</p>\n<h1 id=\"1-模板引擎是什么？\"><a href=\"#1-模板引擎是什么？\" class=\"headerlink\" title=\"1. 模板引擎是什么？\"></a>1. 模板引擎是什么？</h1><p>模板，就是指有固定的格式，可以生成多个实例的样板。</p>\n<p>代码中的模板就是几个变量，允许我们自己塞入数据。举个例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 模板</span></div><div class=\"line\"><span class=\"keyword\">var</span> tpl = <span class=\"string\">'Hei, my name is &lt;%name%&gt;, and I\\'m &lt;%age%&gt; years old.'</span>;</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> data = &#123;</div><div class=\"line\">    <span class=\"string\">\"name\"</span>: <span class=\"string\">\"zproo\"</span>,</div><div class=\"line\">    <span class=\"string\">\"age\"</span>: <span class=\"string\">\"20\"</span></div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"keyword\">var</span> result = tplEngine(tpl, data);   <span class=\"comment\">// 通过模板引擎将数据给到模板</span></div></pre></td></tr></table></figure>\n<p>这就是一个模板引擎干的事情。</p>\n<h1 id=\"2-模板引擎的意义\"><a href=\"#2-模板引擎的意义\" class=\"headerlink\" title=\"2. 模板引擎的意义\"></a>2. 模板引擎的意义</h1><h2 id=\"2-1-后端模板引擎\"><a href=\"#2-1-后端模板引擎\" class=\"headerlink\" title=\"2.1 后端模板引擎\"></a>2.1 后端模板引擎</h2><p>说模板引擎，要从后端说起。现在后端开发基本是MVC的架构模式。从Model层获取数据，然后将数据传到 View 层渲染（渲染成 HTML 文件），而 View 层，一般都会用到模板引擎。</p>\n<p>大体过程是这样的：</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/mvc.gif\" alt=\"mvc\"></p>\n<h3 id=\"2-1-1-传统方式的缺点\"><a href=\"#2-1-1-传统方式的缺点\" class=\"headerlink\" title=\"2.1.1 传统方式的缺点\"></a>2.1.1 传统方式的缺点</h3><p>后端模板引擎最常见的使用java之类的后端语言模板，这样做有利于 SEO，并且与前端请求接口的方式相比，少了个 HTTP 请求，理论上加载速度可能会稍微快些。其最大的问题就是模板文件的耦合度太高，出了问题谁都不想来解决，前端人员看不到数据，后端人员不懂页面。所以一般的后端都会写js。。不利于前后端分离，降低了开发效率。</p>\n<h2 id=\"2-2-前端模板引擎\"><a href=\"#2-2-前端模板引擎\" class=\"headerlink\" title=\"2.2 前端模板引擎\"></a>2.2 前端模板引擎</h2><p>Ajax的出现使前后端的分离成为可能。后端专注于业务逻辑，给前端提供接口；而前端通过 AJAX 的方式向后端请求数据，然后动态的渲染页面。很好的解决了使用后端模板带来的前后端耦合问题。具体开发场景变成了这样：</p>\n<p>数据接口获得数据：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[&#123;<span class=\"attr\">name</span>: <span class=\"string\">\"zproo\"</span>&#125;, &#123;<span class=\"attr\">age</span>: <span class=\"string\">\"20\"</span>&#125;]</div></pre></td></tr></table></figure>\n<p>要渲染的页面结构：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>null<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>null<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>将数据应用到页面：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 假设接口数据</span></div><div class=\"line\"><span class=\"keyword\">var</span> data = [&#123;<span class=\"attr\">name</span>: <span class=\"string\">\"zproo\"</span>&#125;, &#123;<span class=\"attr\">age</span>: <span class=\"string\">\"20\"</span>&#125;];</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>;</div><div class=\"line\">str += <span class=\"string\">'&lt;ul class=\"list\"&gt;'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, len = data.length; i &lt; len; i++) &#123;</div><div class=\"line\">  <span class=\"keyword\">if</span> (i !== len - <span class=\"number\">1</span>)</div><div class=\"line\">     str += <span class=\"string\">\"&lt;li&gt;\"</span> + data[i].name + <span class=\"string\">\"&lt;/li&gt;\"</span>;</div><div class=\"line\">  <span class=\"keyword\">else</span></div><div class=\"line\">     str += <span class=\"string\">\"&lt;li&gt;\"</span> + data[i].age + <span class=\"string\">\"&lt;/li&gt;\"</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">str += <span class=\"string\">\"&lt;/ul&gt;\"</span>;</div><div class=\"line\"><span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"div\"</span>).innerHTML = str;</div></pre></td></tr></table></figure>\n<p>出现了！传说中的拼串！！</p>\n<p>相信这么干过的都感受过拼串的绝望，当页面显示逻辑或数据复杂之后，你不出错算我输。前端模板引擎解决的就是这个问题。上面介绍过了模板的用法，如果用模板的话我们只需要在数据应该显示的地方设置好变量，而数据怎么应用到页面中的变量上去就是模板引擎的具体工作了。</p>\n<h1 id=\"3-前端模板引擎与前端框架的区别\"><a href=\"#3-前端模板引擎与前端框架的区别\" class=\"headerlink\" title=\"3. 前端模板引擎与前端框架的区别\"></a>3. 前端模板引擎与前端框架的区别</h1><p>如果你看了我上面的介绍，并且你还使用过Angular和Vue这样的前端开发框架的话，肯定会觉得前端模板框架和Angular很像吧。是的，他们确实很像，至少在这部分实现的功能是挺像的。</p>\n<p>Angular中能够使用指令将数据双向绑定到显示页面上，可以说完全可以覆盖前端模板引擎的功能。但是Angular中双向数据绑定的实现原理肯定是跟模板引擎不同的，而且Angular中还包含MVC架构等很多的框架方面的思想，所以说跟模板引擎的区别还是很明显的。</p>\n<h1 id=\"4-前端框架能够取代模板引擎吗\"><a href=\"#4-前端框架能够取代模板引擎吗\" class=\"headerlink\" title=\"4. 前端框架能够取代模板引擎吗\"></a>4. 前端框架能够取代模板引擎吗</h1><p>我上面说了Angular覆盖了前端模板引擎的功能，那我们能用Angular取代模板引擎吗？根据我现在的认知来说，其实是可以取代的。但是有一个我能想到的问题就是Angular这种大而全的前端框架在移动端设备上可能造成的性能问题，尤其是在比较低端的设备上，这也是Angular的一个问题。</p>\n<h1 id=\"5-使用前端模板引擎有什么缺点\"><a href=\"#5-使用前端模板引擎有什么缺点\" class=\"headerlink\" title=\"5.使用前端模板引擎有什么缺点\"></a>5.使用前端模板引擎有什么缺点</h1><p>缺点的话就是老生常谈的SEO问题了，毕竟爬虫只会抓取 HTML 代码，不会去渲染 JS。</p>\n","excerpt":"","more":"<p>最近在学习Node.js，所以想自己实践一个用Node做后端的小项目，过程中不可避免的涉及到了模板引擎的问题。但在选择模板引擎的时被五花八门的模板引擎迷了眼。搜索到的java使用的模板有velocity、FreeMarker，Node使用的模板引擎jade、Ejs、Swig等等，甚至连一直使用的Angular等前端开发框架也成了模板引擎？这让我陷入了深深地自我怀疑，现在就来看一下模板引擎到底是什么鬼。</p>\n<h1 id=\"1-模板引擎是什么？\"><a href=\"#1-模板引擎是什么？\" class=\"headerlink\" title=\"1. 模板引擎是什么？\"></a>1. 模板引擎是什么？</h1><p>模板，就是指有固定的格式，可以生成多个实例的样板。</p>\n<p>代码中的模板就是几个变量，允许我们自己塞入数据。举个例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 模板</span></div><div class=\"line\"><span class=\"keyword\">var</span> tpl = <span class=\"string\">'Hei, my name is &lt;%name%&gt;, and I\\'m &lt;%age%&gt; years old.'</span>;</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> data = &#123;</div><div class=\"line\">    <span class=\"string\">\"name\"</span>: <span class=\"string\">\"zproo\"</span>,</div><div class=\"line\">    <span class=\"string\">\"age\"</span>: <span class=\"string\">\"20\"</span></div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"keyword\">var</span> result = tplEngine(tpl, data);   <span class=\"comment\">// 通过模板引擎将数据给到模板</span></div></pre></td></tr></table></figure>\n<p>这就是一个模板引擎干的事情。</p>\n<h1 id=\"2-模板引擎的意义\"><a href=\"#2-模板引擎的意义\" class=\"headerlink\" title=\"2. 模板引擎的意义\"></a>2. 模板引擎的意义</h1><h2 id=\"2-1-后端模板引擎\"><a href=\"#2-1-后端模板引擎\" class=\"headerlink\" title=\"2.1 后端模板引擎\"></a>2.1 后端模板引擎</h2><p>说模板引擎，要从后端说起。现在后端开发基本是MVC的架构模式。从Model层获取数据，然后将数据传到 View 层渲染（渲染成 HTML 文件），而 View 层，一般都会用到模板引擎。</p>\n<p>大体过程是这样的：</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/mvc.gif\" alt=\"mvc\"></p>\n<h3 id=\"2-1-1-传统方式的缺点\"><a href=\"#2-1-1-传统方式的缺点\" class=\"headerlink\" title=\"2.1.1 传统方式的缺点\"></a>2.1.1 传统方式的缺点</h3><p>后端模板引擎最常见的使用java之类的后端语言模板，这样做有利于 SEO，并且与前端请求接口的方式相比，少了个 HTTP 请求，理论上加载速度可能会稍微快些。其最大的问题就是模板文件的耦合度太高，出了问题谁都不想来解决，前端人员看不到数据，后端人员不懂页面。所以一般的后端都会写js。。不利于前后端分离，降低了开发效率。</p>\n<h2 id=\"2-2-前端模板引擎\"><a href=\"#2-2-前端模板引擎\" class=\"headerlink\" title=\"2.2 前端模板引擎\"></a>2.2 前端模板引擎</h2><p>Ajax的出现使前后端的分离成为可能。后端专注于业务逻辑，给前端提供接口；而前端通过 AJAX 的方式向后端请求数据，然后动态的渲染页面。很好的解决了使用后端模板带来的前后端耦合问题。具体开发场景变成了这样：</p>\n<p>数据接口获得数据：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[&#123;<span class=\"attr\">name</span>: <span class=\"string\">\"zproo\"</span>&#125;, &#123;<span class=\"attr\">age</span>: <span class=\"string\">\"20\"</span>&#125;]</div></pre></td></tr></table></figure>\n<p>要渲染的页面结构：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>null<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>null<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>将数据应用到页面：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 假设接口数据</span></div><div class=\"line\"><span class=\"keyword\">var</span> data = [&#123;<span class=\"attr\">name</span>: <span class=\"string\">\"zproo\"</span>&#125;, &#123;<span class=\"attr\">age</span>: <span class=\"string\">\"20\"</span>&#125;];</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>;</div><div class=\"line\">str += <span class=\"string\">'&lt;ul class=\"list\"&gt;'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, len = data.length; i &lt; len; i++) &#123;</div><div class=\"line\">  <span class=\"keyword\">if</span> (i !== len - <span class=\"number\">1</span>)</div><div class=\"line\">     str += <span class=\"string\">\"&lt;li&gt;\"</span> + data[i].name + <span class=\"string\">\"&lt;/li&gt;\"</span>;</div><div class=\"line\">  <span class=\"keyword\">else</span></div><div class=\"line\">     str += <span class=\"string\">\"&lt;li&gt;\"</span> + data[i].age + <span class=\"string\">\"&lt;/li&gt;\"</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">str += <span class=\"string\">\"&lt;/ul&gt;\"</span>;</div><div class=\"line\"><span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"div\"</span>).innerHTML = str;</div></pre></td></tr></table></figure>\n<p>出现了！传说中的拼串！！</p>\n<p>相信这么干过的都感受过拼串的绝望，当页面显示逻辑或数据复杂之后，你不出错算我输。前端模板引擎解决的就是这个问题。上面介绍过了模板的用法，如果用模板的话我们只需要在数据应该显示的地方设置好变量，而数据怎么应用到页面中的变量上去就是模板引擎的具体工作了。</p>\n<h1 id=\"3-前端模板引擎与前端框架的区别\"><a href=\"#3-前端模板引擎与前端框架的区别\" class=\"headerlink\" title=\"3. 前端模板引擎与前端框架的区别\"></a>3. 前端模板引擎与前端框架的区别</h1><p>如果你看了我上面的介绍，并且你还使用过Angular和Vue这样的前端开发框架的话，肯定会觉得前端模板框架和Angular很像吧。是的，他们确实很像，至少在这部分实现的功能是挺像的。</p>\n<p>Angular中能够使用指令将数据双向绑定到显示页面上，可以说完全可以覆盖前端模板引擎的功能。但是Angular中双向数据绑定的实现原理肯定是跟模板引擎不同的，而且Angular中还包含MVC架构等很多的框架方面的思想，所以说跟模板引擎的区别还是很明显的。</p>\n<h1 id=\"4-前端框架能够取代模板引擎吗\"><a href=\"#4-前端框架能够取代模板引擎吗\" class=\"headerlink\" title=\"4. 前端框架能够取代模板引擎吗\"></a>4. 前端框架能够取代模板引擎吗</h1><p>我上面说了Angular覆盖了前端模板引擎的功能，那我们能用Angular取代模板引擎吗？根据我现在的认知来说，其实是可以取代的。但是有一个我能想到的问题就是Angular这种大而全的前端框架在移动端设备上可能造成的性能问题，尤其是在比较低端的设备上，这也是Angular的一个问题。</p>\n<h1 id=\"5-使用前端模板引擎有什么缺点\"><a href=\"#5-使用前端模板引擎有什么缺点\" class=\"headerlink\" title=\"5.使用前端模板引擎有什么缺点\"></a>5.使用前端模板引擎有什么缺点</h1><p>缺点的话就是老生常谈的SEO问题了，毕竟爬虫只会抓取 HTML 代码，不会去渲染 JS。</p>\n"},{"title":"jsp页面中获取session对象","comment":true,"date":"2017-06-08T07:10:10.000Z","_content":"# 1.session的介绍\n\n客户首次访问服务器时，会话session对象被创建并分配一个唯一的Id，同时id号发送到客户端，并存入cookie，使得客户端session对象和服务器端一致。\n\n存储会话信息session供浏览器后续请求使用，可以获取并修改变量的值。和cookie一起使用识别同一个客户。\n\n当用户关闭浏览器时，客户针对当前服务器的session即被关闭或超时失效，当客户再次打开浏览器访问的时候，会重新分配会话session ID。若禁止cookie，，同一个客户就会对应多个session对象，服务器无法识别访问这些页面是同一个客户。\n\n# 2.session和cookie的区别\n\n1. session 在服务器端，cookie 在客户端（浏览器）\n2. session 默认被存在在服务器的一个文件里（不是内存）\n3. session 的运行依赖 session id，而 session id 是存在 cookie 中的。\n4. cookie不是很安全，别人可以分析存放在本地的COOKIE并进行COOKIE欺骗\n   考虑到安全应当使用session\n5. session会在一定时间内保存在服务器上。当访问增多，会比较占用你服务器的性能\n   考虑到减轻服务器性能方面，应当使用COOKIE\n6. 单个cookie在客户端的限制是3K，就是说一个站点在客户端存放的COOKIE不能3K。(将登陆信息等重要信息存放为SESSION；其他信息如果需要保留，可以放在COOKIE中)\n\n\n# 3.前端Jsp页面中获取session对象\n\n## 3.1 方法一（EL表达式）\n\n``` javascript\n// 前端获取存储在session对象中的用户id:userId\nvar studentId = \"${sessionScope.userId}\";\n```\n\n\n\n## 3.2 方法二（Jsp语法）\n\n``` javascript\n// 前端获取存储在session对象中的用户id:userId\nvar studentId = \"<%=session.getAttribute(\"userId\")%>\";\n```\n\n## 注意小坑\n\n以上代码必须写在Jsp文件中，在引入外部Js文件时上述代码失效。\n\n\n","source":"_posts/jsp页面中获取session对象.md","raw":"---\ntitle: jsp页面中获取session对象\ncomment: true\ndate: 2017-06-08 15:10:10\ntags: [jsp,session,el表达式]\n---\n# 1.session的介绍\n\n客户首次访问服务器时，会话session对象被创建并分配一个唯一的Id，同时id号发送到客户端，并存入cookie，使得客户端session对象和服务器端一致。\n\n存储会话信息session供浏览器后续请求使用，可以获取并修改变量的值。和cookie一起使用识别同一个客户。\n\n当用户关闭浏览器时，客户针对当前服务器的session即被关闭或超时失效，当客户再次打开浏览器访问的时候，会重新分配会话session ID。若禁止cookie，，同一个客户就会对应多个session对象，服务器无法识别访问这些页面是同一个客户。\n\n# 2.session和cookie的区别\n\n1. session 在服务器端，cookie 在客户端（浏览器）\n2. session 默认被存在在服务器的一个文件里（不是内存）\n3. session 的运行依赖 session id，而 session id 是存在 cookie 中的。\n4. cookie不是很安全，别人可以分析存放在本地的COOKIE并进行COOKIE欺骗\n   考虑到安全应当使用session\n5. session会在一定时间内保存在服务器上。当访问增多，会比较占用你服务器的性能\n   考虑到减轻服务器性能方面，应当使用COOKIE\n6. 单个cookie在客户端的限制是3K，就是说一个站点在客户端存放的COOKIE不能3K。(将登陆信息等重要信息存放为SESSION；其他信息如果需要保留，可以放在COOKIE中)\n\n\n# 3.前端Jsp页面中获取session对象\n\n## 3.1 方法一（EL表达式）\n\n``` javascript\n// 前端获取存储在session对象中的用户id:userId\nvar studentId = \"${sessionScope.userId}\";\n```\n\n\n\n## 3.2 方法二（Jsp语法）\n\n``` javascript\n// 前端获取存储在session对象中的用户id:userId\nvar studentId = \"<%=session.getAttribute(\"userId\")%>\";\n```\n\n## 注意小坑\n\n以上代码必须写在Jsp文件中，在引入外部Js文件时上述代码失效。\n\n\n","slug":"jsp页面中获取session对象","published":1,"updated":"2017-06-08T07:36:08.012Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8r3chry000azoh1aqpteco0","content":"<h1 id=\"1-session的介绍\"><a href=\"#1-session的介绍\" class=\"headerlink\" title=\"1.session的介绍\"></a>1.session的介绍</h1><p>客户首次访问服务器时，会话session对象被创建并分配一个唯一的Id，同时id号发送到客户端，并存入cookie，使得客户端session对象和服务器端一致。</p>\n<p>存储会话信息session供浏览器后续请求使用，可以获取并修改变量的值。和cookie一起使用识别同一个客户。</p>\n<p>当用户关闭浏览器时，客户针对当前服务器的session即被关闭或超时失效，当客户再次打开浏览器访问的时候，会重新分配会话session ID。若禁止cookie，，同一个客户就会对应多个session对象，服务器无法识别访问这些页面是同一个客户。</p>\n<h1 id=\"2-session和cookie的区别\"><a href=\"#2-session和cookie的区别\" class=\"headerlink\" title=\"2.session和cookie的区别\"></a>2.session和cookie的区别</h1><ol>\n<li>session 在服务器端，cookie 在客户端（浏览器）</li>\n<li>session 默认被存在在服务器的一个文件里（不是内存）</li>\n<li>session 的运行依赖 session id，而 session id 是存在 cookie 中的。</li>\n<li>cookie不是很安全，别人可以分析存放在本地的COOKIE并进行COOKIE欺骗<br>考虑到安全应当使用session</li>\n<li>session会在一定时间内保存在服务器上。当访问增多，会比较占用你服务器的性能<br>考虑到减轻服务器性能方面，应当使用COOKIE</li>\n<li>单个cookie在客户端的限制是3K，就是说一个站点在客户端存放的COOKIE不能3K。(将登陆信息等重要信息存放为SESSION；其他信息如果需要保留，可以放在COOKIE中)</li>\n</ol>\n<h1 id=\"3-前端Jsp页面中获取session对象\"><a href=\"#3-前端Jsp页面中获取session对象\" class=\"headerlink\" title=\"3.前端Jsp页面中获取session对象\"></a>3.前端Jsp页面中获取session对象</h1><h2 id=\"3-1-方法一（EL表达式）\"><a href=\"#3-1-方法一（EL表达式）\" class=\"headerlink\" title=\"3.1 方法一（EL表达式）\"></a>3.1 方法一（EL表达式）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 前端获取存储在session对象中的用户id:userId</span></div><div class=\"line\"><span class=\"keyword\">var</span> studentId = <span class=\"string\">\"$&#123;sessionScope.userId&#125;\"</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"3-2-方法二（Jsp语法）\"><a href=\"#3-2-方法二（Jsp语法）\" class=\"headerlink\" title=\"3.2 方法二（Jsp语法）\"></a>3.2 方法二（Jsp语法）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 前端获取存储在session对象中的用户id:userId</span></div><div class=\"line\"><span class=\"keyword\">var</span> studentId = <span class=\"string\">\"&lt;%=session.getAttribute(\"</span>userId<span class=\"string\">\")%&gt;\"</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"注意小坑\"><a href=\"#注意小坑\" class=\"headerlink\" title=\"注意小坑\"></a>注意小坑</h2><p>以上代码必须写在Jsp文件中，在引入外部Js文件时上述代码失效。</p>\n","excerpt":"","more":"<h1 id=\"1-session的介绍\"><a href=\"#1-session的介绍\" class=\"headerlink\" title=\"1.session的介绍\"></a>1.session的介绍</h1><p>客户首次访问服务器时，会话session对象被创建并分配一个唯一的Id，同时id号发送到客户端，并存入cookie，使得客户端session对象和服务器端一致。</p>\n<p>存储会话信息session供浏览器后续请求使用，可以获取并修改变量的值。和cookie一起使用识别同一个客户。</p>\n<p>当用户关闭浏览器时，客户针对当前服务器的session即被关闭或超时失效，当客户再次打开浏览器访问的时候，会重新分配会话session ID。若禁止cookie，，同一个客户就会对应多个session对象，服务器无法识别访问这些页面是同一个客户。</p>\n<h1 id=\"2-session和cookie的区别\"><a href=\"#2-session和cookie的区别\" class=\"headerlink\" title=\"2.session和cookie的区别\"></a>2.session和cookie的区别</h1><ol>\n<li>session 在服务器端，cookie 在客户端（浏览器）</li>\n<li>session 默认被存在在服务器的一个文件里（不是内存）</li>\n<li>session 的运行依赖 session id，而 session id 是存在 cookie 中的。</li>\n<li>cookie不是很安全，别人可以分析存放在本地的COOKIE并进行COOKIE欺骗<br>考虑到安全应当使用session</li>\n<li>session会在一定时间内保存在服务器上。当访问增多，会比较占用你服务器的性能<br>考虑到减轻服务器性能方面，应当使用COOKIE</li>\n<li>单个cookie在客户端的限制是3K，就是说一个站点在客户端存放的COOKIE不能3K。(将登陆信息等重要信息存放为SESSION；其他信息如果需要保留，可以放在COOKIE中)</li>\n</ol>\n<h1 id=\"3-前端Jsp页面中获取session对象\"><a href=\"#3-前端Jsp页面中获取session对象\" class=\"headerlink\" title=\"3.前端Jsp页面中获取session对象\"></a>3.前端Jsp页面中获取session对象</h1><h2 id=\"3-1-方法一（EL表达式）\"><a href=\"#3-1-方法一（EL表达式）\" class=\"headerlink\" title=\"3.1 方法一（EL表达式）\"></a>3.1 方法一（EL表达式）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 前端获取存储在session对象中的用户id:userId</span></div><div class=\"line\"><span class=\"keyword\">var</span> studentId = <span class=\"string\">\"$&#123;sessionScope.userId&#125;\"</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"3-2-方法二（Jsp语法）\"><a href=\"#3-2-方法二（Jsp语法）\" class=\"headerlink\" title=\"3.2 方法二（Jsp语法）\"></a>3.2 方法二（Jsp语法）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 前端获取存储在session对象中的用户id:userId</span></div><div class=\"line\"><span class=\"keyword\">var</span> studentId = <span class=\"string\">\"&lt;%=session.getAttribute(\"</span>userId<span class=\"string\">\")%&gt;\"</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"注意小坑\"><a href=\"#注意小坑\" class=\"headerlink\" title=\"注意小坑\"></a>注意小坑</h2><p>以上代码必须写在Jsp文件中，在引入外部Js文件时上述代码失效。</p>\n"},{"title":"为你的网站添加动画彩带背景-尤雨溪博客","comment":true,"date":"2017-04-10T12:57:25.000Z","cover":"http://ortur5wom.bkt.clouddn.com/cover-ribbon.jpg","_content":"\n一直关注着前端框架Vue的作者尤雨溪，前些天浏览到他的博客，被他博客的动画背景深深吸引。大体效果如下图。\n\n![ScreenClip](http://ortur5wom.bkt.clouddn.com/canvas1.png)\n\n是的，一条飘逸、灵动的彩带！但更Amazing的是当用用户点击页面时，背景彩带也会实时响应点击事件，随机生成不同路径、不同颜色的新彩带。我瞬间中了这变幻莫测彩带条的毒，呆呆地点了半天的屏幕，好玩到根本停不下来。。\n\n\n接下来，让我们看一下如何实现这一canvas背景彩带的效果。其实只需要简单的几十行代码，就能轻松实现。然后就可以添加到自己的个人网站了。\n\n# 用到的知识\n\njs基础+canvas\n\n# 实现思路\n\n## 1.canvas的使用\n\n`CanvasRenderingContext2D` 接口提供的 2D 渲染背景用来绘制[canvas](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/canvas)元素，为了获得这个接口的对象，需要在`<canvas>`上调用 [getContext()](https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLCanvasElement/getContext) ，并提供一个 `\"2d\"` 的参数：\n\n```javascript\nvar canvas = document.getElementById('tutorial');\nvar ctx = canvas.getContext('2d');\n```\n\n一旦你得到 2D 渲染背景后，你可以像下面一样绘制：\n\n（以绘制`路径`为例，此外矩形、文本、图像等）\n\n```javascript\nctx.beginPath();\nctx.strokeStyle = 'blue';\nctx.moveTo(10,50);\nctx.lineTo(200,50);\nctx.stroke();\n```\n\n绘制效果如下：\n\n![ScreenClip1](http://ortur5wom.bkt.clouddn.com/canvas2.png)\n\n## 2.绘制折线\n\n对以上代码稍作改变，使直线变为折线：\n\n``` javascript\nctx.beginPath();\nctx.strokeStyle = 'blue';\nctx.moveTo(10,50);\nctx.lineTo(100,80);\nctx.lineTo(200,20);\nctx.lineTo(300,40);\nctx.stroke();\nctx.closePath();\n```\n\n绘制效果如下：\n\n![ScreenClip2](http://ortur5wom.bkt.clouddn.com/canvas3.png)\n\n此时，一条与最终要实现的背景彩带在大体形状上已初具雏形。只是缺少自动绘制、路径宽度和其中每一段路径上随机的颜色。\n\n## 3.绘制背景彩带\n\n以下是我的源代码，其中已有详细的注释信息，相信你一定能够看懂的。复制一下代码，保存为html文件，浏览器打开即可运行查看。\n\n``` html\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\"\n          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n</head>\n<body>\n<canvas></canvas>\n<script>\n    document.addEventListener('touchmove', function (e) {\n        e.preventDefault()\n    });\n    var canvasRibbon = document.getElementsByTagName('canvas')[0],\n        ctx = canvasRibbon.getContext('2d'),    // 获取canvas 2d上下文\n        dpr = window.devicePixelRatio || 1, // the size of one CSS pixel to the size of one physical pixel.\n        width = window.innerWidth,     // 返回窗口的文档显示区的宽高\n        height = window.innerHeight,\n        RIBBON_WIDE = 90,\n        path,\n        math = Math,\n        r = 0,\n        PI_2 = math.PI * 2,    // 圆周率*2\n        cos = math.cos,   // cos函数返回一个数值的余弦值（-1~1）\n        random = math.random;   // 返回0-1随机数\n\n    canvasRibbon.width = width * dpr;     // 返回实际宽高\n    canvasRibbon.height = height * dpr;\n    ctx.scale(dpr, dpr);    // 水平、竖直方向缩放\n    ctx.globalAlpha = 0.6;  // 图形透明度\n\n    function init() {\n        ctx.clearRect(0, 0, width, height);     // 擦除之前绘制内容\n        path = [{x: 0, y: height * 0.7 + RIBBON_WIDE}, {x: 0, y: height * 0.7 - RIBBON_WIDE}];\n        // 路径没有填满屏幕宽度时，绘制路径\n        while (path[1].x < width + RIBBON_WIDE) {\n            draw(path[0], path[1])     // 调用绘制方法\n        }\n    }\n\n    // 绘制彩带每一段路径\n    function draw(start, end) {\n        ctx.beginPath();    // 创建一个新的路径\n        ctx.moveTo(start.x, start.y);   // path起点\n        ctx.lineTo(end.x, end.y);   // path终点\n        var nextX = end.x + (random() * 2 - 0.25) * RIBBON_WIDE,\n            nextY = geneY(end.y);\n        ctx.lineTo(nextX, nextY);\n        ctx.closePath();\n\n        r -= PI_2 / -50;\n        // 随机生成并设置canvas路径16进制颜色\n        ctx.fillStyle = '#' + (cos(r) * 127 + 128 << 16 | cos(r + PI_2 / 3) * 127 + 128 << 8 | cos(r + PI_2 / 3 * 2) * 127 + 128).toString(16);\n        ctx.fill();     // 根据当前样式填充路径\n        path[0] = path[1];    // 起点更新为当前终点\n        path[1] = {x: nextX, y: nextY}     // 更新终点\n    }\n\n    // 获取下一路径终点的y坐标值\n    function geneY(y) {\n        var temp = y + (random() * 2 - 1.1) * RIBBON_WIDE;\n        return (temp > height || temp < 0) ? geneY(y) : temp\n    }\n\n    document.onclick = init;\n    document.ontouchstart = init;\n    init();\n</script>\n</body>\n</html>\n```\n\n此外我还提供[简单一条命令为你的网页添加canvas-ribbon背景彩带](https://github.com/zproo/canvas-ribbon)(Github源码)的方法。你可以直接访问我的github仓库获得，只需要一行代码就可以为你的网站添加上面介绍的canvas-ribbon背景彩带了。\n\n# 后记\n\n在为我自己的博客添加成功后，我还对Hexo 的Next主题添加了这一功能（只适用于Next的Pisces主题），并给Next作者发了PR。\n\n现在此提交已被作者Merge，所以如果你的博客使用了Hexo的Next主题，只需要在`主题配置文件`中找到`canvas-ribbon`属性，并设置为`true`，即可拥有背景彩带的效果。\n\n![ScreenClip3](http://ortur5wom.bkt.clouddn.com/canvas4.png)\n\n# 参考资料\n\n- [CanvasRenderingContext2D-路径](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/beginPath)\n- [evanyou](http://evanyou.me/)","source":"_posts/为Next主题添加canvas-ribbon.md","raw":"---\ntitle: 为你的网站添加动画彩带背景-尤雨溪博客\ncomment: true\ndate: 2017-04-10 20:57:25\ntags: [Hexo, GitHub, Canvas,Next,JavaScript]\ncover: http://ortur5wom.bkt.clouddn.com/cover-ribbon.jpg\n---\n\n一直关注着前端框架Vue的作者尤雨溪，前些天浏览到他的博客，被他博客的动画背景深深吸引。大体效果如下图。\n\n![ScreenClip](http://ortur5wom.bkt.clouddn.com/canvas1.png)\n\n是的，一条飘逸、灵动的彩带！但更Amazing的是当用用户点击页面时，背景彩带也会实时响应点击事件，随机生成不同路径、不同颜色的新彩带。我瞬间中了这变幻莫测彩带条的毒，呆呆地点了半天的屏幕，好玩到根本停不下来。。\n\n\n接下来，让我们看一下如何实现这一canvas背景彩带的效果。其实只需要简单的几十行代码，就能轻松实现。然后就可以添加到自己的个人网站了。\n\n# 用到的知识\n\njs基础+canvas\n\n# 实现思路\n\n## 1.canvas的使用\n\n`CanvasRenderingContext2D` 接口提供的 2D 渲染背景用来绘制[canvas](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/canvas)元素，为了获得这个接口的对象，需要在`<canvas>`上调用 [getContext()](https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLCanvasElement/getContext) ，并提供一个 `\"2d\"` 的参数：\n\n```javascript\nvar canvas = document.getElementById('tutorial');\nvar ctx = canvas.getContext('2d');\n```\n\n一旦你得到 2D 渲染背景后，你可以像下面一样绘制：\n\n（以绘制`路径`为例，此外矩形、文本、图像等）\n\n```javascript\nctx.beginPath();\nctx.strokeStyle = 'blue';\nctx.moveTo(10,50);\nctx.lineTo(200,50);\nctx.stroke();\n```\n\n绘制效果如下：\n\n![ScreenClip1](http://ortur5wom.bkt.clouddn.com/canvas2.png)\n\n## 2.绘制折线\n\n对以上代码稍作改变，使直线变为折线：\n\n``` javascript\nctx.beginPath();\nctx.strokeStyle = 'blue';\nctx.moveTo(10,50);\nctx.lineTo(100,80);\nctx.lineTo(200,20);\nctx.lineTo(300,40);\nctx.stroke();\nctx.closePath();\n```\n\n绘制效果如下：\n\n![ScreenClip2](http://ortur5wom.bkt.clouddn.com/canvas3.png)\n\n此时，一条与最终要实现的背景彩带在大体形状上已初具雏形。只是缺少自动绘制、路径宽度和其中每一段路径上随机的颜色。\n\n## 3.绘制背景彩带\n\n以下是我的源代码，其中已有详细的注释信息，相信你一定能够看懂的。复制一下代码，保存为html文件，浏览器打开即可运行查看。\n\n``` html\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\"\n          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n</head>\n<body>\n<canvas></canvas>\n<script>\n    document.addEventListener('touchmove', function (e) {\n        e.preventDefault()\n    });\n    var canvasRibbon = document.getElementsByTagName('canvas')[0],\n        ctx = canvasRibbon.getContext('2d'),    // 获取canvas 2d上下文\n        dpr = window.devicePixelRatio || 1, // the size of one CSS pixel to the size of one physical pixel.\n        width = window.innerWidth,     // 返回窗口的文档显示区的宽高\n        height = window.innerHeight,\n        RIBBON_WIDE = 90,\n        path,\n        math = Math,\n        r = 0,\n        PI_2 = math.PI * 2,    // 圆周率*2\n        cos = math.cos,   // cos函数返回一个数值的余弦值（-1~1）\n        random = math.random;   // 返回0-1随机数\n\n    canvasRibbon.width = width * dpr;     // 返回实际宽高\n    canvasRibbon.height = height * dpr;\n    ctx.scale(dpr, dpr);    // 水平、竖直方向缩放\n    ctx.globalAlpha = 0.6;  // 图形透明度\n\n    function init() {\n        ctx.clearRect(0, 0, width, height);     // 擦除之前绘制内容\n        path = [{x: 0, y: height * 0.7 + RIBBON_WIDE}, {x: 0, y: height * 0.7 - RIBBON_WIDE}];\n        // 路径没有填满屏幕宽度时，绘制路径\n        while (path[1].x < width + RIBBON_WIDE) {\n            draw(path[0], path[1])     // 调用绘制方法\n        }\n    }\n\n    // 绘制彩带每一段路径\n    function draw(start, end) {\n        ctx.beginPath();    // 创建一个新的路径\n        ctx.moveTo(start.x, start.y);   // path起点\n        ctx.lineTo(end.x, end.y);   // path终点\n        var nextX = end.x + (random() * 2 - 0.25) * RIBBON_WIDE,\n            nextY = geneY(end.y);\n        ctx.lineTo(nextX, nextY);\n        ctx.closePath();\n\n        r -= PI_2 / -50;\n        // 随机生成并设置canvas路径16进制颜色\n        ctx.fillStyle = '#' + (cos(r) * 127 + 128 << 16 | cos(r + PI_2 / 3) * 127 + 128 << 8 | cos(r + PI_2 / 3 * 2) * 127 + 128).toString(16);\n        ctx.fill();     // 根据当前样式填充路径\n        path[0] = path[1];    // 起点更新为当前终点\n        path[1] = {x: nextX, y: nextY}     // 更新终点\n    }\n\n    // 获取下一路径终点的y坐标值\n    function geneY(y) {\n        var temp = y + (random() * 2 - 1.1) * RIBBON_WIDE;\n        return (temp > height || temp < 0) ? geneY(y) : temp\n    }\n\n    document.onclick = init;\n    document.ontouchstart = init;\n    init();\n</script>\n</body>\n</html>\n```\n\n此外我还提供[简单一条命令为你的网页添加canvas-ribbon背景彩带](https://github.com/zproo/canvas-ribbon)(Github源码)的方法。你可以直接访问我的github仓库获得，只需要一行代码就可以为你的网站添加上面介绍的canvas-ribbon背景彩带了。\n\n# 后记\n\n在为我自己的博客添加成功后，我还对Hexo 的Next主题添加了这一功能（只适用于Next的Pisces主题），并给Next作者发了PR。\n\n现在此提交已被作者Merge，所以如果你的博客使用了Hexo的Next主题，只需要在`主题配置文件`中找到`canvas-ribbon`属性，并设置为`true`，即可拥有背景彩带的效果。\n\n![ScreenClip3](http://ortur5wom.bkt.clouddn.com/canvas4.png)\n\n# 参考资料\n\n- [CanvasRenderingContext2D-路径](https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/beginPath)\n- [evanyou](http://evanyou.me/)","slug":"为Next主题添加canvas-ribbon","published":1,"updated":"2017-06-20T04:08:45.932Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8r3chs0000czoh1fhl59v59","content":"<p>一直关注着前端框架Vue的作者尤雨溪，前些天浏览到他的博客，被他博客的动画背景深深吸引。大体效果如下图。</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/canvas1.png\" alt=\"ScreenClip\"></p>\n<p>是的，一条飘逸、灵动的彩带！但更Amazing的是当用用户点击页面时，背景彩带也会实时响应点击事件，随机生成不同路径、不同颜色的新彩带。我瞬间中了这变幻莫测彩带条的毒，呆呆地点了半天的屏幕，好玩到根本停不下来。。</p>\n<p>接下来，让我们看一下如何实现这一canvas背景彩带的效果。其实只需要简单的几十行代码，就能轻松实现。然后就可以添加到自己的个人网站了。</p>\n<h1 id=\"用到的知识\"><a href=\"#用到的知识\" class=\"headerlink\" title=\"用到的知识\"></a>用到的知识</h1><p>js基础+canvas</p>\n<h1 id=\"实现思路\"><a href=\"#实现思路\" class=\"headerlink\" title=\"实现思路\"></a>实现思路</h1><h2 id=\"1-canvas的使用\"><a href=\"#1-canvas的使用\" class=\"headerlink\" title=\"1.canvas的使用\"></a>1.canvas的使用</h2><p><code>CanvasRenderingContext2D</code> 接口提供的 2D 渲染背景用来绘制<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/canvas\" target=\"_blank\" rel=\"external\">canvas</a>元素，为了获得这个接口的对象，需要在<code>&lt;canvas&gt;</code>上调用 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLCanvasElement/getContext\" target=\"_blank\" rel=\"external\">getContext()</a> ，并提供一个 <code>&quot;2d&quot;</code> 的参数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'tutorial'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> ctx = canvas.getContext(<span class=\"string\">'2d'</span>);</div></pre></td></tr></table></figure>\n<p>一旦你得到 2D 渲染背景后，你可以像下面一样绘制：</p>\n<p>（以绘制<code>路径</code>为例，此外矩形、文本、图像等）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">ctx.beginPath();</div><div class=\"line\">ctx.strokeStyle = <span class=\"string\">'blue'</span>;</div><div class=\"line\">ctx.moveTo(<span class=\"number\">10</span>,<span class=\"number\">50</span>);</div><div class=\"line\">ctx.lineTo(<span class=\"number\">200</span>,<span class=\"number\">50</span>);</div><div class=\"line\">ctx.stroke();</div></pre></td></tr></table></figure>\n<p>绘制效果如下：</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/canvas2.png\" alt=\"ScreenClip1\"></p>\n<h2 id=\"2-绘制折线\"><a href=\"#2-绘制折线\" class=\"headerlink\" title=\"2.绘制折线\"></a>2.绘制折线</h2><p>对以上代码稍作改变，使直线变为折线：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">ctx.beginPath();</div><div class=\"line\">ctx.strokeStyle = <span class=\"string\">'blue'</span>;</div><div class=\"line\">ctx.moveTo(<span class=\"number\">10</span>,<span class=\"number\">50</span>);</div><div class=\"line\">ctx.lineTo(<span class=\"number\">100</span>,<span class=\"number\">80</span>);</div><div class=\"line\">ctx.lineTo(<span class=\"number\">200</span>,<span class=\"number\">20</span>);</div><div class=\"line\">ctx.lineTo(<span class=\"number\">300</span>,<span class=\"number\">40</span>);</div><div class=\"line\">ctx.stroke();</div><div class=\"line\">ctx.closePath();</div></pre></td></tr></table></figure>\n<p>绘制效果如下：</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/canvas3.png\" alt=\"ScreenClip2\"></p>\n<p>此时，一条与最终要实现的背景彩带在大体形状上已初具雏形。只是缺少自动绘制、路径宽度和其中每一段路径上随机的颜色。</p>\n<h2 id=\"3-绘制背景彩带\"><a href=\"#3-绘制背景彩带\" class=\"headerlink\" title=\"3.绘制背景彩带\"></a>3.绘制背景彩带</h2><p>以下是我的源代码，其中已有详细的注释信息，相信你一定能够看懂的。复制一下代码，保存为html文件，浏览器打开即可运行查看。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span></span></div><div class=\"line\">          <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"</span>&gt;</div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'touchmove'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">        e.preventDefault()</div><div class=\"line\">    &#125;);</div><div class=\"line\">    <span class=\"keyword\">var</span> canvasRibbon = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'canvas'</span>)[<span class=\"number\">0</span>],</div><div class=\"line\">        ctx = canvasRibbon.getContext(<span class=\"string\">'2d'</span>),    <span class=\"comment\">// 获取canvas 2d上下文</span></div><div class=\"line\">        dpr = <span class=\"built_in\">window</span>.devicePixelRatio || <span class=\"number\">1</span>, <span class=\"comment\">// the size of one CSS pixel to the size of one physical pixel.</span></div><div class=\"line\">        width = <span class=\"built_in\">window</span>.innerWidth,     <span class=\"comment\">// 返回窗口的文档显示区的宽高</span></div><div class=\"line\">        height = <span class=\"built_in\">window</span>.innerHeight,</div><div class=\"line\">        RIBBON_WIDE = <span class=\"number\">90</span>,</div><div class=\"line\">        path,</div><div class=\"line\">        math = <span class=\"built_in\">Math</span>,</div><div class=\"line\">        r = <span class=\"number\">0</span>,</div><div class=\"line\">        PI_2 = math.PI * <span class=\"number\">2</span>,    <span class=\"comment\">// 圆周率*2</span></div><div class=\"line\">        cos = math.cos,   <span class=\"comment\">// cos函数返回一个数值的余弦值（-1~1）</span></div><div class=\"line\">        random = math.random;   <span class=\"comment\">// 返回0-1随机数</span></div><div class=\"line\"></div><div class=\"line\">    canvasRibbon.width = width * dpr;     <span class=\"comment\">// 返回实际宽高</span></div><div class=\"line\">    canvasRibbon.height = height * dpr;</div><div class=\"line\">    ctx.scale(dpr, dpr);    <span class=\"comment\">// 水平、竖直方向缩放</span></div><div class=\"line\">    ctx.globalAlpha = <span class=\"number\">0.6</span>;  <span class=\"comment\">// 图形透明度</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">init</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        ctx.clearRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);     <span class=\"comment\">// 擦除之前绘制内容</span></div><div class=\"line\">        path = [&#123;<span class=\"attr\">x</span>: <span class=\"number\">0</span>, <span class=\"attr\">y</span>: height * <span class=\"number\">0.7</span> + RIBBON_WIDE&#125;, &#123;<span class=\"attr\">x</span>: <span class=\"number\">0</span>, <span class=\"attr\">y</span>: height * <span class=\"number\">0.7</span> - RIBBON_WIDE&#125;];</div><div class=\"line\">        <span class=\"comment\">// 路径没有填满屏幕宽度时，绘制路径</span></div><div class=\"line\">        <span class=\"keyword\">while</span> (path[<span class=\"number\">1</span>].x &lt; width + RIBBON_WIDE) &#123;</div><div class=\"line\">            draw(path[<span class=\"number\">0</span>], path[<span class=\"number\">1</span>])     <span class=\"comment\">// 调用绘制方法</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// 绘制彩带每一段路径</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">draw</span>(<span class=\"params\">start, end</span>) </span>&#123;</div><div class=\"line\">        ctx.beginPath();    <span class=\"comment\">// 创建一个新的路径</span></div><div class=\"line\">        ctx.moveTo(start.x, start.y);   <span class=\"comment\">// path起点</span></div><div class=\"line\">        ctx.lineTo(end.x, end.y);   <span class=\"comment\">// path终点</span></div><div class=\"line\">        <span class=\"keyword\">var</span> nextX = end.x + (random() * <span class=\"number\">2</span> - <span class=\"number\">0.25</span>) * RIBBON_WIDE,</div><div class=\"line\">            nextY = geneY(end.y);</div><div class=\"line\">        ctx.lineTo(nextX, nextY);</div><div class=\"line\">        ctx.closePath();</div><div class=\"line\"></div><div class=\"line\">        r -= PI_2 / <span class=\"number\">-50</span>;</div><div class=\"line\">        <span class=\"comment\">// 随机生成并设置canvas路径16进制颜色</span></div><div class=\"line\">        ctx.fillStyle = <span class=\"string\">'#'</span> + (cos(r) * <span class=\"number\">127</span> + <span class=\"number\">128</span> &lt;&lt; <span class=\"number\">16</span> | cos(r + PI_2 / <span class=\"number\">3</span>) * <span class=\"number\">127</span> + <span class=\"number\">128</span> &lt;&lt; <span class=\"number\">8</span> | cos(r + PI_2 / <span class=\"number\">3</span> * <span class=\"number\">2</span>) * <span class=\"number\">127</span> + <span class=\"number\">128</span>).toString(<span class=\"number\">16</span>);</div><div class=\"line\">        ctx.fill();     <span class=\"comment\">// 根据当前样式填充路径</span></div><div class=\"line\">        path[<span class=\"number\">0</span>] = path[<span class=\"number\">1</span>];    <span class=\"comment\">// 起点更新为当前终点</span></div><div class=\"line\">        path[<span class=\"number\">1</span>] = &#123;<span class=\"attr\">x</span>: nextX, <span class=\"attr\">y</span>: nextY&#125;     <span class=\"comment\">// 更新终点</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// 获取下一路径终点的y坐标值</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">geneY</span>(<span class=\"params\">y</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> temp = y + (random() * <span class=\"number\">2</span> - <span class=\"number\">1.1</span>) * RIBBON_WIDE;</div><div class=\"line\">        <span class=\"keyword\">return</span> (temp &gt; height || temp &lt; <span class=\"number\">0</span>) ? geneY(y) : temp</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">document</span>.onclick = init;</div><div class=\"line\">    <span class=\"built_in\">document</span>.ontouchstart = init;</div><div class=\"line\">    init();</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>此外我还提供<a href=\"https://github.com/zproo/canvas-ribbon\" target=\"_blank\" rel=\"external\">简单一条命令为你的网页添加canvas-ribbon背景彩带</a>(Github源码)的方法。你可以直接访问我的github仓库获得，只需要一行代码就可以为你的网站添加上面介绍的canvas-ribbon背景彩带了。</p>\n<h1 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h1><p>在为我自己的博客添加成功后，我还对Hexo 的Next主题添加了这一功能（只适用于Next的Pisces主题），并给Next作者发了PR。</p>\n<p>现在此提交已被作者Merge，所以如果你的博客使用了Hexo的Next主题，只需要在<code>主题配置文件</code>中找到<code>canvas-ribbon</code>属性，并设置为<code>true</code>，即可拥有背景彩带的效果。</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/canvas4.png\" alt=\"ScreenClip3\"></p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/beginPath\" target=\"_blank\" rel=\"external\">CanvasRenderingContext2D-路径</a></li>\n<li><a href=\"http://evanyou.me/\" target=\"_blank\" rel=\"external\">evanyou</a></li>\n</ul>\n","excerpt":"","more":"<p>一直关注着前端框架Vue的作者尤雨溪，前些天浏览到他的博客，被他博客的动画背景深深吸引。大体效果如下图。</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/canvas1.png\" alt=\"ScreenClip\"></p>\n<p>是的，一条飘逸、灵动的彩带！但更Amazing的是当用用户点击页面时，背景彩带也会实时响应点击事件，随机生成不同路径、不同颜色的新彩带。我瞬间中了这变幻莫测彩带条的毒，呆呆地点了半天的屏幕，好玩到根本停不下来。。</p>\n<p>接下来，让我们看一下如何实现这一canvas背景彩带的效果。其实只需要简单的几十行代码，就能轻松实现。然后就可以添加到自己的个人网站了。</p>\n<h1 id=\"用到的知识\"><a href=\"#用到的知识\" class=\"headerlink\" title=\"用到的知识\"></a>用到的知识</h1><p>js基础+canvas</p>\n<h1 id=\"实现思路\"><a href=\"#实现思路\" class=\"headerlink\" title=\"实现思路\"></a>实现思路</h1><h2 id=\"1-canvas的使用\"><a href=\"#1-canvas的使用\" class=\"headerlink\" title=\"1.canvas的使用\"></a>1.canvas的使用</h2><p><code>CanvasRenderingContext2D</code> 接口提供的 2D 渲染背景用来绘制<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/canvas\">canvas</a>元素，为了获得这个接口的对象，需要在<code>&lt;canvas&gt;</code>上调用 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLCanvasElement/getContext\">getContext()</a> ，并提供一个 <code>&quot;2d&quot;</code> 的参数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'tutorial'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> ctx = canvas.getContext(<span class=\"string\">'2d'</span>);</div></pre></td></tr></table></figure>\n<p>一旦你得到 2D 渲染背景后，你可以像下面一样绘制：</p>\n<p>（以绘制<code>路径</code>为例，此外矩形、文本、图像等）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">ctx.beginPath();</div><div class=\"line\">ctx.strokeStyle = <span class=\"string\">'blue'</span>;</div><div class=\"line\">ctx.moveTo(<span class=\"number\">10</span>,<span class=\"number\">50</span>);</div><div class=\"line\">ctx.lineTo(<span class=\"number\">200</span>,<span class=\"number\">50</span>);</div><div class=\"line\">ctx.stroke();</div></pre></td></tr></table></figure>\n<p>绘制效果如下：</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/canvas2.png\" alt=\"ScreenClip1\"></p>\n<h2 id=\"2-绘制折线\"><a href=\"#2-绘制折线\" class=\"headerlink\" title=\"2.绘制折线\"></a>2.绘制折线</h2><p>对以上代码稍作改变，使直线变为折线：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">ctx.beginPath();</div><div class=\"line\">ctx.strokeStyle = <span class=\"string\">'blue'</span>;</div><div class=\"line\">ctx.moveTo(<span class=\"number\">10</span>,<span class=\"number\">50</span>);</div><div class=\"line\">ctx.lineTo(<span class=\"number\">100</span>,<span class=\"number\">80</span>);</div><div class=\"line\">ctx.lineTo(<span class=\"number\">200</span>,<span class=\"number\">20</span>);</div><div class=\"line\">ctx.lineTo(<span class=\"number\">300</span>,<span class=\"number\">40</span>);</div><div class=\"line\">ctx.stroke();</div><div class=\"line\">ctx.closePath();</div></pre></td></tr></table></figure>\n<p>绘制效果如下：</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/canvas3.png\" alt=\"ScreenClip2\"></p>\n<p>此时，一条与最终要实现的背景彩带在大体形状上已初具雏形。只是缺少自动绘制、路径宽度和其中每一段路径上随机的颜色。</p>\n<h2 id=\"3-绘制背景彩带\"><a href=\"#3-绘制背景彩带\" class=\"headerlink\" title=\"3.绘制背景彩带\"></a>3.绘制背景彩带</h2><p>以下是我的源代码，其中已有详细的注释信息，相信你一定能够看懂的。复制一下代码，保存为html文件，浏览器打开即可运行查看。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span></div><div class=\"line\">          <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'touchmove'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">        e.preventDefault()</div><div class=\"line\">    &#125;);</div><div class=\"line\">    <span class=\"keyword\">var</span> canvasRibbon = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'canvas'</span>)[<span class=\"number\">0</span>],</div><div class=\"line\">        ctx = canvasRibbon.getContext(<span class=\"string\">'2d'</span>),    <span class=\"comment\">// 获取canvas 2d上下文</span></div><div class=\"line\">        dpr = <span class=\"built_in\">window</span>.devicePixelRatio || <span class=\"number\">1</span>, <span class=\"comment\">// the size of one CSS pixel to the size of one physical pixel.</span></div><div class=\"line\">        width = <span class=\"built_in\">window</span>.innerWidth,     <span class=\"comment\">// 返回窗口的文档显示区的宽高</span></div><div class=\"line\">        height = <span class=\"built_in\">window</span>.innerHeight,</div><div class=\"line\">        RIBBON_WIDE = <span class=\"number\">90</span>,</div><div class=\"line\">        path,</div><div class=\"line\">        math = <span class=\"built_in\">Math</span>,</div><div class=\"line\">        r = <span class=\"number\">0</span>,</div><div class=\"line\">        PI_2 = math.PI * <span class=\"number\">2</span>,    <span class=\"comment\">// 圆周率*2</span></div><div class=\"line\">        cos = math.cos,   <span class=\"comment\">// cos函数返回一个数值的余弦值（-1~1）</span></div><div class=\"line\">        random = math.random;   <span class=\"comment\">// 返回0-1随机数</span></div><div class=\"line\"></div><div class=\"line\">    canvasRibbon.width = width * dpr;     <span class=\"comment\">// 返回实际宽高</span></div><div class=\"line\">    canvasRibbon.height = height * dpr;</div><div class=\"line\">    ctx.scale(dpr, dpr);    <span class=\"comment\">// 水平、竖直方向缩放</span></div><div class=\"line\">    ctx.globalAlpha = <span class=\"number\">0.6</span>;  <span class=\"comment\">// 图形透明度</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">init</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        ctx.clearRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);     <span class=\"comment\">// 擦除之前绘制内容</span></div><div class=\"line\">        path = [&#123;<span class=\"attr\">x</span>: <span class=\"number\">0</span>, <span class=\"attr\">y</span>: height * <span class=\"number\">0.7</span> + RIBBON_WIDE&#125;, &#123;<span class=\"attr\">x</span>: <span class=\"number\">0</span>, <span class=\"attr\">y</span>: height * <span class=\"number\">0.7</span> - RIBBON_WIDE&#125;];</div><div class=\"line\">        <span class=\"comment\">// 路径没有填满屏幕宽度时，绘制路径</span></div><div class=\"line\">        <span class=\"keyword\">while</span> (path[<span class=\"number\">1</span>].x &lt; width + RIBBON_WIDE) &#123;</div><div class=\"line\">            draw(path[<span class=\"number\">0</span>], path[<span class=\"number\">1</span>])     <span class=\"comment\">// 调用绘制方法</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// 绘制彩带每一段路径</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">draw</span>(<span class=\"params\">start, end</span>) </span>&#123;</div><div class=\"line\">        ctx.beginPath();    <span class=\"comment\">// 创建一个新的路径</span></div><div class=\"line\">        ctx.moveTo(start.x, start.y);   <span class=\"comment\">// path起点</span></div><div class=\"line\">        ctx.lineTo(end.x, end.y);   <span class=\"comment\">// path终点</span></div><div class=\"line\">        <span class=\"keyword\">var</span> nextX = end.x + (random() * <span class=\"number\">2</span> - <span class=\"number\">0.25</span>) * RIBBON_WIDE,</div><div class=\"line\">            nextY = geneY(end.y);</div><div class=\"line\">        ctx.lineTo(nextX, nextY);</div><div class=\"line\">        ctx.closePath();</div><div class=\"line\"></div><div class=\"line\">        r -= PI_2 / <span class=\"number\">-50</span>;</div><div class=\"line\">        <span class=\"comment\">// 随机生成并设置canvas路径16进制颜色</span></div><div class=\"line\">        ctx.fillStyle = <span class=\"string\">'#'</span> + (cos(r) * <span class=\"number\">127</span> + <span class=\"number\">128</span> &lt;&lt; <span class=\"number\">16</span> | cos(r + PI_2 / <span class=\"number\">3</span>) * <span class=\"number\">127</span> + <span class=\"number\">128</span> &lt;&lt; <span class=\"number\">8</span> | cos(r + PI_2 / <span class=\"number\">3</span> * <span class=\"number\">2</span>) * <span class=\"number\">127</span> + <span class=\"number\">128</span>).toString(<span class=\"number\">16</span>);</div><div class=\"line\">        ctx.fill();     <span class=\"comment\">// 根据当前样式填充路径</span></div><div class=\"line\">        path[<span class=\"number\">0</span>] = path[<span class=\"number\">1</span>];    <span class=\"comment\">// 起点更新为当前终点</span></div><div class=\"line\">        path[<span class=\"number\">1</span>] = &#123;<span class=\"attr\">x</span>: nextX, <span class=\"attr\">y</span>: nextY&#125;     <span class=\"comment\">// 更新终点</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// 获取下一路径终点的y坐标值</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">geneY</span>(<span class=\"params\">y</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> temp = y + (random() * <span class=\"number\">2</span> - <span class=\"number\">1.1</span>) * RIBBON_WIDE;</div><div class=\"line\">        <span class=\"keyword\">return</span> (temp &gt; height || temp &lt; <span class=\"number\">0</span>) ? geneY(y) : temp</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">document</span>.onclick = init;</div><div class=\"line\">    <span class=\"built_in\">document</span>.ontouchstart = init;</div><div class=\"line\">    init();</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>此外我还提供<a href=\"https://github.com/zproo/canvas-ribbon\">简单一条命令为你的网页添加canvas-ribbon背景彩带</a>(Github源码)的方法。你可以直接访问我的github仓库获得，只需要一行代码就可以为你的网站添加上面介绍的canvas-ribbon背景彩带了。</p>\n<h1 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h1><p>在为我自己的博客添加成功后，我还对Hexo 的Next主题添加了这一功能（只适用于Next的Pisces主题），并给Next作者发了PR。</p>\n<p>现在此提交已被作者Merge，所以如果你的博客使用了Hexo的Next主题，只需要在<code>主题配置文件</code>中找到<code>canvas-ribbon</code>属性，并设置为<code>true</code>，即可拥有背景彩带的效果。</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/canvas4.png\" alt=\"ScreenClip3\"></p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/beginPath\">CanvasRenderingContext2D-路径</a></li>\n<li><a href=\"http://evanyou.me/\">evanyou</a></li>\n</ul>\n"},{"title":"ngrok外网映射","comment":true,"date":"2017-06-20T03:32:50.000Z","_content":"# 1.为什么需要外网映射\n\n我遇到的主要场景是在微信公众号开发中，因为用户跟微信公众号产生的交互行为，微信会把用户的相关信息推送到我们自己的服务器，而这个推送的前提是微信能够访问到我们的服务，如果服务在本地，那微信当然无法推送给我们，这使得开发功能的时候调试相当麻烦。外网映射就是把本地站点映射出去，解决微信推送给我们的用户信息等消息进行实时本地调试。\n\n# 2.外网映射工具ngrok\n\n>  官方介绍：ngrok is a reverse proxy that creates a secure tunnel from a public endpoint to a locally running web service. ngrok captures and analyzes all traffic over the tunnel for later inspection and replay.\n>\n>  翻译： ngrok是一个能够将本地的网络服务安全的映射到公共网络的反向代理工具。ngrok捕获和分析所有通过隧道的流量后检查和重放。\n\n# 3. 使用方式\n\n## 3.1 ngrok几个问题\n\n- 目前国内访问该网站提供的服务(服务器在国外)相当不稳定，经常连接不上\n\n- 映射的外网域名是随机的。(想要固定域名需要付费服务)\n\n  ![ScreenClip](http://ortur5wom.bkt.clouddn.com/ngrok0.png)\n\n## 3.2 ngrok国内服务器+固定域名\n\n国内有不少第三方的ngrok服务提供，如natapp、花生壳、Sunny-Ngrok等。这里我们选用Sunny-Ngrok，官网地址：[http://www.ngrok.cc/](http://www.ngrok.cc/)。\n\n**使用步骤：**\n\n1. 进入官网完成注册,登陆后点击 `开通隧道`(免费)\n\n2. 按照下图填写信息。\n\n   ![2214876990875395](http://ortur5wom.bkt.clouddn.com/ngrok1.png)\n\n   点击 `确定添加`，获得`隧道id`。\n\n   ![ScreenClip1](http://ortur5wom.bkt.clouddn.com/ngrok2.png)\n\n\n3. 官网下载客户端，使用`隧道id`启动已经创建好的隧道。\n\n   ![ScreenClip1](http://ortur5wom.bkt.clouddn.com/ngrok3.png)\n\n   详细步骤地址：[http://www.sunnyos.com/article-show-71.html](http://www.sunnyos.com/article-show-71.html)\n\n","source":"_posts/ngrok外网映射.md","raw":"---\ntitle: ngrok外网映射\ncomment: true\ndate: 2017-06-20 11:32:50\ntags: [ngrok, 外网映射, 微信开发]\n---\n# 1.为什么需要外网映射\n\n我遇到的主要场景是在微信公众号开发中，因为用户跟微信公众号产生的交互行为，微信会把用户的相关信息推送到我们自己的服务器，而这个推送的前提是微信能够访问到我们的服务，如果服务在本地，那微信当然无法推送给我们，这使得开发功能的时候调试相当麻烦。外网映射就是把本地站点映射出去，解决微信推送给我们的用户信息等消息进行实时本地调试。\n\n# 2.外网映射工具ngrok\n\n>  官方介绍：ngrok is a reverse proxy that creates a secure tunnel from a public endpoint to a locally running web service. ngrok captures and analyzes all traffic over the tunnel for later inspection and replay.\n>\n>  翻译： ngrok是一个能够将本地的网络服务安全的映射到公共网络的反向代理工具。ngrok捕获和分析所有通过隧道的流量后检查和重放。\n\n# 3. 使用方式\n\n## 3.1 ngrok几个问题\n\n- 目前国内访问该网站提供的服务(服务器在国外)相当不稳定，经常连接不上\n\n- 映射的外网域名是随机的。(想要固定域名需要付费服务)\n\n  ![ScreenClip](http://ortur5wom.bkt.clouddn.com/ngrok0.png)\n\n## 3.2 ngrok国内服务器+固定域名\n\n国内有不少第三方的ngrok服务提供，如natapp、花生壳、Sunny-Ngrok等。这里我们选用Sunny-Ngrok，官网地址：[http://www.ngrok.cc/](http://www.ngrok.cc/)。\n\n**使用步骤：**\n\n1. 进入官网完成注册,登陆后点击 `开通隧道`(免费)\n\n2. 按照下图填写信息。\n\n   ![2214876990875395](http://ortur5wom.bkt.clouddn.com/ngrok1.png)\n\n   点击 `确定添加`，获得`隧道id`。\n\n   ![ScreenClip1](http://ortur5wom.bkt.clouddn.com/ngrok2.png)\n\n\n3. 官网下载客户端，使用`隧道id`启动已经创建好的隧道。\n\n   ![ScreenClip1](http://ortur5wom.bkt.clouddn.com/ngrok3.png)\n\n   详细步骤地址：[http://www.sunnyos.com/article-show-71.html](http://www.sunnyos.com/article-show-71.html)\n\n","slug":"ngrok外网映射","published":1,"updated":"2017-06-20T07:34:13.783Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8r3chs1000dzoh1jrnm3raq","content":"<h1 id=\"1-为什么需要外网映射\"><a href=\"#1-为什么需要外网映射\" class=\"headerlink\" title=\"1.为什么需要外网映射\"></a>1.为什么需要外网映射</h1><p>我遇到的主要场景是在微信公众号开发中，因为用户跟微信公众号产生的交互行为，微信会把用户的相关信息推送到我们自己的服务器，而这个推送的前提是微信能够访问到我们的服务，如果服务在本地，那微信当然无法推送给我们，这使得开发功能的时候调试相当麻烦。外网映射就是把本地站点映射出去，解决微信推送给我们的用户信息等消息进行实时本地调试。</p>\n<h1 id=\"2-外网映射工具ngrok\"><a href=\"#2-外网映射工具ngrok\" class=\"headerlink\" title=\"2.外网映射工具ngrok\"></a>2.外网映射工具ngrok</h1><blockquote>\n<p> 官方介绍：ngrok is a reverse proxy that creates a secure tunnel from a public endpoint to a locally running web service. ngrok captures and analyzes all traffic over the tunnel for later inspection and replay.</p>\n<p> 翻译： ngrok是一个能够将本地的网络服务安全的映射到公共网络的反向代理工具。ngrok捕获和分析所有通过隧道的流量后检查和重放。</p>\n</blockquote>\n<h1 id=\"3-使用方式\"><a href=\"#3-使用方式\" class=\"headerlink\" title=\"3. 使用方式\"></a>3. 使用方式</h1><h2 id=\"3-1-ngrok几个问题\"><a href=\"#3-1-ngrok几个问题\" class=\"headerlink\" title=\"3.1 ngrok几个问题\"></a>3.1 ngrok几个问题</h2><ul>\n<li><p>目前国内访问该网站提供的服务(服务器在国外)相当不稳定，经常连接不上</p>\n</li>\n<li><p>映射的外网域名是随机的。(想要固定域名需要付费服务)</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/ngrok0.png\" alt=\"ScreenClip\"></p>\n</li>\n</ul>\n<h2 id=\"3-2-ngrok国内服务器-固定域名\"><a href=\"#3-2-ngrok国内服务器-固定域名\" class=\"headerlink\" title=\"3.2 ngrok国内服务器+固定域名\"></a>3.2 ngrok国内服务器+固定域名</h2><p>国内有不少第三方的ngrok服务提供，如natapp、花生壳、Sunny-Ngrok等。这里我们选用Sunny-Ngrok，官网地址：<a href=\"http://www.ngrok.cc/\" target=\"_blank\" rel=\"external\">http://www.ngrok.cc/</a>。</p>\n<p><strong>使用步骤：</strong></p>\n<ol>\n<li><p>进入官网完成注册,登陆后点击 <code>开通隧道</code>(免费)</p>\n</li>\n<li><p>按照下图填写信息。</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/ngrok1.png\" alt=\"2214876990875395\"></p>\n<p>点击 <code>确定添加</code>，获得<code>隧道id</code>。</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/ngrok2.png\" alt=\"ScreenClip1\"></p>\n</li>\n</ol>\n<ol>\n<li><p>官网下载客户端，使用<code>隧道id</code>启动已经创建好的隧道。</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/ngrok3.png\" alt=\"ScreenClip1\"></p>\n<p>详细步骤地址：<a href=\"http://www.sunnyos.com/article-show-71.html\" target=\"_blank\" rel=\"external\">http://www.sunnyos.com/article-show-71.html</a></p>\n</li>\n</ol>\n","excerpt":"","more":"<h1 id=\"1-为什么需要外网映射\"><a href=\"#1-为什么需要外网映射\" class=\"headerlink\" title=\"1.为什么需要外网映射\"></a>1.为什么需要外网映射</h1><p>我遇到的主要场景是在微信公众号开发中，因为用户跟微信公众号产生的交互行为，微信会把用户的相关信息推送到我们自己的服务器，而这个推送的前提是微信能够访问到我们的服务，如果服务在本地，那微信当然无法推送给我们，这使得开发功能的时候调试相当麻烦。外网映射就是把本地站点映射出去，解决微信推送给我们的用户信息等消息进行实时本地调试。</p>\n<h1 id=\"2-外网映射工具ngrok\"><a href=\"#2-外网映射工具ngrok\" class=\"headerlink\" title=\"2.外网映射工具ngrok\"></a>2.外网映射工具ngrok</h1><blockquote>\n<p> 官方介绍：ngrok is a reverse proxy that creates a secure tunnel from a public endpoint to a locally running web service. ngrok captures and analyzes all traffic over the tunnel for later inspection and replay.</p>\n<p> 翻译： ngrok是一个能够将本地的网络服务安全的映射到公共网络的反向代理工具。ngrok捕获和分析所有通过隧道的流量后检查和重放。</p>\n</blockquote>\n<h1 id=\"3-使用方式\"><a href=\"#3-使用方式\" class=\"headerlink\" title=\"3. 使用方式\"></a>3. 使用方式</h1><h2 id=\"3-1-ngrok几个问题\"><a href=\"#3-1-ngrok几个问题\" class=\"headerlink\" title=\"3.1 ngrok几个问题\"></a>3.1 ngrok几个问题</h2><ul>\n<li><p>目前国内访问该网站提供的服务(服务器在国外)相当不稳定，经常连接不上</p>\n</li>\n<li><p>映射的外网域名是随机的。(想要固定域名需要付费服务)</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/ngrok0.png\" alt=\"ScreenClip\"></p>\n</li>\n</ul>\n<h2 id=\"3-2-ngrok国内服务器-固定域名\"><a href=\"#3-2-ngrok国内服务器-固定域名\" class=\"headerlink\" title=\"3.2 ngrok国内服务器+固定域名\"></a>3.2 ngrok国内服务器+固定域名</h2><p>国内有不少第三方的ngrok服务提供，如natapp、花生壳、Sunny-Ngrok等。这里我们选用Sunny-Ngrok，官网地址：<a href=\"http://www.ngrok.cc/\">http://www.ngrok.cc/</a>。</p>\n<p><strong>使用步骤：</strong></p>\n<ol>\n<li><p>进入官网完成注册,登陆后点击 <code>开通隧道</code>(免费)</p>\n</li>\n<li><p>按照下图填写信息。</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/ngrok1.png\" alt=\"2214876990875395\"></p>\n<p>点击 <code>确定添加</code>，获得<code>隧道id</code>。</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/ngrok2.png\" alt=\"ScreenClip1\"></p>\n</li>\n</ol>\n<ol>\n<li><p>官网下载客户端，使用<code>隧道id</code>启动已经创建好的隧道。</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/ngrok3.png\" alt=\"ScreenClip1\"></p>\n<p>详细步骤地址：<a href=\"http://www.sunnyos.com/article-show-71.html\">http://www.sunnyos.com/article-show-71.html</a></p>\n</li>\n</ol>\n"},{"title":"从0到有 如何搭建个人博客","comment":true,"date":"2017-04-04T12:57:25.000Z","cover":"http://ortur5wom.bkt.clouddn.com/cover-blog.jpg","_content":"\n初衷： 搭建一片属于自己的天地，然后开始默默耕耘。\n\n![hexo jekyll](http://ortur5wom.bkt.clouddn.com/vs.png)\n\n个人博客是一个能够让人写写画画的地方，记录生活中偶然遇见的一件趣事、有感而发时的胡言乱语、忧郁烦躁时的倾诉抱怨又或是分享自己的对于世界的看法。而写博客的过程是一个客观的、全面的、独立思考的过程，我们在写博客的过程中思考遇到的各种事、各种人，然后让自身得到成长。\n\n对于技术人员程序员来说，拥有自己的技术博客又是尤其重要。写一篇技术博客就是详细的记录“发现-思考-解决”一个自己碰到的技术难点的过程。写技术博客拥有很多的好处：\n\n- 让自己可以对某一技术点得到全面、深入的掌握\n- 记录自己的成长过程，审视来路获得成长\n- 通过记录分享让后来者少踩一些没有必要的坑\n\n综上，其实很早之前就想搭建自己的个人博客 ，但是对于一个拖延症病入膏肓的人来说，终于还是等到现在才着手来做。\n\n其实有很多第三方的博客系统可以直接使用，像博客园、简书等。其中简书支持md语法，界面也算简洁漂亮，注册账号后即可开始使用，确实有着不错的体验。但是，个人博客要寄存在第三方站点，一是一定会有很多的限制，二是多少让人感觉有些不爽。而对于程序员来说，就更加倾向于自己动手搭建博客了。所以第三方博客系统被pass掉，那么如何搭建真正的个人博客呢。\n\n# 博客系统选择\n\n想要自己搭建博客系统，主流的方法有两种。\n\n1. 自己购买域名、购买虚拟主机作为网站服务器，使用wordpress快速建站系统来搭建个人博客网站。\n2. 使用Github Pages作为免费服务器，Jekyll或者Hexo作为静态网页生成器搭建博客网站。\n\n第一种方法中的域名和虚拟主机都是要收费的，并且私人域名还要通过审核。而第二种方法只要求有github账号就可以了。不仅完全免费，且采用方法二搭建静态博客网站，拥有诸多优势：\n\n- 不用配置服务器\n- 不用数据库\n- 支持markdown方式书写\n- 此外，还可以享受github的版本控制功能\n\n所以我选择了Github+静态网站生成器的方式搭建个人博客。\n\n# 什么是Github Pages\n\n如果你使用过git，那就一定听说过Github，被称为全球最大的同性交友网站，很多著名的开源软件项目都托管在上面。\n\n而Github Pages是github推出的一项功能。Github Pages被设计为专门用来托管由用户编写的静态网站。简单的说，你在本地使用html+css+js写了一个可以用本地浏览器打开的网页。然后你把网页的源码上传到你的Github代码仓库，gihub就会自动生成并托管整个网站，别人就可以访问你的网页了。\n\n此时的Github就充当了免费服务器的功能。\n\n# 什么是静态网站生成器（Jekyll vs Hexo）\n\nhexo和jekyll一样都是静态网站生成工具。\n\n顾名思义，他们的工作就是生成一个静态网站的源码。比如说把你用md语法写的md格式的文章，他们会自动的把它转化为可以在浏览器展示的html文件。\n\nhexo是使用node js开发的，jekyll则是用ruby开发。由于两者的功能是一样的，而我又对js比较熟悉，自然选择了Hexo。其实使用这两个工具你并不需要懂ruby或js，他们的官网都有完善的使用说明，并不需要实际编程。并且两者都有非常多开箱即用的主题，只需要简单的几条命令便可以搭建出一个漂亮的博客。但是如果你有自定义主题的需求，那就最好在你熟悉的语言环境下了。鉴于Hexo越来越火，所以我还是推荐使用Hexo。\n\n现在搭建博客的大体步骤就就很清晰了：\n\n你先在本地通过Hexo生成静态网页源码，然后上传到github，由github生成并托管整个网站。\n\n# 实例操作\n\n至于使用Github+Hexo搭建博客的具体步骤，本来我是想写一篇手把手教学的。但是网上这些文章实在是太多了。一来进行重复工作毫无意义，二来我对于是不是能比他们写的更清晰详细也没有把握。\n\n所以在下面放上两篇使用Github+Hexo搭建博客的详细教程供大家学习！\n\n- [史上最详细的Hexo博客搭建图文教程](https://xuanwo.org/2015/03/26/hexo-intor/)\n\n\n\n","source":"_posts/从0到有-如何搭建个人博客.md","raw":"---\ntitle: 从0到有 如何搭建个人博客\ncomment: true\ndate: 2017-04-04 20:57:25\ntags: [Hexo, GitHub, Git]\ncover: http://ortur5wom.bkt.clouddn.com/cover-blog.jpg\n---\n\n初衷： 搭建一片属于自己的天地，然后开始默默耕耘。\n\n![hexo jekyll](http://ortur5wom.bkt.clouddn.com/vs.png)\n\n个人博客是一个能够让人写写画画的地方，记录生活中偶然遇见的一件趣事、有感而发时的胡言乱语、忧郁烦躁时的倾诉抱怨又或是分享自己的对于世界的看法。而写博客的过程是一个客观的、全面的、独立思考的过程，我们在写博客的过程中思考遇到的各种事、各种人，然后让自身得到成长。\n\n对于技术人员程序员来说，拥有自己的技术博客又是尤其重要。写一篇技术博客就是详细的记录“发现-思考-解决”一个自己碰到的技术难点的过程。写技术博客拥有很多的好处：\n\n- 让自己可以对某一技术点得到全面、深入的掌握\n- 记录自己的成长过程，审视来路获得成长\n- 通过记录分享让后来者少踩一些没有必要的坑\n\n综上，其实很早之前就想搭建自己的个人博客 ，但是对于一个拖延症病入膏肓的人来说，终于还是等到现在才着手来做。\n\n其实有很多第三方的博客系统可以直接使用，像博客园、简书等。其中简书支持md语法，界面也算简洁漂亮，注册账号后即可开始使用，确实有着不错的体验。但是，个人博客要寄存在第三方站点，一是一定会有很多的限制，二是多少让人感觉有些不爽。而对于程序员来说，就更加倾向于自己动手搭建博客了。所以第三方博客系统被pass掉，那么如何搭建真正的个人博客呢。\n\n# 博客系统选择\n\n想要自己搭建博客系统，主流的方法有两种。\n\n1. 自己购买域名、购买虚拟主机作为网站服务器，使用wordpress快速建站系统来搭建个人博客网站。\n2. 使用Github Pages作为免费服务器，Jekyll或者Hexo作为静态网页生成器搭建博客网站。\n\n第一种方法中的域名和虚拟主机都是要收费的，并且私人域名还要通过审核。而第二种方法只要求有github账号就可以了。不仅完全免费，且采用方法二搭建静态博客网站，拥有诸多优势：\n\n- 不用配置服务器\n- 不用数据库\n- 支持markdown方式书写\n- 此外，还可以享受github的版本控制功能\n\n所以我选择了Github+静态网站生成器的方式搭建个人博客。\n\n# 什么是Github Pages\n\n如果你使用过git，那就一定听说过Github，被称为全球最大的同性交友网站，很多著名的开源软件项目都托管在上面。\n\n而Github Pages是github推出的一项功能。Github Pages被设计为专门用来托管由用户编写的静态网站。简单的说，你在本地使用html+css+js写了一个可以用本地浏览器打开的网页。然后你把网页的源码上传到你的Github代码仓库，gihub就会自动生成并托管整个网站，别人就可以访问你的网页了。\n\n此时的Github就充当了免费服务器的功能。\n\n# 什么是静态网站生成器（Jekyll vs Hexo）\n\nhexo和jekyll一样都是静态网站生成工具。\n\n顾名思义，他们的工作就是生成一个静态网站的源码。比如说把你用md语法写的md格式的文章，他们会自动的把它转化为可以在浏览器展示的html文件。\n\nhexo是使用node js开发的，jekyll则是用ruby开发。由于两者的功能是一样的，而我又对js比较熟悉，自然选择了Hexo。其实使用这两个工具你并不需要懂ruby或js，他们的官网都有完善的使用说明，并不需要实际编程。并且两者都有非常多开箱即用的主题，只需要简单的几条命令便可以搭建出一个漂亮的博客。但是如果你有自定义主题的需求，那就最好在你熟悉的语言环境下了。鉴于Hexo越来越火，所以我还是推荐使用Hexo。\n\n现在搭建博客的大体步骤就就很清晰了：\n\n你先在本地通过Hexo生成静态网页源码，然后上传到github，由github生成并托管整个网站。\n\n# 实例操作\n\n至于使用Github+Hexo搭建博客的具体步骤，本来我是想写一篇手把手教学的。但是网上这些文章实在是太多了。一来进行重复工作毫无意义，二来我对于是不是能比他们写的更清晰详细也没有把握。\n\n所以在下面放上两篇使用Github+Hexo搭建博客的详细教程供大家学习！\n\n- [史上最详细的Hexo博客搭建图文教程](https://xuanwo.org/2015/03/26/hexo-intor/)\n\n\n\n","slug":"从0到有-如何搭建个人博客","published":1,"updated":"2017-06-20T04:08:28.055Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8r3chs3000fzoh1jzb3p5z8","content":"<p>初衷： 搭建一片属于自己的天地，然后开始默默耕耘。</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/vs.png\" alt=\"hexo jekyll\"></p>\n<p>个人博客是一个能够让人写写画画的地方，记录生活中偶然遇见的一件趣事、有感而发时的胡言乱语、忧郁烦躁时的倾诉抱怨又或是分享自己的对于世界的看法。而写博客的过程是一个客观的、全面的、独立思考的过程，我们在写博客的过程中思考遇到的各种事、各种人，然后让自身得到成长。</p>\n<p>对于技术人员程序员来说，拥有自己的技术博客又是尤其重要。写一篇技术博客就是详细的记录“发现-思考-解决”一个自己碰到的技术难点的过程。写技术博客拥有很多的好处：</p>\n<ul>\n<li>让自己可以对某一技术点得到全面、深入的掌握</li>\n<li>记录自己的成长过程，审视来路获得成长</li>\n<li>通过记录分享让后来者少踩一些没有必要的坑</li>\n</ul>\n<p>综上，其实很早之前就想搭建自己的个人博客 ，但是对于一个拖延症病入膏肓的人来说，终于还是等到现在才着手来做。</p>\n<p>其实有很多第三方的博客系统可以直接使用，像博客园、简书等。其中简书支持md语法，界面也算简洁漂亮，注册账号后即可开始使用，确实有着不错的体验。但是，个人博客要寄存在第三方站点，一是一定会有很多的限制，二是多少让人感觉有些不爽。而对于程序员来说，就更加倾向于自己动手搭建博客了。所以第三方博客系统被pass掉，那么如何搭建真正的个人博客呢。</p>\n<h1 id=\"博客系统选择\"><a href=\"#博客系统选择\" class=\"headerlink\" title=\"博客系统选择\"></a>博客系统选择</h1><p>想要自己搭建博客系统，主流的方法有两种。</p>\n<ol>\n<li>自己购买域名、购买虚拟主机作为网站服务器，使用wordpress快速建站系统来搭建个人博客网站。</li>\n<li>使用Github Pages作为免费服务器，Jekyll或者Hexo作为静态网页生成器搭建博客网站。</li>\n</ol>\n<p>第一种方法中的域名和虚拟主机都是要收费的，并且私人域名还要通过审核。而第二种方法只要求有github账号就可以了。不仅完全免费，且采用方法二搭建静态博客网站，拥有诸多优势：</p>\n<ul>\n<li>不用配置服务器</li>\n<li>不用数据库</li>\n<li>支持markdown方式书写</li>\n<li>此外，还可以享受github的版本控制功能</li>\n</ul>\n<p>所以我选择了Github+静态网站生成器的方式搭建个人博客。</p>\n<h1 id=\"什么是Github-Pages\"><a href=\"#什么是Github-Pages\" class=\"headerlink\" title=\"什么是Github Pages\"></a>什么是Github Pages</h1><p>如果你使用过git，那就一定听说过Github，被称为全球最大的同性交友网站，很多著名的开源软件项目都托管在上面。</p>\n<p>而Github Pages是github推出的一项功能。Github Pages被设计为专门用来托管由用户编写的静态网站。简单的说，你在本地使用html+css+js写了一个可以用本地浏览器打开的网页。然后你把网页的源码上传到你的Github代码仓库，gihub就会自动生成并托管整个网站，别人就可以访问你的网页了。</p>\n<p>此时的Github就充当了免费服务器的功能。</p>\n<h1 id=\"什么是静态网站生成器（Jekyll-vs-Hexo）\"><a href=\"#什么是静态网站生成器（Jekyll-vs-Hexo）\" class=\"headerlink\" title=\"什么是静态网站生成器（Jekyll vs Hexo）\"></a>什么是静态网站生成器（Jekyll vs Hexo）</h1><p>hexo和jekyll一样都是静态网站生成工具。</p>\n<p>顾名思义，他们的工作就是生成一个静态网站的源码。比如说把你用md语法写的md格式的文章，他们会自动的把它转化为可以在浏览器展示的html文件。</p>\n<p>hexo是使用node js开发的，jekyll则是用ruby开发。由于两者的功能是一样的，而我又对js比较熟悉，自然选择了Hexo。其实使用这两个工具你并不需要懂ruby或js，他们的官网都有完善的使用说明，并不需要实际编程。并且两者都有非常多开箱即用的主题，只需要简单的几条命令便可以搭建出一个漂亮的博客。但是如果你有自定义主题的需求，那就最好在你熟悉的语言环境下了。鉴于Hexo越来越火，所以我还是推荐使用Hexo。</p>\n<p>现在搭建博客的大体步骤就就很清晰了：</p>\n<p>你先在本地通过Hexo生成静态网页源码，然后上传到github，由github生成并托管整个网站。</p>\n<h1 id=\"实例操作\"><a href=\"#实例操作\" class=\"headerlink\" title=\"实例操作\"></a>实例操作</h1><p>至于使用Github+Hexo搭建博客的具体步骤，本来我是想写一篇手把手教学的。但是网上这些文章实在是太多了。一来进行重复工作毫无意义，二来我对于是不是能比他们写的更清晰详细也没有把握。</p>\n<p>所以在下面放上两篇使用Github+Hexo搭建博客的详细教程供大家学习！</p>\n<ul>\n<li><a href=\"https://xuanwo.org/2015/03/26/hexo-intor/\" target=\"_blank\" rel=\"external\">史上最详细的Hexo博客搭建图文教程</a></li>\n</ul>\n","excerpt":"","more":"<p>初衷： 搭建一片属于自己的天地，然后开始默默耕耘。</p>\n<p><img src=\"http://ortur5wom.bkt.clouddn.com/vs.png\" alt=\"hexo jekyll\"></p>\n<p>个人博客是一个能够让人写写画画的地方，记录生活中偶然遇见的一件趣事、有感而发时的胡言乱语、忧郁烦躁时的倾诉抱怨又或是分享自己的对于世界的看法。而写博客的过程是一个客观的、全面的、独立思考的过程，我们在写博客的过程中思考遇到的各种事、各种人，然后让自身得到成长。</p>\n<p>对于技术人员程序员来说，拥有自己的技术博客又是尤其重要。写一篇技术博客就是详细的记录“发现-思考-解决”一个自己碰到的技术难点的过程。写技术博客拥有很多的好处：</p>\n<ul>\n<li>让自己可以对某一技术点得到全面、深入的掌握</li>\n<li>记录自己的成长过程，审视来路获得成长</li>\n<li>通过记录分享让后来者少踩一些没有必要的坑</li>\n</ul>\n<p>综上，其实很早之前就想搭建自己的个人博客 ，但是对于一个拖延症病入膏肓的人来说，终于还是等到现在才着手来做。</p>\n<p>其实有很多第三方的博客系统可以直接使用，像博客园、简书等。其中简书支持md语法，界面也算简洁漂亮，注册账号后即可开始使用，确实有着不错的体验。但是，个人博客要寄存在第三方站点，一是一定会有很多的限制，二是多少让人感觉有些不爽。而对于程序员来说，就更加倾向于自己动手搭建博客了。所以第三方博客系统被pass掉，那么如何搭建真正的个人博客呢。</p>\n<h1 id=\"博客系统选择\"><a href=\"#博客系统选择\" class=\"headerlink\" title=\"博客系统选择\"></a>博客系统选择</h1><p>想要自己搭建博客系统，主流的方法有两种。</p>\n<ol>\n<li>自己购买域名、购买虚拟主机作为网站服务器，使用wordpress快速建站系统来搭建个人博客网站。</li>\n<li>使用Github Pages作为免费服务器，Jekyll或者Hexo作为静态网页生成器搭建博客网站。</li>\n</ol>\n<p>第一种方法中的域名和虚拟主机都是要收费的，并且私人域名还要通过审核。而第二种方法只要求有github账号就可以了。不仅完全免费，且采用方法二搭建静态博客网站，拥有诸多优势：</p>\n<ul>\n<li>不用配置服务器</li>\n<li>不用数据库</li>\n<li>支持markdown方式书写</li>\n<li>此外，还可以享受github的版本控制功能</li>\n</ul>\n<p>所以我选择了Github+静态网站生成器的方式搭建个人博客。</p>\n<h1 id=\"什么是Github-Pages\"><a href=\"#什么是Github-Pages\" class=\"headerlink\" title=\"什么是Github Pages\"></a>什么是Github Pages</h1><p>如果你使用过git，那就一定听说过Github，被称为全球最大的同性交友网站，很多著名的开源软件项目都托管在上面。</p>\n<p>而Github Pages是github推出的一项功能。Github Pages被设计为专门用来托管由用户编写的静态网站。简单的说，你在本地使用html+css+js写了一个可以用本地浏览器打开的网页。然后你把网页的源码上传到你的Github代码仓库，gihub就会自动生成并托管整个网站，别人就可以访问你的网页了。</p>\n<p>此时的Github就充当了免费服务器的功能。</p>\n<h1 id=\"什么是静态网站生成器（Jekyll-vs-Hexo）\"><a href=\"#什么是静态网站生成器（Jekyll-vs-Hexo）\" class=\"headerlink\" title=\"什么是静态网站生成器（Jekyll vs Hexo）\"></a>什么是静态网站生成器（Jekyll vs Hexo）</h1><p>hexo和jekyll一样都是静态网站生成工具。</p>\n<p>顾名思义，他们的工作就是生成一个静态网站的源码。比如说把你用md语法写的md格式的文章，他们会自动的把它转化为可以在浏览器展示的html文件。</p>\n<p>hexo是使用node js开发的，jekyll则是用ruby开发。由于两者的功能是一样的，而我又对js比较熟悉，自然选择了Hexo。其实使用这两个工具你并不需要懂ruby或js，他们的官网都有完善的使用说明，并不需要实际编程。并且两者都有非常多开箱即用的主题，只需要简单的几条命令便可以搭建出一个漂亮的博客。但是如果你有自定义主题的需求，那就最好在你熟悉的语言环境下了。鉴于Hexo越来越火，所以我还是推荐使用Hexo。</p>\n<p>现在搭建博客的大体步骤就就很清晰了：</p>\n<p>你先在本地通过Hexo生成静态网页源码，然后上传到github，由github生成并托管整个网站。</p>\n<h1 id=\"实例操作\"><a href=\"#实例操作\" class=\"headerlink\" title=\"实例操作\"></a>实例操作</h1><p>至于使用Github+Hexo搭建博客的具体步骤，本来我是想写一篇手把手教学的。但是网上这些文章实在是太多了。一来进行重复工作毫无意义，二来我对于是不是能比他们写的更清晰详细也没有把握。</p>\n<p>所以在下面放上两篇使用Github+Hexo搭建博客的详细教程供大家学习！</p>\n<ul>\n<li><a href=\"https://xuanwo.org/2015/03/26/hexo-intor/\">史上最详细的Hexo博客搭建图文教程</a></li>\n</ul>\n"},{"title":"微信开发模式接入","comment":true,"date":"2017-06-22T09:16:50.000Z","_content":"# 微信开发模式\n\n由于微信的广泛使用，微信作为一个集成用户信息、地理位置信息、支付等多种功能的强大平台的优势和便利越来越明显。微信公众号+小程序开发也提供了丰富的功能接口，让第三方平台可以容易的使用这些功能，避免了自己去构建这些功能的麻烦。比如“用户系统”，使用微信账户信息比起构建自己的用户系统还拥有更好的用户基础和用户友好性。而微信开发模式的接入和开发规范是一套固定的流程， 所以对于这种可以复用的代码，仔细的梳理一遍会为以后省去不少麻烦。\n\n接入微信公众平台，我们需要完成三步\n\n# 1、填写服务器配置\n\n![Image](http://ortur5wom.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E6%8E%A5%E5%85%A5.png)\n\n注释： \n\n> url: 开发者用来接收微信消息和事件的接口URL\n> token: 由开发者可以任意填写，用作生成签名\n> EncodingAESKey: 由开发者手动填写或随机生成，将用作消息体加解密密钥\n\n# 2、验证消息的确来自微信服务器\n\n验证服务器地址的有效性上面配置好后，微信服务器将发送GET请求到填写的服务器地址URL上，GET请求携带参数如下表所示\n\n\n| 参数        | 意义                                       |\n| --------- | ---------------------------------------- |\n| signature | 微信加密签名，signature结合了开发者填写的token参数和请求中的timestamp参数、nonce参数。 |\n| timestamp | 时间戳                                      |\n| nonce     | 随机数                                      |\n| echostr   | 随机字符串                                    |\n\n我们接入代码要做的：\n\n> 1）将token、timestamp、nonce三个参数进行字典序排序\n> 2）将三个参数字符串拼接成一个字符串进行sha1加密\n> 3）开发者获得加密后的字符串可与signature对比，标识该请求来源于微信\n\n# 3、依据接口文档实现业务逻辑\n\n我们使用基本的servlet来实现接入的处理逻辑\n\n## 1. 写一个servlet(WeixinServlet)处理微信服务器发来的信息\n\n\n```java\npackage com.immoc.servlet;\n\nimport com.imooc.util.CheckUtil;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\n/**\n * Created by zproo on 2017/6/22.\n */\npublic class WeixinServlet extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        String signature = req.getParameter(\"signature\");\n        String timestamp = req.getParameter(\"timestamp\");\n        String nonce = req.getParameter(\"nonce\");\n        String echostr = req.getParameter(\"echostr\");\n\n        PrintWriter out = resp.getWriter();\n        if (CheckUtil.checkSignature(signature, timestamp, nonce)) {\n            out.print(echostr);\n        }\n    }\n\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        super.doPost(req, resp);\n    }\n}\n```\n\n## 2.把微信服务器发来信息的处理函数封装在CheckUtil类中\n\n```java\npackage com.imooc.util;\n\nimport java.lang.reflect.Array;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.Arrays;\n\n/**\n * Created by zproo on 2017/6/22.\n */\npublic class CheckUtil {\n    private static final String token = \"zproo\";\n\n    public static boolean checkSignature(String signature, String timestamp, String nonce) {\n        String[] arr = new String[]{token, timestamp, nonce};\n\n        // 排序\n        Arrays.sort(arr);\n        // 生成字符串\n        StringBuffer content = new StringBuffer();\n        for (int i = 0; i < arr.length; i++) {\n            content.append(arr[i]);\n        }\n\n        // sha1加密\n        String temp = SHA1(content.toString());\n\n        return temp.equals(signature);\n    }\n\n    /**\n     * SHA1加密算法\n     * @param decript\n     * @return\n     */\n    public static String SHA1(String decript) {\n        try {\n            MessageDigest digest = MessageDigest.getInstance(\"SHA-1\");\n            digest.update(decript.getBytes());\n            byte messageDigest[] = digest.digest();\n            StringBuffer hexString = new StringBuffer();\n            for (int i = 0; i < messageDigest.length; i++) {\n                String shaHex = Integer.toHexString(messageDigest[i] & 0xFF);\n                if (shaHex.length() < 2) {\n                    hexString.append(0);\n                }\n                hexString.append(shaHex);\n            }\n            return hexString.toString();\n\n        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n        }\n        return \"\";\n    }\n}\n```\n\n## 3.在web.xml配置servlet\n\n```xml\n<servlet>\n        <servlet-name>weixinServlet</servlet-name>\n        <servlet-class>com.immoc.servlet.WeixinServlet</servlet-class>\n    </servlet>\n    <servlet-mapping>\n        <servlet-name>weixinServlet</servlet-name>\n        <url-pattern>/wx.do</url-pattern>\n    </servlet-mapping>\n```","source":"_posts/微信开发模式接入.md","raw":"---\ntitle: 微信开发模式接入\ncomment: true\ndate: 2017-06-22 17:16:50\ntags: [ Servlet, Java, 微信开发]\n---\n# 微信开发模式\n\n由于微信的广泛使用，微信作为一个集成用户信息、地理位置信息、支付等多种功能的强大平台的优势和便利越来越明显。微信公众号+小程序开发也提供了丰富的功能接口，让第三方平台可以容易的使用这些功能，避免了自己去构建这些功能的麻烦。比如“用户系统”，使用微信账户信息比起构建自己的用户系统还拥有更好的用户基础和用户友好性。而微信开发模式的接入和开发规范是一套固定的流程， 所以对于这种可以复用的代码，仔细的梳理一遍会为以后省去不少麻烦。\n\n接入微信公众平台，我们需要完成三步\n\n# 1、填写服务器配置\n\n![Image](http://ortur5wom.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E6%8E%A5%E5%85%A5.png)\n\n注释： \n\n> url: 开发者用来接收微信消息和事件的接口URL\n> token: 由开发者可以任意填写，用作生成签名\n> EncodingAESKey: 由开发者手动填写或随机生成，将用作消息体加解密密钥\n\n# 2、验证消息的确来自微信服务器\n\n验证服务器地址的有效性上面配置好后，微信服务器将发送GET请求到填写的服务器地址URL上，GET请求携带参数如下表所示\n\n\n| 参数        | 意义                                       |\n| --------- | ---------------------------------------- |\n| signature | 微信加密签名，signature结合了开发者填写的token参数和请求中的timestamp参数、nonce参数。 |\n| timestamp | 时间戳                                      |\n| nonce     | 随机数                                      |\n| echostr   | 随机字符串                                    |\n\n我们接入代码要做的：\n\n> 1）将token、timestamp、nonce三个参数进行字典序排序\n> 2）将三个参数字符串拼接成一个字符串进行sha1加密\n> 3）开发者获得加密后的字符串可与signature对比，标识该请求来源于微信\n\n# 3、依据接口文档实现业务逻辑\n\n我们使用基本的servlet来实现接入的处理逻辑\n\n## 1. 写一个servlet(WeixinServlet)处理微信服务器发来的信息\n\n\n```java\npackage com.immoc.servlet;\n\nimport com.imooc.util.CheckUtil;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\n/**\n * Created by zproo on 2017/6/22.\n */\npublic class WeixinServlet extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        String signature = req.getParameter(\"signature\");\n        String timestamp = req.getParameter(\"timestamp\");\n        String nonce = req.getParameter(\"nonce\");\n        String echostr = req.getParameter(\"echostr\");\n\n        PrintWriter out = resp.getWriter();\n        if (CheckUtil.checkSignature(signature, timestamp, nonce)) {\n            out.print(echostr);\n        }\n    }\n\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        super.doPost(req, resp);\n    }\n}\n```\n\n## 2.把微信服务器发来信息的处理函数封装在CheckUtil类中\n\n```java\npackage com.imooc.util;\n\nimport java.lang.reflect.Array;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.Arrays;\n\n/**\n * Created by zproo on 2017/6/22.\n */\npublic class CheckUtil {\n    private static final String token = \"zproo\";\n\n    public static boolean checkSignature(String signature, String timestamp, String nonce) {\n        String[] arr = new String[]{token, timestamp, nonce};\n\n        // 排序\n        Arrays.sort(arr);\n        // 生成字符串\n        StringBuffer content = new StringBuffer();\n        for (int i = 0; i < arr.length; i++) {\n            content.append(arr[i]);\n        }\n\n        // sha1加密\n        String temp = SHA1(content.toString());\n\n        return temp.equals(signature);\n    }\n\n    /**\n     * SHA1加密算法\n     * @param decript\n     * @return\n     */\n    public static String SHA1(String decript) {\n        try {\n            MessageDigest digest = MessageDigest.getInstance(\"SHA-1\");\n            digest.update(decript.getBytes());\n            byte messageDigest[] = digest.digest();\n            StringBuffer hexString = new StringBuffer();\n            for (int i = 0; i < messageDigest.length; i++) {\n                String shaHex = Integer.toHexString(messageDigest[i] & 0xFF);\n                if (shaHex.length() < 2) {\n                    hexString.append(0);\n                }\n                hexString.append(shaHex);\n            }\n            return hexString.toString();\n\n        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n        }\n        return \"\";\n    }\n}\n```\n\n## 3.在web.xml配置servlet\n\n```xml\n<servlet>\n        <servlet-name>weixinServlet</servlet-name>\n        <servlet-class>com.immoc.servlet.WeixinServlet</servlet-class>\n    </servlet>\n    <servlet-mapping>\n        <servlet-name>weixinServlet</servlet-name>\n        <url-pattern>/wx.do</url-pattern>\n    </servlet-mapping>\n```","slug":"微信开发模式接入","published":1,"updated":"2017-07-11T09:24:48.817Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8r3chs5000gzoh1cob7upnu","content":"<h1 id=\"微信开发模式\"><a href=\"#微信开发模式\" class=\"headerlink\" title=\"微信开发模式\"></a>微信开发模式</h1><p>由于微信的广泛使用，微信作为一个集成用户信息、地理位置信息、支付等多种功能的强大平台的优势和便利越来越明显。微信公众号+小程序开发也提供了丰富的功能接口，让第三方平台可以容易的使用这些功能，避免了自己去构建这些功能的麻烦。比如“用户系统”，使用微信账户信息比起构建自己的用户系统还拥有更好的用户基础和用户友好性。而微信开发模式的接入和开发规范是一套固定的流程， 所以对于这种可以复用的代码，仔细的梳理一遍会为以后省去不少麻烦。</p>\n<p>接入微信公众平台，我们需要完成三步</p>\n<h1 id=\"1、填写服务器配置\"><a href=\"#1、填写服务器配置\" class=\"headerlink\" title=\"1、填写服务器配置\"></a>1、填写服务器配置</h1><p><img src=\"http://ortur5wom.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E6%8E%A5%E5%85%A5.png\" alt=\"Image\"></p>\n<p>注释： </p>\n<blockquote>\n<p>url: 开发者用来接收微信消息和事件的接口URL<br>token: 由开发者可以任意填写，用作生成签名<br>EncodingAESKey: 由开发者手动填写或随机生成，将用作消息体加解密密钥</p>\n</blockquote>\n<h1 id=\"2、验证消息的确来自微信服务器\"><a href=\"#2、验证消息的确来自微信服务器\" class=\"headerlink\" title=\"2、验证消息的确来自微信服务器\"></a>2、验证消息的确来自微信服务器</h1><p>验证服务器地址的有效性上面配置好后，微信服务器将发送GET请求到填写的服务器地址URL上，GET请求携带参数如下表所示</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>signature</td>\n<td>微信加密签名，signature结合了开发者填写的token参数和请求中的timestamp参数、nonce参数。</td>\n</tr>\n<tr>\n<td>timestamp</td>\n<td>时间戳</td>\n</tr>\n<tr>\n<td>nonce</td>\n<td>随机数</td>\n</tr>\n<tr>\n<td>echostr</td>\n<td>随机字符串</td>\n</tr>\n</tbody>\n</table>\n<p>我们接入代码要做的：</p>\n<blockquote>\n<p>1）将token、timestamp、nonce三个参数进行字典序排序<br>2）将三个参数字符串拼接成一个字符串进行sha1加密<br>3）开发者获得加密后的字符串可与signature对比，标识该请求来源于微信</p>\n</blockquote>\n<h1 id=\"3、依据接口文档实现业务逻辑\"><a href=\"#3、依据接口文档实现业务逻辑\" class=\"headerlink\" title=\"3、依据接口文档实现业务逻辑\"></a>3、依据接口文档实现业务逻辑</h1><p>我们使用基本的servlet来实现接入的处理逻辑</p>\n<h2 id=\"1-写一个servlet-WeixinServlet-处理微信服务器发来的信息\"><a href=\"#1-写一个servlet-WeixinServlet-处理微信服务器发来的信息\" class=\"headerlink\" title=\"1. 写一个servlet(WeixinServlet)处理微信服务器发来的信息\"></a>1. 写一个servlet(WeixinServlet)处理微信服务器发来的信息</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.immoc.servlet;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.imooc.util.CheckUtil;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Created by zproo on 2017/6/22.</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WeixinServlet</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</div><div class=\"line\">        String signature = req.getParameter(<span class=\"string\">\"signature\"</span>);</div><div class=\"line\">        String timestamp = req.getParameter(<span class=\"string\">\"timestamp\"</span>);</div><div class=\"line\">        String nonce = req.getParameter(<span class=\"string\">\"nonce\"</span>);</div><div class=\"line\">        String echostr = req.getParameter(<span class=\"string\">\"echostr\"</span>);</div><div class=\"line\"></div><div class=\"line\">        PrintWriter out = resp.getWriter();</div><div class=\"line\">        <span class=\"keyword\">if</span> (CheckUtil.checkSignature(signature, timestamp, nonce)) &#123;</div><div class=\"line\">            out.print(echostr);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.doPost(req, resp);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"2-把微信服务器发来信息的处理函数封装在CheckUtil类中\"><a href=\"#2-把微信服务器发来信息的处理函数封装在CheckUtil类中\" class=\"headerlink\" title=\"2.把微信服务器发来信息的处理函数封装在CheckUtil类中\"></a>2.把微信服务器发来信息的处理函数封装在CheckUtil类中</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.imooc.util;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Array;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.MessageDigest;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.NoSuchAlgorithmException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Created by zproo on 2017/6/22.</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CheckUtil</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String token = <span class=\"string\">\"zproo\"</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">checkSignature</span><span class=\"params\">(String signature, String timestamp, String nonce)</span> </span>&#123;</div><div class=\"line\">        String[] arr = <span class=\"keyword\">new</span> String[]&#123;token, timestamp, nonce&#125;;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// 排序</span></div><div class=\"line\">        Arrays.sort(arr);</div><div class=\"line\">        <span class=\"comment\">// 生成字符串</span></div><div class=\"line\">        StringBuffer content = <span class=\"keyword\">new</span> StringBuffer();</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</div><div class=\"line\">            content.append(arr[i]);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// sha1加密</span></div><div class=\"line\">        String temp = SHA1(content.toString());</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> temp.equals(signature);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * SHA1加密算法</div><div class=\"line\">     * <span class=\"doctag\">@param</span> decript</div><div class=\"line\">     * <span class=\"doctag\">@return</span></div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">SHA1</span><span class=\"params\">(String decript)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            MessageDigest digest = MessageDigest.getInstance(<span class=\"string\">\"SHA-1\"</span>);</div><div class=\"line\">            digest.update(decript.getBytes());</div><div class=\"line\">            <span class=\"keyword\">byte</span> messageDigest[] = digest.digest();</div><div class=\"line\">            StringBuffer hexString = <span class=\"keyword\">new</span> StringBuffer();</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; messageDigest.length; i++) &#123;</div><div class=\"line\">                String shaHex = Integer.toHexString(messageDigest[i] &amp; <span class=\"number\">0xFF</span>);</div><div class=\"line\">                <span class=\"keyword\">if</span> (shaHex.length() &lt; <span class=\"number\">2</span>) &#123;</div><div class=\"line\">                    hexString.append(<span class=\"number\">0</span>);</div><div class=\"line\">                &#125;</div><div class=\"line\">                hexString.append(shaHex);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> hexString.toString();</div><div class=\"line\"></div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (NoSuchAlgorithmException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"3-在web-xml配置servlet\"><a href=\"#3-在web-xml配置servlet\" class=\"headerlink\" title=\"3.在web.xml配置servlet\"></a>3.在web.xml配置servlet</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>weixinServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>com.immoc.servlet.WeixinServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>weixinServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/wx.do<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></div></pre></td></tr></table></figure>","excerpt":"","more":"<h1 id=\"微信开发模式\"><a href=\"#微信开发模式\" class=\"headerlink\" title=\"微信开发模式\"></a>微信开发模式</h1><p>由于微信的广泛使用，微信作为一个集成用户信息、地理位置信息、支付等多种功能的强大平台的优势和便利越来越明显。微信公众号+小程序开发也提供了丰富的功能接口，让第三方平台可以容易的使用这些功能，避免了自己去构建这些功能的麻烦。比如“用户系统”，使用微信账户信息比起构建自己的用户系统还拥有更好的用户基础和用户友好性。而微信开发模式的接入和开发规范是一套固定的流程， 所以对于这种可以复用的代码，仔细的梳理一遍会为以后省去不少麻烦。</p>\n<p>接入微信公众平台，我们需要完成三步</p>\n<h1 id=\"1、填写服务器配置\"><a href=\"#1、填写服务器配置\" class=\"headerlink\" title=\"1、填写服务器配置\"></a>1、填写服务器配置</h1><p><img src=\"http://ortur5wom.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E6%8E%A5%E5%85%A5.png\" alt=\"Image\"></p>\n<p>注释： </p>\n<blockquote>\n<p>url: 开发者用来接收微信消息和事件的接口URL<br>token: 由开发者可以任意填写，用作生成签名<br>EncodingAESKey: 由开发者手动填写或随机生成，将用作消息体加解密密钥</p>\n</blockquote>\n<h1 id=\"2、验证消息的确来自微信服务器\"><a href=\"#2、验证消息的确来自微信服务器\" class=\"headerlink\" title=\"2、验证消息的确来自微信服务器\"></a>2、验证消息的确来自微信服务器</h1><p>验证服务器地址的有效性上面配置好后，微信服务器将发送GET请求到填写的服务器地址URL上，GET请求携带参数如下表所示</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>signature</td>\n<td>微信加密签名，signature结合了开发者填写的token参数和请求中的timestamp参数、nonce参数。</td>\n</tr>\n<tr>\n<td>timestamp</td>\n<td>时间戳</td>\n</tr>\n<tr>\n<td>nonce</td>\n<td>随机数</td>\n</tr>\n<tr>\n<td>echostr</td>\n<td>随机字符串</td>\n</tr>\n</tbody>\n</table>\n<p>我们接入代码要做的：</p>\n<blockquote>\n<p>1）将token、timestamp、nonce三个参数进行字典序排序<br>2）将三个参数字符串拼接成一个字符串进行sha1加密<br>3）开发者获得加密后的字符串可与signature对比，标识该请求来源于微信</p>\n</blockquote>\n<h1 id=\"3、依据接口文档实现业务逻辑\"><a href=\"#3、依据接口文档实现业务逻辑\" class=\"headerlink\" title=\"3、依据接口文档实现业务逻辑\"></a>3、依据接口文档实现业务逻辑</h1><p>我们使用基本的servlet来实现接入的处理逻辑</p>\n<h2 id=\"1-写一个servlet-WeixinServlet-处理微信服务器发来的信息\"><a href=\"#1-写一个servlet-WeixinServlet-处理微信服务器发来的信息\" class=\"headerlink\" title=\"1. 写一个servlet(WeixinServlet)处理微信服务器发来的信息\"></a>1. 写一个servlet(WeixinServlet)处理微信服务器发来的信息</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.immoc.servlet;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.imooc.util.CheckUtil;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * Created by zproo on 2017/6/22.</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WeixinServlet</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</div><div class=\"line\">        String signature = req.getParameter(<span class=\"string\">\"signature\"</span>);</div><div class=\"line\">        String timestamp = req.getParameter(<span class=\"string\">\"timestamp\"</span>);</div><div class=\"line\">        String nonce = req.getParameter(<span class=\"string\">\"nonce\"</span>);</div><div class=\"line\">        String echostr = req.getParameter(<span class=\"string\">\"echostr\"</span>);</div><div class=\"line\"></div><div class=\"line\">        PrintWriter out = resp.getWriter();</div><div class=\"line\">        <span class=\"keyword\">if</span> (CheckUtil.checkSignature(signature, timestamp, nonce)) &#123;</div><div class=\"line\">            out.print(echostr);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.doPost(req, resp);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"2-把微信服务器发来信息的处理函数封装在CheckUtil类中\"><a href=\"#2-把微信服务器发来信息的处理函数封装在CheckUtil类中\" class=\"headerlink\" title=\"2.把微信服务器发来信息的处理函数封装在CheckUtil类中\"></a>2.把微信服务器发来信息的处理函数封装在CheckUtil类中</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.imooc.util;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Array;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.MessageDigest;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.NoSuchAlgorithmException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * Created by zproo on 2017/6/22.</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CheckUtil</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String token = <span class=\"string\">\"zproo\"</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">checkSignature</span><span class=\"params\">(String signature, String timestamp, String nonce)</span> </span>&#123;</div><div class=\"line\">        String[] arr = <span class=\"keyword\">new</span> String[]&#123;token, timestamp, nonce&#125;;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// 排序</span></div><div class=\"line\">        Arrays.sort(arr);</div><div class=\"line\">        <span class=\"comment\">// 生成字符串</span></div><div class=\"line\">        StringBuffer content = <span class=\"keyword\">new</span> StringBuffer();</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</div><div class=\"line\">            content.append(arr[i]);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// sha1加密</span></div><div class=\"line\">        String temp = SHA1(content.toString());</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> temp.equals(signature);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * SHA1加密算法</div><div class=\"line\">     * <span class=\"doctag\">@param</span> decript</div><div class=\"line\">     * <span class=\"doctag\">@return</span></div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">SHA1</span><span class=\"params\">(String decript)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            MessageDigest digest = MessageDigest.getInstance(<span class=\"string\">\"SHA-1\"</span>);</div><div class=\"line\">            digest.update(decript.getBytes());</div><div class=\"line\">            <span class=\"keyword\">byte</span> messageDigest[] = digest.digest();</div><div class=\"line\">            StringBuffer hexString = <span class=\"keyword\">new</span> StringBuffer();</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; messageDigest.length; i++) &#123;</div><div class=\"line\">                String shaHex = Integer.toHexString(messageDigest[i] &amp; <span class=\"number\">0xFF</span>);</div><div class=\"line\">                <span class=\"keyword\">if</span> (shaHex.length() &lt; <span class=\"number\">2</span>) &#123;</div><div class=\"line\">                    hexString.append(<span class=\"number\">0</span>);</div><div class=\"line\">                &#125;</div><div class=\"line\">                hexString.append(shaHex);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> hexString.toString();</div><div class=\"line\"></div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (NoSuchAlgorithmException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"3-在web-xml配置servlet\"><a href=\"#3-在web-xml配置servlet\" class=\"headerlink\" title=\"3.在web.xml配置servlet\"></a>3.在web.xml配置servlet</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>weixinServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>com.immoc.servlet.WeixinServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>weixinServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/wx.do<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></div></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj8r3chrg0001zoh1dqweirc6","tag_id":"cj8r3chrr0005zoh11a1fi98p","_id":"cj8r3chs8000jzoh1uj6z0iwv"},{"post_id":"cj8r3chrg0001zoh1dqweirc6","tag_id":"cj8r3chrz000bzoh165dqzzzu","_id":"cj8r3chs9000kzoh1vu4qp5il"},{"post_id":"cj8r3chrg0001zoh1dqweirc6","tag_id":"cj8r3chs2000ezoh1v73qkc3c","_id":"cj8r3chsa000mzoh1gdjq12gd"},{"post_id":"cj8r3chrg0001zoh1dqweirc6","tag_id":"cj8r3chs7000hzoh1zmsbgwgm","_id":"cj8r3chsb000nzoh1zox5sdjl"},{"post_id":"cj8r3chrm0003zoh1t0hd53hh","tag_id":"cj8r3chs7000izoh1vndff1fr","_id":"cj8r3chsi000pzoh172j2pnaj"},{"post_id":"cj8r3chrm0003zoh1t0hd53hh","tag_id":"cj8r3chs9000lzoh18nlgwtga","_id":"cj8r3chsj000qzoh1stxr0zkb"},{"post_id":"cj8r3chrt0006zoh1onm2hhsn","tag_id":"cj8r3chsb000ozoh1z25sqchu","_id":"cj8r3chsm000tzoh1xo2ilmna"},{"post_id":"cj8r3chrt0006zoh1onm2hhsn","tag_id":"cj8r3chsl000rzoh171i6337c","_id":"cj8r3chsm000uzoh102swvygk"},{"post_id":"cj8r3chrx0008zoh1e3uqxb79","tag_id":"cj8r3chsl000szoh1yeq6y2u6","_id":"cj8r3chsp0010zoh1ngtzcs2z"},{"post_id":"cj8r3chrx0008zoh1e3uqxb79","tag_id":"cj8r3chsm000vzoh1j7wborab","_id":"cj8r3chsq0011zoh1y9txfn0p"},{"post_id":"cj8r3chrx0008zoh1e3uqxb79","tag_id":"cj8r3chsn000wzoh1qtwwlevt","_id":"cj8r3chsq0013zoh1d116mc4c"},{"post_id":"cj8r3chrx0008zoh1e3uqxb79","tag_id":"cj8r3chso000xzoh1roxxtn44","_id":"cj8r3chsr0014zoh1douq4uho"},{"post_id":"cj8r3chrx0008zoh1e3uqxb79","tag_id":"cj8r3chso000yzoh1jpzt060e","_id":"cj8r3chsr0016zoh148y0bjxn"},{"post_id":"cj8r3chry000azoh1aqpteco0","tag_id":"cj8r3chsp000zzoh1dordaemq","_id":"cj8r3chst0018zoh10o8e8fo8"},{"post_id":"cj8r3chry000azoh1aqpteco0","tag_id":"cj8r3chsq0012zoh13udue48m","_id":"cj8r3chst0019zoh1gnm80bex"},{"post_id":"cj8r3chry000azoh1aqpteco0","tag_id":"cj8r3chsr0015zoh1fufr19h0","_id":"cj8r3chsu001bzoh1zuw9m7l0"},{"post_id":"cj8r3chs0000czoh1fhl59v59","tag_id":"cj8r3chs7000izoh1vndff1fr","_id":"cj8r3chsv001gzoh17qd87ifu"},{"post_id":"cj8r3chs0000czoh1fhl59v59","tag_id":"cj8r3chs9000lzoh18nlgwtga","_id":"cj8r3chsw001hzoh1u77yzt99"},{"post_id":"cj8r3chs0000czoh1fhl59v59","tag_id":"cj8r3chsu001czoh1t5djqicc","_id":"cj8r3chsw001jzoh141akd6zu"},{"post_id":"cj8r3chs0000czoh1fhl59v59","tag_id":"cj8r3chsu001dzoh152x2l81j","_id":"cj8r3chsw001kzoh1sz382nvf"},{"post_id":"cj8r3chs0000czoh1fhl59v59","tag_id":"cj8r3chsv001ezoh17f9drvkg","_id":"cj8r3chsx001mzoh180flvti7"},{"post_id":"cj8r3chs1000dzoh1jrnm3raq","tag_id":"cj8r3chsv001fzoh1d5p82gro","_id":"cj8r3chsx001ozoh1t7t7e6bh"},{"post_id":"cj8r3chs1000dzoh1jrnm3raq","tag_id":"cj8r3chsw001izoh1zruyq1gi","_id":"cj8r3chsy001pzoh1ctr7ypqb"},{"post_id":"cj8r3chs1000dzoh1jrnm3raq","tag_id":"cj8r3chsw001lzoh15rsnyaid","_id":"cj8r3chsz001rzoh1tbu91it0"},{"post_id":"cj8r3chs3000fzoh1jzb3p5z8","tag_id":"cj8r3chs7000izoh1vndff1fr","_id":"cj8r3chsz001tzoh16xwg0ik1"},{"post_id":"cj8r3chs3000fzoh1jzb3p5z8","tag_id":"cj8r3chs9000lzoh18nlgwtga","_id":"cj8r3cht0001uzoh18vw7a74c"},{"post_id":"cj8r3chs3000fzoh1jzb3p5z8","tag_id":"cj8r3chrz000bzoh165dqzzzu","_id":"cj8r3cht0001wzoh15of5aygd"},{"post_id":"cj8r3chs5000gzoh1cob7upnu","tag_id":"cj8r3chsz001szoh1rojyxefx","_id":"cj8r3cht1001yzoh1bba9ep5l"},{"post_id":"cj8r3chs5000gzoh1cob7upnu","tag_id":"cj8r3chsl000rzoh171i6337c","_id":"cj8r3cht1001zzoh1h4o0jc7x"},{"post_id":"cj8r3chs5000gzoh1cob7upnu","tag_id":"cj8r3chsw001lzoh15rsnyaid","_id":"cj8r3cht10020zoh1p38663xs"}],"Tag":[{"name":"Git bash","_id":"cj8r3chrr0005zoh11a1fi98p"},{"name":"Git","_id":"cj8r3chrz000bzoh165dqzzzu"},{"name":"Scheme","_id":"cj8r3chs2000ezoh1v73qkc3c"},{"name":"Shell","_id":"cj8r3chs7000hzoh1zmsbgwgm"},{"name":"Hexo","_id":"cj8r3chs7000izoh1vndff1fr"},{"name":"GitHub","_id":"cj8r3chs9000lzoh18nlgwtga"},{"name":"HttpClient","_id":"cj8r3chsb000ozoh1z25sqchu"},{"name":"Java","_id":"cj8r3chsl000rzoh171i6337c"},{"name":"jade","_id":"cj8r3chsl000szoh1yeq6y2u6"},{"name":"模板引擎","_id":"cj8r3chsm000vzoh1j7wborab"},{"name":"angualr","_id":"cj8r3chsn000wzoh1qtwwlevt"},{"name":"mvc","_id":"cj8r3chso000xzoh1roxxtn44"},{"name":"Nodejs","_id":"cj8r3chso000yzoh1jpzt060e"},{"name":"jsp","_id":"cj8r3chsp000zzoh1dordaemq"},{"name":"session","_id":"cj8r3chsq0012zoh13udue48m"},{"name":"el表达式","_id":"cj8r3chsr0015zoh1fufr19h0"},{"name":"Canvas","_id":"cj8r3chsu001czoh1t5djqicc"},{"name":"Next","_id":"cj8r3chsu001dzoh152x2l81j"},{"name":"JavaScript","_id":"cj8r3chsv001ezoh17f9drvkg"},{"name":"ngrok","_id":"cj8r3chsv001fzoh1d5p82gro"},{"name":"外网映射","_id":"cj8r3chsw001izoh1zruyq1gi"},{"name":"微信开发","_id":"cj8r3chsw001lzoh15rsnyaid"},{"name":"Servlet","_id":"cj8r3chsz001szoh1rojyxefx"}]}}